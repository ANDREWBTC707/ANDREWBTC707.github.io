{"version":3,"sources":["Main.elm","serviceWorker.js","AlgoBullABI.js","Erc20ABI.js","chainConfig.js","index.js"],"names":["scope","F","arity","fun","wrapper","a","f","F2","b","F3","c","F4","d","F5","e","A2","A3","A4","A5","_JsArray_initialize","size","offset","func","result","Array","i","_JsArray_initializeFromList","max","ls","length","_Utils_Tuple2","_Debug_crash","identifier","Error","_Utils_eq","x","y","pair","stack","isEqual","_Utils_eqHelp","pop","depth","push","key","$","$elm$core$Dict$toList","_Utils_cmp","ord","_Utils_compare","n","$elm$core$Basics$LT","$elm$core$Basics$GT","$elm$core$Basics$EQ","_Utils_Tuple0","_Utils_update","oldRecord","updatedFields","newRecord","_Utils_append","_Utils_ap","xs","ys","root","_List_Cons","curr","_List_Nil","hd","tl","_List_cons","_List_fromArray","arr","out","_List_toArray","_Basics_modBy","modulus","answer","_Basics_ceiling","Math","ceil","_Basics_floor","floor","_Basics_round","round","_Basics_log","log","_String_cons","chr","str","_String_append","_String_foldl","state","string","len","char","word","charCodeAt","_String_split","sep","split","_String_join","strs","join","_Json_decodePrim","decoder","value","_Json_expecting","$elm$core$Result$Ok","isFinite","_Json_decodeBool","_Json_decodeString","_Json_wrap","String","_Json_decodeField","field","_Json_andThen","callback","h","_Json_map1","d1","decoders","g","_Json_mapMany","_Json_run","_Json_runHelp","_Json_unwrap","_Json_isArray","_Json_runArrayDecoder","_Json_toElmArray","$elm$core$Result$isOk","$elm$core$Result$Err","$elm$json$Json$Decode$Field","index","$elm$json$Json$Decode$Index","keyValuePairs","hasOwnProperty","$elm$core$List$reverse","errors","temp","$elm$json$Json$Decode$OneOf","$elm$json$Json$Decode$Failure","toElmValue","array","isArray","FileList","$elm$core$Array$initialize","type","_Json_equality","_Json_listEquality","aDecoders","bDecoders","_Scheduler_succeed","_Scheduler_binding","_Scheduler_andThen","task","_Scheduler_guid","_Scheduler_rawSpawn","proc","_Scheduler_enqueue","_Scheduler_working","_Scheduler_queue","shift","_Scheduler_step","rootTag","newRoot","_Platform_effectManagers","_Platform_instantiateManager","info","sendToApp","router","undefined","onEffects","onSelfMsg","cmdMap","subMap","loop","msg","j","_Platform_sendToApp","_Platform_leaf","home","k","l","_Platform_batch","list","m","_Platform_effectsQueue","_Platform_effectsActive","_Platform_enqueueEffects","managers","cmdBag","subBag","p","q","r","fx","_Platform_dispatchEffects","effectsDict","_Platform_gatherEffects","isCmd","bag","taggers","effect","t","s","_Platform_toEffect","newEffect","effects","_Platform_insert","o","_Platform_checkPortName","name","_Platform_outgoingPort","converter","_Platform_outgoingPortMap","u","_Platform_setupOutgoingPort","tagger","subs","init","id","setTimeout","clearTimeout","cmdList","currentSubs","subscribe","unsubscribe","slice","indexOf","splice","_Platform_incomingPort","_Platform_incomingPortMap","_Platform_setupIncomingPort","_VirtualDom_divertHrefToApp","finalTagger","subList","send","incomingValue","_VirtualDom_doc","document","_VirtualDom_appendChild","parent","child","appendChild","_VirtualDom_text","_VirtualDom_passiveSupported","_VirtualDom_nodeNS","namespace","tag","factList","kidList","kids","descendantsCount","kid","_VirtualDom_organizeFacts","_VirtualDom_node","_VirtualDom_keyedNodeNS","_VirtualDom_keyedNode","_VirtualDom_on","handler","_VirtualDom_property","_VirtualDom_attribute","_VirtualDom_RE_script","_VirtualDom_RE_on_formAction","_VirtualDom_RE_js_html","_VirtualDom_noScript","test","facts","entry","subFacts","_VirtualDom_addClass","object","newClass","classes","_VirtualDom_render","vNode","eventNode","createTextNode","subNode","subEventRoot","domNode","elm_event_node_ref","_VirtualDom_applyFacts","createElementNS","createElement","addEventListener","_VirtualDom_applyStyles","_VirtualDom_applyEvents","_VirtualDom_applyAttrs","_VirtualDom_applyAttrsNS","styles","domNodeStyle","style","attrs","setAttribute","removeAttribute","nsAttrs","setAttributeNS","removeAttributeNS","events","allCallbacks","elmFs","newHandler","oldCallback","removeEventListener","_VirtualDom_makeCallback","passive","$elm$virtual_dom$VirtualDom$toHandlerInt","window","Object","defineProperty","get","initialHandler","event","message","O","stopPropagation","bm","currentEventNode","bj","preventDefault","_VirtualDom_equalEvents","_VirtualDom_pushPatch","patches","data","patch","_VirtualDom_diffHelp","xType","yType","keyedNode","keyedKids","_VirtualDom_dekey","xRefs","yRefs","same","subPatches","xTaggers","yTaggers","nesting","xSubNode","ySubNode","as","bs","_VirtualDom_pairwiseRefEqual","_VirtualDom_diffNodes","_VirtualDom_diffKids","_VirtualDom_diffKeyedKids","factsDiff","_VirtualDom_diffFacts","diffKids","category","diff","xKey","xValue","yValue","subDiff","yKey","xParent","yParent","xKids","yKids","xLen","yLen","v","minLen","xKid","rootIndex","localPatches","changes","inserts","xIndex","yIndex","xNode","yNode","newMatch","oldMatch","xNext","yNext","xNextKey","xNextNode","yNextKey","yNextNode","_VirtualDom_insertNode","_VirtualDom_removeNode","endInserts","w","_VirtualDom_POSTFIX","vnode","A","z","_VirtualDom_applyPatches","rootDomNode","oldVirtualNode","_VirtualDom_addDomNodes","_VirtualDom_addDomNodesHelp","low","high","patchType","vKids","childNodes","vKid","nextLow","_VirtualDom_applyPatchesHelp","localDomNode","newNode","_VirtualDom_applyPatch","parentNode","replaceChild","_VirtualDom_applyPatchRedraw","replaceData","removeChild","theEnd","insertBefore","frag","createDocumentFragment","_VirtualDom_applyPatchReorderEndInsertsHelp","insert","node","_VirtualDom_applyPatchReorder","_Browser_element","impl","flagDecoder","debugMetadata","args","update","subscriptions","stepperBuilder","initPair","model","stepper","ports","manager","_Platform_setupEffects","viewMetadata","_Platform_initialize","cx","cL","cJ","initialModel","view","cN","currNode","_VirtualDom_virtualize","nodeType","textContent","attrList","attributes","attr","tagName","toLowerCase","draw","updateIfNeeded","_Browser_requestAnimationFrame","nextModel","isSync","_Browser_makeAnimator","nextNode","_VirtualDom_diff","cancelAnimationFrame","requestAnimationFrame","$elm$core$List$cons","$elm$core$Dict$foldr","acc","left","$temp$func","$temp$acc","dict","$author$project$Main$AccountFailed","$author$project$Main$AccountSucceeded","$author$project$Main$ApproveFailed","$author$project$Main$ApproveSucceeded","$author$project$Main$MintFailed","$author$project$Main$MintSucceeded","$elm$core$Maybe$Just","$elm$core$Maybe$Nothing","$elm$core$Basics$append","$elm$core$String$fromInt","number","$elm$core$String$join","chunks","$elm$core$String$split","$elm$core$List$foldl","$elm$core$Array$Array_elm_builtin","$elm$core$Elm$JsArray$empty","$elm$core$Basics$ceiling","$elm$core$Basics$logBase","base","$elm$core$Array$shiftStep","$elm$core$Array$empty","$elm$core$Elm$JsArray$initialize","$elm$core$Basics$floor","$elm$core$Elm$JsArray$length","$elm$core$Basics$max","$elm$core$Elm$JsArray$initializeFromList","$elm$core$Array$compressNodes","nodes","_v0","remainingNodes","newAcc","$elm$core$Array$treeFromBuilder","nodeList","nodeListSize","newNodeSize","$elm$core$Array$builderToArray","reverseNodeList","builder","treeLen","correctNodeList","tree","$elm$core$Array$initializeHelp","fn","fromIndex","tail","leaf","tailLen","$elm$json$Json$Decode$string","$author$project$Main$accountFailed","$elm$json$Json$Decode$andThen","$elm$json$Json$Decode$field","$elm$json$Json$Decode$succeed","$author$project$Main$accountSucceeded","stablecoinSymbol","stablecoinFee","stablecoinBalance","network","algobullBalance","address","bq","a8","bS","a5","aM","ar","$author$project$Main$approveFailed","$author$project$Main$approveSucceeded","$elm$core$Platform$Sub$batch","$elm$json$Json$Decode$bool","$elm$core$Basics$composeR","$elm$json$Json$Decode$map","$elm$core$Task$succeed","$elm$core$Task$init","$elm$core$List$foldrHelper","ctr","r1","r2","r3","r4","$elm$core$List$foldr","$elm$core$List$map","$elm$core$Task$andThen","$elm$core$Task$map","taskA","$elm$core$Task$map2","taskB","$elm$core$Platform$sendToApp","$elm$core$Task$spawnCmd","_Scheduler_spawn","commands","tasks","exports","$elm$browser$Browser$element","$author$project$Main$AccountNotFound","$author$project$Main$ConnectAccount","$elm$core$Platform$Cmd$none","$author$project$Main$mintFailed","$author$project$Main$mintSucceeded","$rtfeldman$elm_css$VirtualDom$Styled$UnscopedStyles","$elm$core$String$cons","$robinheghan$murmur3$Murmur3$HashData","seed","hash","charsProcessed","ae","aj","ap","$robinheghan$murmur3$Murmur3$multiplyBy","$robinheghan$murmur3$Murmur3$rotlBy","$elm$core$String$foldl","$robinheghan$murmur3$Murmur3$mix","h1","k1","$robinheghan$murmur3$Murmur3$hashFold","code","res","$robinheghan$murmur3$Murmur3$hashString","h2","h0","$elm$core$Basics$modBy","$rtfeldman$elm_hex$Hex$unsafeToDigit","num","unsafeToDigit","$rtfeldman$elm_hex$Hex$unsafePositiveToDigits","digits","$rtfeldman$elm_css$Hash$fromString","$elm$core$Basics$compare","$elm$core$Dict$get","targetKey","right","$elm$core$Dict$RBNode_elm_builtin","$elm$core$Dict$RBEmpty_elm_builtin","$elm$core$Dict$balance","color","_v6","lRight","rK","rV","rLeft","rRight","$elm$core$Dict$insertHelp","nColor","nKey","nValue","nLeft","nRight","$elm$core$Dict$insert","$rtfeldman$elm_css$VirtualDom$Styled$accumulateStyles","cssTemplate","$elm$virtual_dom$VirtualDom$property","_VirtualDom_noInnerHtmlOrFormAction","_VirtualDom_noJavaScriptOrHtmlJson","$elm$json$Json$Encode$string","$rtfeldman$elm_css$VirtualDom$Styled$extractUnstyledAttribute","val","_v1","$elm$virtual_dom$VirtualDom$attribute","_VirtualDom_noOnOrFormAction","_VirtualDom_noJavaScriptOrHtmlUri","$rtfeldman$elm_css$VirtualDom$Styled$extractUnstyledAttributeNS","$elm$virtual_dom$VirtualDom$keyedNode","$elm$virtual_dom$VirtualDom$keyedNodeNS","$elm$virtual_dom$VirtualDom$node","$elm$virtual_dom$VirtualDom$nodeNS","$rtfeldman$elm_css$VirtualDom$Styled$accumulateKeyedStyledHtml","_v7","html","pairs","vdom","elemType","children","_v9","$rtfeldman$elm_css$VirtualDom$Styled$accumulateStyledHtml","properties","finalStyles","ns","_v10","_v11","_v12","vdomNode","_v2","_v3","_v4","_v5","$elm$core$Dict$empty","$elm$core$List$singleton","$elm$virtual_dom$VirtualDom$text","$elm$core$Dict$foldl","$elm$core$String$replace","before","after","$rtfeldman$elm_css$VirtualDom$Styled$styleToDeclaration","template","classname","declaration","$rtfeldman$elm_css$VirtualDom$Styled$toScopedDeclaration","scopingPrefix","$rtfeldman$elm_css$VirtualDom$Styled$toStyleNode","maybeNonce","accumulatedStyles","cssText","descendantStyles","$rtfeldman$elm_css$VirtualDom$Styled$unstyle","styleNode","unstyledProperties","$rtfeldman$elm_css$VirtualDom$Styled$containsKey","rest","$rtfeldman$elm_css$VirtualDom$Styled$getUnusedKey","_default","getUnusedKey","newKey","$rtfeldman$elm_css$VirtualDom$Styled$toKeyedStyleNode","keyedChildNodes","$rtfeldman$elm_css$VirtualDom$Styled$unstyleKeyed","keyedChildren","keyedStyleNode","$rtfeldman$elm_css$VirtualDom$Styled$unstyleKeyedNS","$rtfeldman$elm_css$VirtualDom$Styled$unstyleNS","$author$project$Main$FormUX","$author$project$Main$LoadingUX","$author$project$Main$SubmittedUX","$author$project$Main$accountRequested","$elm$json$Json$Encode$int","$author$project$Main$approveRequested","$elm$core$Maybe$map","maybe","$author$project$Main$mintRequested","$elm$core$Basics$round","$elm$core$Maybe$withDefault","$author$project$Main$stringFloatInt","$author$project$Main$update","wallet","I","quantity","total","code0","start","$elm$core$String$toInt","totalFee","aL","$rtfeldman$elm_css$Html$Styled$node","$rtfeldman$elm_css$Html$Styled$a","$author$project$Main$AccountRequested","$rtfeldman$elm_css$Css$property","$author$project$Tailwind$Utilities$align_middle","$rtfeldman$elm_css$Html$Styled$button","$rtfeldman$elm_css$VirtualDom$Styled$Attribute","$elm$core$List$any","isOkay","$elm$core$Basics$composeL","$elm$core$Basics$not","bool","$elm$core$List$all","$elm$core$List$isEmpty","$rtfeldman$elm_css$Css$Structure$compactHelp","keyframesByName","declarations","record","cn","cB","$rtfeldman$elm_css$Css$Structure$Keyframes","$elm$core$List$append","$rtfeldman$elm_css$Css$Structure$withKeyframeDeclarations","compactedDeclarations","$rtfeldman$elm_css$Css$String$mapJoinHelp","map","mapJoinHelp","$temp$map","$temp$sep","$temp$strs","$temp$result","$rtfeldman$elm_css$Css$String$mapJoin","$rtfeldman$elm_css$Css$Structure$Output$mediaExpressionToString","expression","bF","H","$rtfeldman$elm_css$Css$Structure$Output$mediaQueryToString","mediaQuery","prefixWith","mediaType","expressions","$rtfeldman$elm_css$Css$Structure$Output$mediaTypeToString","$rtfeldman$elm_css$Css$Structure$Output$importMediaQueryToString","$rtfeldman$elm_css$Css$Structure$Output$importToString","mediaQueries","$rtfeldman$elm_css$Css$Structure$Output$namespaceToString","$elm$core$String$append","$rtfeldman$elm_css$Css$Structure$Output$pseudoElementToString","$rtfeldman$elm_css$Css$Structure$Output$repeatableSimpleSelectorToString","repeatableSimpleSelector","$rtfeldman$elm_css$Css$Structure$Output$simpleSelectorSequenceToString","simpleSelectorSequence","repeatableSimpleSelectors","$rtfeldman$elm_css$Css$Structure$Output$selectorChainToString","sequence","$rtfeldman$elm_css$Css$Structure$Output$combinatorToString","$rtfeldman$elm_css$Css$Structure$Output$selectorToString","chain","pseudoElement","segments","pseudoElementsString","$rtfeldman$elm_css$Css$Structure$Output$prettyPrintStyleBlock","$rtfeldman$elm_css$Css$Structure$Output$emitProperties","$rtfeldman$elm_css$Css$Structure$Output$prettyPrintDeclaration","decl","styleBlocks","$elm$core$List$concat","lists","$elm$core$List$concatMap","$rtfeldman$elm_css$Css$Structure$CounterStyle","$rtfeldman$elm_css$Css$Structure$FontFace","$rtfeldman$elm_css$Css$Structure$PageRule","$rtfeldman$elm_css$Css$Structure$Selector","$rtfeldman$elm_css$Css$Structure$StyleBlock","$rtfeldman$elm_css$Css$Structure$StyleBlockDeclaration","$rtfeldman$elm_css$Css$Structure$SupportsRule","$rtfeldman$elm_css$Css$Structure$Viewport","$rtfeldman$elm_css$Css$Structure$MediaRule","$rtfeldman$elm_css$Css$Structure$mapLast","$rtfeldman$elm_css$Css$Structure$withPropertyAppended","property","$rtfeldman$elm_css$Css$Structure$appendProperty","$rtfeldman$elm_css$Css$Structure$appendToLastSelector","styleBlock","first","newRest","newFirst","only","$rtfeldman$elm_css$Css$Structure$applyPseudoElement","pseudo","$rtfeldman$elm_css$Css$Structure$appendPseudoElementToLastSelector","$rtfeldman$elm_css$Css$Structure$CustomSelector","$rtfeldman$elm_css$Css$Structure$TypeSelectorSequence","$rtfeldman$elm_css$Css$Structure$UniversalSelectorSequence","$rtfeldman$elm_css$Css$Structure$appendRepeatable","selector","$rtfeldman$elm_css$Css$Structure$appendRepeatableWithCombinator","$rtfeldman$elm_css$Css$Structure$appendRepeatableSelector","$rtfeldman$elm_css$Css$Structure$appendRepeatableToLastSelector","$rtfeldman$elm_css$Css$Preprocess$Resolve$collectSelectors","collectSelectors","$rtfeldman$elm_css$Css$Structure$DocumentRule","$rtfeldman$elm_css$Css$Structure$concatMapLastStyleBlock","_v0$12","_v8","$rtfeldman$elm_css$Css$Preprocess$Resolve$lastDeclaration","lastDeclaration","$rtfeldman$elm_css$Css$Preprocess$Resolve$resolveFontFeatureValues","tuples","expandTuples","tuplesToExpand","$rtfeldman$elm_css$Css$Structure$styleBlockToMediaRule","$elm$core$List$takeReverse","kept","takeReverse","$elm$core$List$takeTailRec","$elm$core$List$takeFast","_v0$1","_v0$5","$elm$core$List$take","$rtfeldman$elm_css$Css$Preprocess$Resolve$toDocumentRule","str1","str2","str3","str4","$rtfeldman$elm_css$Css$Preprocess$Resolve$toMediaRule","structureStyleBlocks","$rtfeldman$elm_css$Css$Preprocess$unwrapSnippet","$rtfeldman$elm_css$Css$Preprocess$Resolve$applyNestedStylesToLast","nestedStyles","withoutParent","decls","nextResult","$rtfeldman$elm_css$Css$Preprocess$Resolve$applyStyles","_v14","last","$rtfeldman$elm_css$Css$Preprocess$Resolve$last","nextResultParent","originalParent","lastDecl","selectorCombinator","snippets","originalPseudoElement","newTuples","newPseudoElement","maybes","oneOf","$rtfeldman$elm_css$Css$Preprocess$Resolve$oneOf","firstSelector","otherSelectors","newSelectors","originalSelector","newDeclarations","$rtfeldman$elm_css$Css$Preprocess$Resolve$resolveMediaRule","$rtfeldman$elm_css$Css$Preprocess$Resolve$resolveSupportsRule","$rtfeldman$elm_css$Css$Preprocess$Resolve$expandStyleBlock","extraDeclarations","_v13","$rtfeldman$elm_css$Css$Preprocess$Resolve$extract","snippetDeclarations","$rtfeldman$elm_css$Css$Preprocess$Resolve$toDeclarations","snippetDeclaration","$rtfeldman$elm_css$Css$Preprocess$Resolve$compile","sheet","imports","bL","namespaces","bR","co","bA","$rtfeldman$elm_css$Css$Structure$Output$prettyPrint","$rtfeldman$elm_css$Css$Structure$compactDeclarations","$rtfeldman$elm_css$Css$Structure$compactStylesheet","b5","$rtfeldman$elm_css$Css$Preprocess$StyleBlock","$rtfeldman$elm_css$VirtualDom$Styled$makeSnippet","$rtfeldman$elm_css$VirtualDom$Styled$templateSelector","$rtfeldman$elm_css$Html$Styled$Attributes$css","$rtfeldman$elm_css$VirtualDom$Styled$getCssTemplate","$author$project$Tailwind$Utilities$cursor_pointer","$author$project$Tailwind$Utilities$h_12","$author$project$Tailwind$Utilities$inline_flex","$author$project$Tailwind$Utilities$items_center","$author$project$Tailwind$Utilities$justify_center","$rtfeldman$elm_css$Html$Styled$text","$rtfeldman$elm_css$Css$batch","$author$project$Tailwind$Utilities$text_lg","$author$project$Tailwind$Utilities$w_full","$author$project$Main$brandedButton","btnNodes","btnAttrs","$rtfeldman$elm_css$Html$Styled$div","$author$project$Tailwind$Utilities$my_4","$rtfeldman$elm_css$Html$Styled$img","$author$project$Tailwind$Utilities$mr_3","$elm$virtual_dom$VirtualDom$on","$rtfeldman$elm_css$VirtualDom$Styled$on","eventName","$rtfeldman$elm_css$Html$Styled$Events$on","$rtfeldman$elm_css$Html$Styled$Events$onClick","$author$project$Tailwind$Utilities$px_4","$author$project$Tailwind$Utilities$py_2","$rtfeldman$elm_css$VirtualDom$Styled$property","$rtfeldman$elm_css$Html$Styled$Attributes$stringProperty","$author$project$Tailwind$Utilities$text_base","$author$project$Main$connectAccountUX","err","url","errorContent","$author$project$Main$ApproveRequested","$author$project$Main$QuantityUpdated","$author$project$Main$hasFunds","fee","$author$project$Tailwind$Utilities$box_border","$elm$json$Json$Encode$bool","$rtfeldman$elm_css$Html$Styled$Attributes$disabled","$rtfeldman$elm_css$Html$Styled$Attributes$boolProperty","$author$project$Tailwind$Utilities$my_2","$author$project$Tailwind$Utilities$text_sm","$author$project$Main$feeView","$rtfeldman$elm_css$Html$Styled$input","$rtfeldman$elm_css$Html$Styled$Events$alwaysStop","$rtfeldman$elm_css$Html$Styled$Events$stopPropagationOn","$rtfeldman$elm_css$Html$Styled$Events$targetValue","fields","$rtfeldman$elm_css$Html$Styled$Attributes$placeholder","$author$project$Tailwind$Utilities$px_5","$rtfeldman$elm_css$Html$Styled$Attributes$type_","$rtfeldman$elm_css$Html$Styled$Attributes$value","$author$project$Main$walletView","$author$project$Main$formUX","maybeFailure","$author$project$Main$validateForm","$author$project$Main$balanceWarningOrMint","$rtfeldman$elm_css$Html$Styled$h1","$rtfeldman$elm_css$Html$Styled$Attributes$href","$author$project$Main$loadingUX","Main","walletFound","$author$project$Main$submittedUX","$author$project$Main$main","_Platform_mergeExportsProd","obj","this","location","hostname","match","AlgoBullABI","inputs","internalType","stateMutability","anonymous","indexed","outputs","Erc20ABI","config","11155111","algoBullAddress","stablecoinAddress","scanURL","networks","names","prop","console","isSupported","chainId","keys","includes","_regeneratorRuntime","Op","prototype","hasOwn","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","wrap","innerFn","outerFn","self","tryLocsList","generator","create","Generator","context","Context","method","arg","done","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","tryCatch","makeInvokeMethod","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","_typeof","__await","then","unwrapped","error","methodName","TypeError","resultName","next","nextLoc","pushTryEntry","locs","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","doneResult","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","reverse","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","arguments","apply","dotenv","app","Elm","getElementById","flags","ethereum","approve","networkConfig","signer","contract","provider","_callee4","allowanceBig","quantityBig","_context4","allowance","getAddress","decimals","ethers","utils","parseUnits","gte","approveSucceeded","_ref4","_callee3","txnUrl","_context3","concat","wait","approveFailed","mint","_callee7","_context7","t0","t1","t2","mintMultiple","_ref7","_callee6","_context6","mintSucceeded","mintFailed","accountRequested","_callee","algobullContract","stablecoinContract","stablecoinFeeBig","ethBalanceBig","stablecoinBalanceBig","algobullBalanceBig","ethBalance","_context","providers","Web3Provider","getNetwork","on","newNetwork","oldNetwork","reload","accountFailed","getSigner","Contract","algobullABI","connect","erc20ABI","symbol","mintFee","getBalance","balanceOf","formatEther","formatUnits","accountSucceeded","approveRequested","_ref2","_callee2","_context2","networkError","mintRequested","_ref5","_callee5","_context5","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.69ec7d99.chunk.js","sourcesContent":["(function(scope){\n'use strict';\n\nfunction F(arity, fun, wrapper) {\n  wrapper.a = arity;\n  wrapper.f = fun;\n  return wrapper;\n}\n\nfunction F2(fun) {\n  return F(2, fun, function(a) { return function(b) { return fun(a,b); }; })\n}\nfunction F3(fun) {\n  return F(3, fun, function(a) {\n    return function(b) { return function(c) { return fun(a, b, c); }; };\n  });\n}\nfunction F4(fun) {\n  return F(4, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return fun(a, b, c, d); }; }; };\n  });\n}\nfunction F5(fun) {\n  return F(5, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return fun(a, b, c, d, e); }; }; }; };\n  });\n}\nfunction F6(fun) {\n  return F(6, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return fun(a, b, c, d, e, f); }; }; }; }; };\n  });\n}\nfunction F7(fun) {\n  return F(7, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return fun(a, b, c, d, e, f, g); }; }; }; }; }; };\n  });\n}\nfunction F8(fun) {\n  return F(8, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return function(h) {\n    return fun(a, b, c, d, e, f, g, h); }; }; }; }; }; }; };\n  });\n}\nfunction F9(fun) {\n  return F(9, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return function(h) { return function(i) {\n    return fun(a, b, c, d, e, f, g, h, i); }; }; }; }; }; }; }; };\n  });\n}\n\nfunction A2(fun, a, b) {\n  return fun.a === 2 ? fun.f(a, b) : fun(a)(b);\n}\nfunction A3(fun, a, b, c) {\n  return fun.a === 3 ? fun.f(a, b, c) : fun(a)(b)(c);\n}\nfunction A4(fun, a, b, c, d) {\n  return fun.a === 4 ? fun.f(a, b, c, d) : fun(a)(b)(c)(d);\n}\nfunction A5(fun, a, b, c, d, e) {\n  return fun.a === 5 ? fun.f(a, b, c, d, e) : fun(a)(b)(c)(d)(e);\n}\nfunction A6(fun, a, b, c, d, e, f) {\n  return fun.a === 6 ? fun.f(a, b, c, d, e, f) : fun(a)(b)(c)(d)(e)(f);\n}\nfunction A7(fun, a, b, c, d, e, f, g) {\n  return fun.a === 7 ? fun.f(a, b, c, d, e, f, g) : fun(a)(b)(c)(d)(e)(f)(g);\n}\nfunction A8(fun, a, b, c, d, e, f, g, h) {\n  return fun.a === 8 ? fun.f(a, b, c, d, e, f, g, h) : fun(a)(b)(c)(d)(e)(f)(g)(h);\n}\nfunction A9(fun, a, b, c, d, e, f, g, h, i) {\n  return fun.a === 9 ? fun.f(a, b, c, d, e, f, g, h, i) : fun(a)(b)(c)(d)(e)(f)(g)(h)(i);\n}\n\n\n\n\nvar _JsArray_empty = [];\n\nfunction _JsArray_singleton(value)\n{\n    return [value];\n}\n\nfunction _JsArray_length(array)\n{\n    return array.length;\n}\n\nvar _JsArray_initialize = F3(function(size, offset, func)\n{\n    var result = new Array(size);\n\n    for (var i = 0; i < size; i++)\n    {\n        result[i] = func(offset + i);\n    }\n\n    return result;\n});\n\nvar _JsArray_initializeFromList = F2(function (max, ls)\n{\n    var result = new Array(max);\n\n    for (var i = 0; i < max && ls.b; i++)\n    {\n        result[i] = ls.a;\n        ls = ls.b;\n    }\n\n    result.length = i;\n    return _Utils_Tuple2(result, ls);\n});\n\nvar _JsArray_unsafeGet = F2(function(index, array)\n{\n    return array[index];\n});\n\nvar _JsArray_unsafeSet = F3(function(index, value, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = array[i];\n    }\n\n    result[index] = value;\n    return result;\n});\n\nvar _JsArray_push = F2(function(value, array)\n{\n    var length = array.length;\n    var result = new Array(length + 1);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = array[i];\n    }\n\n    result[length] = value;\n    return result;\n});\n\nvar _JsArray_foldl = F3(function(func, acc, array)\n{\n    var length = array.length;\n\n    for (var i = 0; i < length; i++)\n    {\n        acc = A2(func, array[i], acc);\n    }\n\n    return acc;\n});\n\nvar _JsArray_foldr = F3(function(func, acc, array)\n{\n    for (var i = array.length - 1; i >= 0; i--)\n    {\n        acc = A2(func, array[i], acc);\n    }\n\n    return acc;\n});\n\nvar _JsArray_map = F2(function(func, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = func(array[i]);\n    }\n\n    return result;\n});\n\nvar _JsArray_indexedMap = F3(function(func, offset, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = A2(func, offset + i, array[i]);\n    }\n\n    return result;\n});\n\nvar _JsArray_slice = F3(function(from, to, array)\n{\n    return array.slice(from, to);\n});\n\nvar _JsArray_appendN = F3(function(n, dest, source)\n{\n    var destLen = dest.length;\n    var itemsToCopy = n - destLen;\n\n    if (itemsToCopy > source.length)\n    {\n        itemsToCopy = source.length;\n    }\n\n    var size = destLen + itemsToCopy;\n    var result = new Array(size);\n\n    for (var i = 0; i < destLen; i++)\n    {\n        result[i] = dest[i];\n    }\n\n    for (var i = 0; i < itemsToCopy; i++)\n    {\n        result[i + destLen] = source[i];\n    }\n\n    return result;\n});\n\n\n\n// LOG\n\nvar _Debug_log = F2(function(tag, value)\n{\n\treturn value;\n});\n\nvar _Debug_log_UNUSED = F2(function(tag, value)\n{\n\tconsole.log(tag + ': ' + _Debug_toString(value));\n\treturn value;\n});\n\n\n// TODOS\n\nfunction _Debug_todo(moduleName, region)\n{\n\treturn function(message) {\n\t\t_Debug_crash(8, moduleName, region, message);\n\t};\n}\n\nfunction _Debug_todoCase(moduleName, region, value)\n{\n\treturn function(message) {\n\t\t_Debug_crash(9, moduleName, region, value, message);\n\t};\n}\n\n\n// TO STRING\n\nfunction _Debug_toString(value)\n{\n\treturn '<internals>';\n}\n\nfunction _Debug_toString_UNUSED(value)\n{\n\treturn _Debug_toAnsiString(false, value);\n}\n\nfunction _Debug_toAnsiString(ansi, value)\n{\n\tif (typeof value === 'function')\n\t{\n\t\treturn _Debug_internalColor(ansi, '<function>');\n\t}\n\n\tif (typeof value === 'boolean')\n\t{\n\t\treturn _Debug_ctorColor(ansi, value ? 'True' : 'False');\n\t}\n\n\tif (typeof value === 'number')\n\t{\n\t\treturn _Debug_numberColor(ansi, value + '');\n\t}\n\n\tif (value instanceof String)\n\t{\n\t\treturn _Debug_charColor(ansi, \"'\" + _Debug_addSlashes(value, true) + \"'\");\n\t}\n\n\tif (typeof value === 'string')\n\t{\n\t\treturn _Debug_stringColor(ansi, '\"' + _Debug_addSlashes(value, false) + '\"');\n\t}\n\n\tif (typeof value === 'object' && '$' in value)\n\t{\n\t\tvar tag = value.$;\n\n\t\tif (typeof tag === 'number')\n\t\t{\n\t\t\treturn _Debug_internalColor(ansi, '<internals>');\n\t\t}\n\n\t\tif (tag[0] === '#')\n\t\t{\n\t\t\tvar output = [];\n\t\t\tfor (var k in value)\n\t\t\t{\n\t\t\t\tif (k === '$') continue;\n\t\t\t\toutput.push(_Debug_toAnsiString(ansi, value[k]));\n\t\t\t}\n\t\t\treturn '(' + output.join(',') + ')';\n\t\t}\n\n\t\tif (tag === 'Set_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Set')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, $elm$core$Set$toList(value));\n\t\t}\n\n\t\tif (tag === 'RBNode_elm_builtin' || tag === 'RBEmpty_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Dict')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, $elm$core$Dict$toList(value));\n\t\t}\n\n\t\tif (tag === 'Array_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Array')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, $elm$core$Array$toList(value));\n\t\t}\n\n\t\tif (tag === '::' || tag === '[]')\n\t\t{\n\t\t\tvar output = '[';\n\n\t\t\tvalue.b && (output += _Debug_toAnsiString(ansi, value.a), value = value.b)\n\n\t\t\tfor (; value.b; value = value.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\toutput += ',' + _Debug_toAnsiString(ansi, value.a);\n\t\t\t}\n\t\t\treturn output + ']';\n\t\t}\n\n\t\tvar output = '';\n\t\tfor (var i in value)\n\t\t{\n\t\t\tif (i === '$') continue;\n\t\t\tvar str = _Debug_toAnsiString(ansi, value[i]);\n\t\t\tvar c0 = str[0];\n\t\t\tvar parenless = c0 === '{' || c0 === '(' || c0 === '[' || c0 === '<' || c0 === '\"' || str.indexOf(' ') < 0;\n\t\t\toutput += ' ' + (parenless ? str : '(' + str + ')');\n\t\t}\n\t\treturn _Debug_ctorColor(ansi, tag) + output;\n\t}\n\n\tif (typeof DataView === 'function' && value instanceof DataView)\n\t{\n\t\treturn _Debug_stringColor(ansi, '<' + value.byteLength + ' bytes>');\n\t}\n\n\tif (typeof File !== 'undefined' && value instanceof File)\n\t{\n\t\treturn _Debug_internalColor(ansi, '<' + value.name + '>');\n\t}\n\n\tif (typeof value === 'object')\n\t{\n\t\tvar output = [];\n\t\tfor (var key in value)\n\t\t{\n\t\t\tvar field = key[0] === '_' ? key.slice(1) : key;\n\t\t\toutput.push(_Debug_fadeColor(ansi, field) + ' = ' + _Debug_toAnsiString(ansi, value[key]));\n\t\t}\n\t\tif (output.length === 0)\n\t\t{\n\t\t\treturn '{}';\n\t\t}\n\t\treturn '{ ' + output.join(', ') + ' }';\n\t}\n\n\treturn _Debug_internalColor(ansi, '<internals>');\n}\n\nfunction _Debug_addSlashes(str, isChar)\n{\n\tvar s = str\n\t\t.replace(/\\\\/g, '\\\\\\\\')\n\t\t.replace(/\\n/g, '\\\\n')\n\t\t.replace(/\\t/g, '\\\\t')\n\t\t.replace(/\\r/g, '\\\\r')\n\t\t.replace(/\\v/g, '\\\\v')\n\t\t.replace(/\\0/g, '\\\\0');\n\n\tif (isChar)\n\t{\n\t\treturn s.replace(/\\'/g, '\\\\\\'');\n\t}\n\telse\n\t{\n\t\treturn s.replace(/\\\"/g, '\\\\\"');\n\t}\n}\n\nfunction _Debug_ctorColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[96m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_numberColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[95m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_stringColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[93m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_charColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[92m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_fadeColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[37m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_internalColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[36m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_toHexDigit(n)\n{\n\treturn String.fromCharCode(n < 10 ? 48 + n : 55 + n);\n}\n\n\n// CRASH\n\n\nfunction _Debug_crash(identifier)\n{\n\tthrow new Error('https://github.com/elm/core/blob/1.0.0/hints/' + identifier + '.md');\n}\n\n\nfunction _Debug_crash_UNUSED(identifier, fact1, fact2, fact3, fact4)\n{\n\tswitch(identifier)\n\t{\n\t\tcase 0:\n\t\t\tthrow new Error('What node should I take over? In JavaScript I need something like:\\n\\n    Elm.Main.init({\\n        node: document.getElementById(\"elm-node\")\\n    })\\n\\nYou need to do this with any Browser.sandbox or Browser.element program.');\n\n\t\tcase 1:\n\t\t\tthrow new Error('Browser.application programs cannot handle URLs like this:\\n\\n    ' + document.location.href + '\\n\\nWhat is the root? The root of your file system? Try looking at this program with `elm reactor` or some other server.');\n\n\t\tcase 2:\n\t\t\tvar jsonErrorString = fact1;\n\t\t\tthrow new Error('Problem with the flags given to your Elm program on initialization.\\n\\n' + jsonErrorString);\n\n\t\tcase 3:\n\t\t\tvar portName = fact1;\n\t\t\tthrow new Error('There can only be one port named `' + portName + '`, but your program has multiple.');\n\n\t\tcase 4:\n\t\t\tvar portName = fact1;\n\t\t\tvar problem = fact2;\n\t\t\tthrow new Error('Trying to send an unexpected type of value through port `' + portName + '`:\\n' + problem);\n\n\t\tcase 5:\n\t\t\tthrow new Error('Trying to use `(==)` on functions.\\nThere is no way to know if functions are \"the same\" in the Elm sense.\\nRead more about this at https://package.elm-lang.org/packages/elm/core/latest/Basics#== which describes why it is this way and what the better version will look like.');\n\n\t\tcase 6:\n\t\t\tvar moduleName = fact1;\n\t\t\tthrow new Error('Your page is loading multiple Elm scripts with a module named ' + moduleName + '. Maybe a duplicate script is getting loaded accidentally? If not, rename one of them so I know which is which!');\n\n\t\tcase 8:\n\t\t\tvar moduleName = fact1;\n\t\t\tvar region = fact2;\n\t\t\tvar message = fact3;\n\t\t\tthrow new Error('TODO in module `' + moduleName + '` ' + _Debug_regionToString(region) + '\\n\\n' + message);\n\n\t\tcase 9:\n\t\t\tvar moduleName = fact1;\n\t\t\tvar region = fact2;\n\t\t\tvar value = fact3;\n\t\t\tvar message = fact4;\n\t\t\tthrow new Error(\n\t\t\t\t'TODO in module `' + moduleName + '` from the `case` expression '\n\t\t\t\t+ _Debug_regionToString(region) + '\\n\\nIt received the following value:\\n\\n    '\n\t\t\t\t+ _Debug_toString(value).replace('\\n', '\\n    ')\n\t\t\t\t+ '\\n\\nBut the branch that handles it says:\\n\\n    ' + message.replace('\\n', '\\n    ')\n\t\t\t);\n\n\t\tcase 10:\n\t\t\tthrow new Error('Bug in https://github.com/elm/virtual-dom/issues');\n\n\t\tcase 11:\n\t\t\tthrow new Error('Cannot perform mod 0. Division by zero error.');\n\t}\n}\n\nfunction _Debug_regionToString(region)\n{\n\tif (region.bl.aF === region.bD.aF)\n\t{\n\t\treturn 'on line ' + region.bl.aF;\n\t}\n\treturn 'on lines ' + region.bl.aF + ' through ' + region.bD.aF;\n}\n\n\n\n// EQUALITY\n\nfunction _Utils_eq(x, y)\n{\n\tfor (\n\t\tvar pair, stack = [], isEqual = _Utils_eqHelp(x, y, 0, stack);\n\t\tisEqual && (pair = stack.pop());\n\t\tisEqual = _Utils_eqHelp(pair.a, pair.b, 0, stack)\n\t\t)\n\t{}\n\n\treturn isEqual;\n}\n\nfunction _Utils_eqHelp(x, y, depth, stack)\n{\n\tif (x === y)\n\t{\n\t\treturn true;\n\t}\n\n\tif (typeof x !== 'object' || x === null || y === null)\n\t{\n\t\ttypeof x === 'function' && _Debug_crash(5);\n\t\treturn false;\n\t}\n\n\tif (depth > 100)\n\t{\n\t\tstack.push(_Utils_Tuple2(x,y));\n\t\treturn true;\n\t}\n\n\t/**_UNUSED/\n\tif (x.$ === 'Set_elm_builtin')\n\t{\n\t\tx = $elm$core$Set$toList(x);\n\t\ty = $elm$core$Set$toList(y);\n\t}\n\tif (x.$ === 'RBNode_elm_builtin' || x.$ === 'RBEmpty_elm_builtin')\n\t{\n\t\tx = $elm$core$Dict$toList(x);\n\t\ty = $elm$core$Dict$toList(y);\n\t}\n\t//*/\n\n\t/**/\n\tif (x.$ < 0)\n\t{\n\t\tx = $elm$core$Dict$toList(x);\n\t\ty = $elm$core$Dict$toList(y);\n\t}\n\t//*/\n\n\tfor (var key in x)\n\t{\n\t\tif (!_Utils_eqHelp(x[key], y[key], depth + 1, stack))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nvar _Utils_equal = F2(_Utils_eq);\nvar _Utils_notEqual = F2(function(a, b) { return !_Utils_eq(a,b); });\n\n\n\n// COMPARISONS\n\n// Code in Generate/JavaScript.hs, Basics.js, and List.js depends on\n// the particular integer values assigned to LT, EQ, and GT.\n\nfunction _Utils_cmp(x, y, ord)\n{\n\tif (typeof x !== 'object')\n\t{\n\t\treturn x === y ? /*EQ*/ 0 : x < y ? /*LT*/ -1 : /*GT*/ 1;\n\t}\n\n\t/**_UNUSED/\n\tif (x instanceof String)\n\t{\n\t\tvar a = x.valueOf();\n\t\tvar b = y.valueOf();\n\t\treturn a === b ? 0 : a < b ? -1 : 1;\n\t}\n\t//*/\n\n\t/**/\n\tif (typeof x.$ === 'undefined')\n\t//*/\n\t/**_UNUSED/\n\tif (x.$[0] === '#')\n\t//*/\n\t{\n\t\treturn (ord = _Utils_cmp(x.a, y.a))\n\t\t\t? ord\n\t\t\t: (ord = _Utils_cmp(x.b, y.b))\n\t\t\t\t? ord\n\t\t\t\t: _Utils_cmp(x.c, y.c);\n\t}\n\n\t// traverse conses until end of a list or a mismatch\n\tfor (; x.b && y.b && !(ord = _Utils_cmp(x.a, y.a)); x = x.b, y = y.b) {} // WHILE_CONSES\n\treturn ord || (x.b ? /*GT*/ 1 : y.b ? /*LT*/ -1 : /*EQ*/ 0);\n}\n\nvar _Utils_lt = F2(function(a, b) { return _Utils_cmp(a, b) < 0; });\nvar _Utils_le = F2(function(a, b) { return _Utils_cmp(a, b) < 1; });\nvar _Utils_gt = F2(function(a, b) { return _Utils_cmp(a, b) > 0; });\nvar _Utils_ge = F2(function(a, b) { return _Utils_cmp(a, b) >= 0; });\n\nvar _Utils_compare = F2(function(x, y)\n{\n\tvar n = _Utils_cmp(x, y);\n\treturn n < 0 ? $elm$core$Basics$LT : n ? $elm$core$Basics$GT : $elm$core$Basics$EQ;\n});\n\n\n// COMMON VALUES\n\nvar _Utils_Tuple0 = 0;\nvar _Utils_Tuple0_UNUSED = { $: '#0' };\n\nfunction _Utils_Tuple2(a, b) { return { a: a, b: b }; }\nfunction _Utils_Tuple2_UNUSED(a, b) { return { $: '#2', a: a, b: b }; }\n\nfunction _Utils_Tuple3(a, b, c) { return { a: a, b: b, c: c }; }\nfunction _Utils_Tuple3_UNUSED(a, b, c) { return { $: '#3', a: a, b: b, c: c }; }\n\nfunction _Utils_chr(c) { return c; }\nfunction _Utils_chr_UNUSED(c) { return new String(c); }\n\n\n// RECORDS\n\nfunction _Utils_update(oldRecord, updatedFields)\n{\n\tvar newRecord = {};\n\n\tfor (var key in oldRecord)\n\t{\n\t\tnewRecord[key] = oldRecord[key];\n\t}\n\n\tfor (var key in updatedFields)\n\t{\n\t\tnewRecord[key] = updatedFields[key];\n\t}\n\n\treturn newRecord;\n}\n\n\n// APPEND\n\nvar _Utils_append = F2(_Utils_ap);\n\nfunction _Utils_ap(xs, ys)\n{\n\t// append Strings\n\tif (typeof xs === 'string')\n\t{\n\t\treturn xs + ys;\n\t}\n\n\t// append Lists\n\tif (!xs.b)\n\t{\n\t\treturn ys;\n\t}\n\tvar root = _List_Cons(xs.a, ys);\n\txs = xs.b\n\tfor (var curr = root; xs.b; xs = xs.b) // WHILE_CONS\n\t{\n\t\tcurr = curr.b = _List_Cons(xs.a, ys);\n\t}\n\treturn root;\n}\n\n\n\nvar _List_Nil = { $: 0 };\nvar _List_Nil_UNUSED = { $: '[]' };\n\nfunction _List_Cons(hd, tl) { return { $: 1, a: hd, b: tl }; }\nfunction _List_Cons_UNUSED(hd, tl) { return { $: '::', a: hd, b: tl }; }\n\n\nvar _List_cons = F2(_List_Cons);\n\nfunction _List_fromArray(arr)\n{\n\tvar out = _List_Nil;\n\tfor (var i = arr.length; i--; )\n\t{\n\t\tout = _List_Cons(arr[i], out);\n\t}\n\treturn out;\n}\n\nfunction _List_toArray(xs)\n{\n\tfor (var out = []; xs.b; xs = xs.b) // WHILE_CONS\n\t{\n\t\tout.push(xs.a);\n\t}\n\treturn out;\n}\n\nvar _List_map2 = F3(function(f, xs, ys)\n{\n\tfor (var arr = []; xs.b && ys.b; xs = xs.b, ys = ys.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A2(f, xs.a, ys.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map3 = F4(function(f, xs, ys, zs)\n{\n\tfor (var arr = []; xs.b && ys.b && zs.b; xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A3(f, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map4 = F5(function(f, ws, xs, ys, zs)\n{\n\tfor (var arr = []; ws.b && xs.b && ys.b && zs.b; ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A4(f, ws.a, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map5 = F6(function(f, vs, ws, xs, ys, zs)\n{\n\tfor (var arr = []; vs.b && ws.b && xs.b && ys.b && zs.b; vs = vs.b, ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A5(f, vs.a, ws.a, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_sortBy = F2(function(f, xs)\n{\n\treturn _List_fromArray(_List_toArray(xs).sort(function(a, b) {\n\t\treturn _Utils_cmp(f(a), f(b));\n\t}));\n});\n\nvar _List_sortWith = F2(function(f, xs)\n{\n\treturn _List_fromArray(_List_toArray(xs).sort(function(a, b) {\n\t\tvar ord = A2(f, a, b);\n\t\treturn ord === $elm$core$Basics$EQ ? 0 : ord === $elm$core$Basics$LT ? -1 : 1;\n\t}));\n});\n\n\n\n// MATH\n\nvar _Basics_add = F2(function(a, b) { return a + b; });\nvar _Basics_sub = F2(function(a, b) { return a - b; });\nvar _Basics_mul = F2(function(a, b) { return a * b; });\nvar _Basics_fdiv = F2(function(a, b) { return a / b; });\nvar _Basics_idiv = F2(function(a, b) { return (a / b) | 0; });\nvar _Basics_pow = F2(Math.pow);\n\nvar _Basics_remainderBy = F2(function(b, a) { return a % b; });\n\n// https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/divmodnote-letter.pdf\nvar _Basics_modBy = F2(function(modulus, x)\n{\n\tvar answer = x % modulus;\n\treturn modulus === 0\n\t\t? _Debug_crash(11)\n\t\t:\n\t((answer > 0 && modulus < 0) || (answer < 0 && modulus > 0))\n\t\t? answer + modulus\n\t\t: answer;\n});\n\n\n// TRIGONOMETRY\n\nvar _Basics_pi = Math.PI;\nvar _Basics_e = Math.E;\nvar _Basics_cos = Math.cos;\nvar _Basics_sin = Math.sin;\nvar _Basics_tan = Math.tan;\nvar _Basics_acos = Math.acos;\nvar _Basics_asin = Math.asin;\nvar _Basics_atan = Math.atan;\nvar _Basics_atan2 = F2(Math.atan2);\n\n\n// MORE MATH\n\nfunction _Basics_toFloat(x) { return x; }\nfunction _Basics_truncate(n) { return n | 0; }\nfunction _Basics_isInfinite(n) { return n === Infinity || n === -Infinity; }\n\nvar _Basics_ceiling = Math.ceil;\nvar _Basics_floor = Math.floor;\nvar _Basics_round = Math.round;\nvar _Basics_sqrt = Math.sqrt;\nvar _Basics_log = Math.log;\nvar _Basics_isNaN = isNaN;\n\n\n// BOOLEANS\n\nfunction _Basics_not(bool) { return !bool; }\nvar _Basics_and = F2(function(a, b) { return a && b; });\nvar _Basics_or  = F2(function(a, b) { return a || b; });\nvar _Basics_xor = F2(function(a, b) { return a !== b; });\n\n\n\nvar _String_cons = F2(function(chr, str)\n{\n\treturn chr + str;\n});\n\nfunction _String_uncons(string)\n{\n\tvar word = string.charCodeAt(0);\n\treturn !isNaN(word)\n\t\t? $elm$core$Maybe$Just(\n\t\t\t0xD800 <= word && word <= 0xDBFF\n\t\t\t\t? _Utils_Tuple2(_Utils_chr(string[0] + string[1]), string.slice(2))\n\t\t\t\t: _Utils_Tuple2(_Utils_chr(string[0]), string.slice(1))\n\t\t)\n\t\t: $elm$core$Maybe$Nothing;\n}\n\nvar _String_append = F2(function(a, b)\n{\n\treturn a + b;\n});\n\nfunction _String_length(str)\n{\n\treturn str.length;\n}\n\nvar _String_map = F2(function(func, string)\n{\n\tvar len = string.length;\n\tvar array = new Array(len);\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tarray[i] = func(_Utils_chr(string[i] + string[i+1]));\n\t\t\ti += 2;\n\t\t\tcontinue;\n\t\t}\n\t\tarray[i] = func(_Utils_chr(string[i]));\n\t\ti++;\n\t}\n\treturn array.join('');\n});\n\nvar _String_filter = F2(function(isGood, str)\n{\n\tvar arr = [];\n\tvar len = str.length;\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar char = str[i];\n\t\tvar word = str.charCodeAt(i);\n\t\ti++;\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tchar += str[i];\n\t\t\ti++;\n\t\t}\n\n\t\tif (isGood(_Utils_chr(char)))\n\t\t{\n\t\t\tarr.push(char);\n\t\t}\n\t}\n\treturn arr.join('');\n});\n\nfunction _String_reverse(str)\n{\n\tvar len = str.length;\n\tvar arr = new Array(len);\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar word = str.charCodeAt(i);\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tarr[len - i] = str[i + 1];\n\t\t\ti++;\n\t\t\tarr[len - i] = str[i - 1];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tarr[len - i] = str[i];\n\t\t\ti++;\n\t\t}\n\t}\n\treturn arr.join('');\n}\n\nvar _String_foldl = F3(function(func, state, string)\n{\n\tvar len = string.length;\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\ti++;\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tchar += string[i];\n\t\t\ti++;\n\t\t}\n\t\tstate = A2(func, _Utils_chr(char), state);\n\t}\n\treturn state;\n});\n\nvar _String_foldr = F3(function(func, state, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tstate = A2(func, _Utils_chr(char), state);\n\t}\n\treturn state;\n});\n\nvar _String_split = F2(function(sep, str)\n{\n\treturn str.split(sep);\n});\n\nvar _String_join = F2(function(sep, strs)\n{\n\treturn strs.join(sep);\n});\n\nvar _String_slice = F3(function(start, end, str) {\n\treturn str.slice(start, end);\n});\n\nfunction _String_trim(str)\n{\n\treturn str.trim();\n}\n\nfunction _String_trimLeft(str)\n{\n\treturn str.replace(/^\\s+/, '');\n}\n\nfunction _String_trimRight(str)\n{\n\treturn str.replace(/\\s+$/, '');\n}\n\nfunction _String_words(str)\n{\n\treturn _List_fromArray(str.trim().split(/\\s+/g));\n}\n\nfunction _String_lines(str)\n{\n\treturn _List_fromArray(str.split(/\\r\\n|\\r|\\n/g));\n}\n\nfunction _String_toUpper(str)\n{\n\treturn str.toUpperCase();\n}\n\nfunction _String_toLower(str)\n{\n\treturn str.toLowerCase();\n}\n\nvar _String_any = F2(function(isGood, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tif (isGood(_Utils_chr(char)))\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n});\n\nvar _String_all = F2(function(isGood, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tif (!isGood(_Utils_chr(char)))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n});\n\nvar _String_contains = F2(function(sub, str)\n{\n\treturn str.indexOf(sub) > -1;\n});\n\nvar _String_startsWith = F2(function(sub, str)\n{\n\treturn str.indexOf(sub) === 0;\n});\n\nvar _String_endsWith = F2(function(sub, str)\n{\n\treturn str.length >= sub.length &&\n\t\tstr.lastIndexOf(sub) === str.length - sub.length;\n});\n\nvar _String_indexes = F2(function(sub, str)\n{\n\tvar subLen = sub.length;\n\n\tif (subLen < 1)\n\t{\n\t\treturn _List_Nil;\n\t}\n\n\tvar i = 0;\n\tvar is = [];\n\n\twhile ((i = str.indexOf(sub, i)) > -1)\n\t{\n\t\tis.push(i);\n\t\ti = i + subLen;\n\t}\n\n\treturn _List_fromArray(is);\n});\n\n\n// TO STRING\n\nfunction _String_fromNumber(number)\n{\n\treturn number + '';\n}\n\n\n// INT CONVERSIONS\n\nfunction _String_toInt(str)\n{\n\tvar total = 0;\n\tvar code0 = str.charCodeAt(0);\n\tvar start = code0 == 0x2B /* + */ || code0 == 0x2D /* - */ ? 1 : 0;\n\n\tfor (var i = start; i < str.length; ++i)\n\t{\n\t\tvar code = str.charCodeAt(i);\n\t\tif (code < 0x30 || 0x39 < code)\n\t\t{\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t}\n\t\ttotal = 10 * total + code - 0x30;\n\t}\n\n\treturn i == start\n\t\t? $elm$core$Maybe$Nothing\n\t\t: $elm$core$Maybe$Just(code0 == 0x2D ? -total : total);\n}\n\n\n// FLOAT CONVERSIONS\n\nfunction _String_toFloat(s)\n{\n\t// check if it is a hex, octal, or binary number\n\tif (s.length === 0 || /[\\sxbo]/.test(s))\n\t{\n\t\treturn $elm$core$Maybe$Nothing;\n\t}\n\tvar n = +s;\n\t// faster isNaN check\n\treturn n === n ? $elm$core$Maybe$Just(n) : $elm$core$Maybe$Nothing;\n}\n\nfunction _String_fromList(chars)\n{\n\treturn _List_toArray(chars).join('');\n}\n\n\n\n\nfunction _Char_toCode(char)\n{\n\tvar code = char.charCodeAt(0);\n\tif (0xD800 <= code && code <= 0xDBFF)\n\t{\n\t\treturn (code - 0xD800) * 0x400 + char.charCodeAt(1) - 0xDC00 + 0x10000\n\t}\n\treturn code;\n}\n\nfunction _Char_fromCode(code)\n{\n\treturn _Utils_chr(\n\t\t(code < 0 || 0x10FFFF < code)\n\t\t\t? '\\uFFFD'\n\t\t\t:\n\t\t(code <= 0xFFFF)\n\t\t\t? String.fromCharCode(code)\n\t\t\t:\n\t\t(code -= 0x10000,\n\t\t\tString.fromCharCode(Math.floor(code / 0x400) + 0xD800, code % 0x400 + 0xDC00)\n\t\t)\n\t);\n}\n\nfunction _Char_toUpper(char)\n{\n\treturn _Utils_chr(char.toUpperCase());\n}\n\nfunction _Char_toLower(char)\n{\n\treturn _Utils_chr(char.toLowerCase());\n}\n\nfunction _Char_toLocaleUpper(char)\n{\n\treturn _Utils_chr(char.toLocaleUpperCase());\n}\n\nfunction _Char_toLocaleLower(char)\n{\n\treturn _Utils_chr(char.toLocaleLowerCase());\n}\n\n\n\n/**_UNUSED/\nfunction _Json_errorToString(error)\n{\n\treturn $elm$json$Json$Decode$errorToString(error);\n}\n//*/\n\n\n// CORE DECODERS\n\nfunction _Json_succeed(msg)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: msg\n\t};\n}\n\nfunction _Json_fail(msg)\n{\n\treturn {\n\t\t$: 1,\n\t\ta: msg\n\t};\n}\n\nfunction _Json_decodePrim(decoder)\n{\n\treturn { $: 2, b: decoder };\n}\n\nvar _Json_decodeInt = _Json_decodePrim(function(value) {\n\treturn (typeof value !== 'number')\n\t\t? _Json_expecting('an INT', value)\n\t\t:\n\t(-2147483647 < value && value < 2147483647 && (value | 0) === value)\n\t\t? $elm$core$Result$Ok(value)\n\t\t:\n\t(isFinite(value) && !(value % 1))\n\t\t? $elm$core$Result$Ok(value)\n\t\t: _Json_expecting('an INT', value);\n});\n\nvar _Json_decodeBool = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'boolean')\n\t\t? $elm$core$Result$Ok(value)\n\t\t: _Json_expecting('a BOOL', value);\n});\n\nvar _Json_decodeFloat = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'number')\n\t\t? $elm$core$Result$Ok(value)\n\t\t: _Json_expecting('a FLOAT', value);\n});\n\nvar _Json_decodeValue = _Json_decodePrim(function(value) {\n\treturn $elm$core$Result$Ok(_Json_wrap(value));\n});\n\nvar _Json_decodeString = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'string')\n\t\t? $elm$core$Result$Ok(value)\n\t\t: (value instanceof String)\n\t\t\t? $elm$core$Result$Ok(value + '')\n\t\t\t: _Json_expecting('a STRING', value);\n});\n\nfunction _Json_decodeList(decoder) { return { $: 3, b: decoder }; }\nfunction _Json_decodeArray(decoder) { return { $: 4, b: decoder }; }\n\nfunction _Json_decodeNull(value) { return { $: 5, c: value }; }\n\nvar _Json_decodeField = F2(function(field, decoder)\n{\n\treturn {\n\t\t$: 6,\n\t\td: field,\n\t\tb: decoder\n\t};\n});\n\nvar _Json_decodeIndex = F2(function(index, decoder)\n{\n\treturn {\n\t\t$: 7,\n\t\te: index,\n\t\tb: decoder\n\t};\n});\n\nfunction _Json_decodeKeyValuePairs(decoder)\n{\n\treturn {\n\t\t$: 8,\n\t\tb: decoder\n\t};\n}\n\nfunction _Json_mapMany(f, decoders)\n{\n\treturn {\n\t\t$: 9,\n\t\tf: f,\n\t\tg: decoders\n\t};\n}\n\nvar _Json_andThen = F2(function(callback, decoder)\n{\n\treturn {\n\t\t$: 10,\n\t\tb: decoder,\n\t\th: callback\n\t};\n});\n\nfunction _Json_oneOf(decoders)\n{\n\treturn {\n\t\t$: 11,\n\t\tg: decoders\n\t};\n}\n\n\n// DECODING OBJECTS\n\nvar _Json_map1 = F2(function(f, d1)\n{\n\treturn _Json_mapMany(f, [d1]);\n});\n\nvar _Json_map2 = F3(function(f, d1, d2)\n{\n\treturn _Json_mapMany(f, [d1, d2]);\n});\n\nvar _Json_map3 = F4(function(f, d1, d2, d3)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3]);\n});\n\nvar _Json_map4 = F5(function(f, d1, d2, d3, d4)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4]);\n});\n\nvar _Json_map5 = F6(function(f, d1, d2, d3, d4, d5)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5]);\n});\n\nvar _Json_map6 = F7(function(f, d1, d2, d3, d4, d5, d6)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6]);\n});\n\nvar _Json_map7 = F8(function(f, d1, d2, d3, d4, d5, d6, d7)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7]);\n});\n\nvar _Json_map8 = F9(function(f, d1, d2, d3, d4, d5, d6, d7, d8)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7, d8]);\n});\n\n\n// DECODE\n\nvar _Json_runOnString = F2(function(decoder, string)\n{\n\ttry\n\t{\n\t\tvar value = JSON.parse(string);\n\t\treturn _Json_runHelp(decoder, value);\n\t}\n\tcatch (e)\n\t{\n\t\treturn $elm$core$Result$Err(A2($elm$json$Json$Decode$Failure, 'This is not valid JSON! ' + e.message, _Json_wrap(string)));\n\t}\n});\n\nvar _Json_run = F2(function(decoder, value)\n{\n\treturn _Json_runHelp(decoder, _Json_unwrap(value));\n});\n\nfunction _Json_runHelp(decoder, value)\n{\n\tswitch (decoder.$)\n\t{\n\t\tcase 2:\n\t\t\treturn decoder.b(value);\n\n\t\tcase 5:\n\t\t\treturn (value === null)\n\t\t\t\t? $elm$core$Result$Ok(decoder.c)\n\t\t\t\t: _Json_expecting('null', value);\n\n\t\tcase 3:\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('a LIST', value);\n\t\t\t}\n\t\t\treturn _Json_runArrayDecoder(decoder.b, value, _List_fromArray);\n\n\t\tcase 4:\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an ARRAY', value);\n\t\t\t}\n\t\t\treturn _Json_runArrayDecoder(decoder.b, value, _Json_toElmArray);\n\n\t\tcase 6:\n\t\t\tvar field = decoder.d;\n\t\t\tif (typeof value !== 'object' || value === null || !(field in value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an OBJECT with a field named `' + field + '`', value);\n\t\t\t}\n\t\t\tvar result = _Json_runHelp(decoder.b, value[field]);\n\t\t\treturn ($elm$core$Result$isOk(result)) ? result : $elm$core$Result$Err(A2($elm$json$Json$Decode$Field, field, result.a));\n\n\t\tcase 7:\n\t\t\tvar index = decoder.e;\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an ARRAY', value);\n\t\t\t}\n\t\t\tif (index >= value.length)\n\t\t\t{\n\t\t\t\treturn _Json_expecting('a LONGER array. Need index ' + index + ' but only see ' + value.length + ' entries', value);\n\t\t\t}\n\t\t\tvar result = _Json_runHelp(decoder.b, value[index]);\n\t\t\treturn ($elm$core$Result$isOk(result)) ? result : $elm$core$Result$Err(A2($elm$json$Json$Decode$Index, index, result.a));\n\n\t\tcase 8:\n\t\t\tif (typeof value !== 'object' || value === null || _Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an OBJECT', value);\n\t\t\t}\n\n\t\t\tvar keyValuePairs = _List_Nil;\n\t\t\t// TODO test perf of Object.keys and switch when support is good enough\n\t\t\tfor (var key in value)\n\t\t\t{\n\t\t\t\tif (value.hasOwnProperty(key))\n\t\t\t\t{\n\t\t\t\t\tvar result = _Json_runHelp(decoder.b, value[key]);\n\t\t\t\t\tif (!$elm$core$Result$isOk(result))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn $elm$core$Result$Err(A2($elm$json$Json$Decode$Field, key, result.a));\n\t\t\t\t\t}\n\t\t\t\t\tkeyValuePairs = _List_Cons(_Utils_Tuple2(key, result.a), keyValuePairs);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn $elm$core$Result$Ok($elm$core$List$reverse(keyValuePairs));\n\n\t\tcase 9:\n\t\t\tvar answer = decoder.f;\n\t\t\tvar decoders = decoder.g;\n\t\t\tfor (var i = 0; i < decoders.length; i++)\n\t\t\t{\n\t\t\t\tvar result = _Json_runHelp(decoders[i], value);\n\t\t\t\tif (!$elm$core$Result$isOk(result))\n\t\t\t\t{\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\tanswer = answer(result.a);\n\t\t\t}\n\t\t\treturn $elm$core$Result$Ok(answer);\n\n\t\tcase 10:\n\t\t\tvar result = _Json_runHelp(decoder.b, value);\n\t\t\treturn (!$elm$core$Result$isOk(result))\n\t\t\t\t? result\n\t\t\t\t: _Json_runHelp(decoder.h(result.a), value);\n\n\t\tcase 11:\n\t\t\tvar errors = _List_Nil;\n\t\t\tfor (var temp = decoder.g; temp.b; temp = temp.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\tvar result = _Json_runHelp(temp.a, value);\n\t\t\t\tif ($elm$core$Result$isOk(result))\n\t\t\t\t{\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\terrors = _List_Cons(result.a, errors);\n\t\t\t}\n\t\t\treturn $elm$core$Result$Err($elm$json$Json$Decode$OneOf($elm$core$List$reverse(errors)));\n\n\t\tcase 1:\n\t\t\treturn $elm$core$Result$Err(A2($elm$json$Json$Decode$Failure, decoder.a, _Json_wrap(value)));\n\n\t\tcase 0:\n\t\t\treturn $elm$core$Result$Ok(decoder.a);\n\t}\n}\n\nfunction _Json_runArrayDecoder(decoder, value, toElmValue)\n{\n\tvar len = value.length;\n\tvar array = new Array(len);\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tvar result = _Json_runHelp(decoder, value[i]);\n\t\tif (!$elm$core$Result$isOk(result))\n\t\t{\n\t\t\treturn $elm$core$Result$Err(A2($elm$json$Json$Decode$Index, i, result.a));\n\t\t}\n\t\tarray[i] = result.a;\n\t}\n\treturn $elm$core$Result$Ok(toElmValue(array));\n}\n\nfunction _Json_isArray(value)\n{\n\treturn Array.isArray(value) || (typeof FileList !== 'undefined' && value instanceof FileList);\n}\n\nfunction _Json_toElmArray(array)\n{\n\treturn A2($elm$core$Array$initialize, array.length, function(i) { return array[i]; });\n}\n\nfunction _Json_expecting(type, value)\n{\n\treturn $elm$core$Result$Err(A2($elm$json$Json$Decode$Failure, 'Expecting ' + type, _Json_wrap(value)));\n}\n\n\n// EQUALITY\n\nfunction _Json_equality(x, y)\n{\n\tif (x === y)\n\t{\n\t\treturn true;\n\t}\n\n\tif (x.$ !== y.$)\n\t{\n\t\treturn false;\n\t}\n\n\tswitch (x.$)\n\t{\n\t\tcase 0:\n\t\tcase 1:\n\t\t\treturn x.a === y.a;\n\n\t\tcase 2:\n\t\t\treturn x.b === y.b;\n\n\t\tcase 5:\n\t\t\treturn x.c === y.c;\n\n\t\tcase 3:\n\t\tcase 4:\n\t\tcase 8:\n\t\t\treturn _Json_equality(x.b, y.b);\n\n\t\tcase 6:\n\t\t\treturn x.d === y.d && _Json_equality(x.b, y.b);\n\n\t\tcase 7:\n\t\t\treturn x.e === y.e && _Json_equality(x.b, y.b);\n\n\t\tcase 9:\n\t\t\treturn x.f === y.f && _Json_listEquality(x.g, y.g);\n\n\t\tcase 10:\n\t\t\treturn x.h === y.h && _Json_equality(x.b, y.b);\n\n\t\tcase 11:\n\t\t\treturn _Json_listEquality(x.g, y.g);\n\t}\n}\n\nfunction _Json_listEquality(aDecoders, bDecoders)\n{\n\tvar len = aDecoders.length;\n\tif (len !== bDecoders.length)\n\t{\n\t\treturn false;\n\t}\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tif (!_Json_equality(aDecoders[i], bDecoders[i]))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// ENCODE\n\nvar _Json_encode = F2(function(indentLevel, value)\n{\n\treturn JSON.stringify(_Json_unwrap(value), null, indentLevel) + '';\n});\n\nfunction _Json_wrap_UNUSED(value) { return { $: 0, a: value }; }\nfunction _Json_unwrap_UNUSED(value) { return value.a; }\n\nfunction _Json_wrap(value) { return value; }\nfunction _Json_unwrap(value) { return value; }\n\nfunction _Json_emptyArray() { return []; }\nfunction _Json_emptyObject() { return {}; }\n\nvar _Json_addField = F3(function(key, value, object)\n{\n\tobject[key] = _Json_unwrap(value);\n\treturn object;\n});\n\nfunction _Json_addEntry(func)\n{\n\treturn F2(function(entry, array)\n\t{\n\t\tarray.push(_Json_unwrap(func(entry)));\n\t\treturn array;\n\t});\n}\n\nvar _Json_encodeNull = _Json_wrap(null);\n\n\n\n// TASKS\n\nfunction _Scheduler_succeed(value)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: value\n\t};\n}\n\nfunction _Scheduler_fail(error)\n{\n\treturn {\n\t\t$: 1,\n\t\ta: error\n\t};\n}\n\nfunction _Scheduler_binding(callback)\n{\n\treturn {\n\t\t$: 2,\n\t\tb: callback,\n\t\tc: null\n\t};\n}\n\nvar _Scheduler_andThen = F2(function(callback, task)\n{\n\treturn {\n\t\t$: 3,\n\t\tb: callback,\n\t\td: task\n\t};\n});\n\nvar _Scheduler_onError = F2(function(callback, task)\n{\n\treturn {\n\t\t$: 4,\n\t\tb: callback,\n\t\td: task\n\t};\n});\n\nfunction _Scheduler_receive(callback)\n{\n\treturn {\n\t\t$: 5,\n\t\tb: callback\n\t};\n}\n\n\n// PROCESSES\n\nvar _Scheduler_guid = 0;\n\nfunction _Scheduler_rawSpawn(task)\n{\n\tvar proc = {\n\t\t$: 0,\n\t\te: _Scheduler_guid++,\n\t\tf: task,\n\t\tg: null,\n\t\th: []\n\t};\n\n\t_Scheduler_enqueue(proc);\n\n\treturn proc;\n}\n\nfunction _Scheduler_spawn(task)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tcallback(_Scheduler_succeed(_Scheduler_rawSpawn(task)));\n\t});\n}\n\nfunction _Scheduler_rawSend(proc, msg)\n{\n\tproc.h.push(msg);\n\t_Scheduler_enqueue(proc);\n}\n\nvar _Scheduler_send = F2(function(proc, msg)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\t_Scheduler_rawSend(proc, msg);\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n});\n\nfunction _Scheduler_kill(proc)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tvar task = proc.f;\n\t\tif (task.$ === 2 && task.c)\n\t\t{\n\t\t\ttask.c();\n\t\t}\n\n\t\tproc.f = null;\n\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n}\n\n\n/* STEP PROCESSES\n\ntype alias Process =\n  { $ : tag\n  , id : unique_id\n  , root : Task\n  , stack : null | { $: SUCCEED | FAIL, a: callback, b: stack }\n  , mailbox : [msg]\n  }\n\n*/\n\n\nvar _Scheduler_working = false;\nvar _Scheduler_queue = [];\n\n\nfunction _Scheduler_enqueue(proc)\n{\n\t_Scheduler_queue.push(proc);\n\tif (_Scheduler_working)\n\t{\n\t\treturn;\n\t}\n\t_Scheduler_working = true;\n\twhile (proc = _Scheduler_queue.shift())\n\t{\n\t\t_Scheduler_step(proc);\n\t}\n\t_Scheduler_working = false;\n}\n\n\nfunction _Scheduler_step(proc)\n{\n\twhile (proc.f)\n\t{\n\t\tvar rootTag = proc.f.$;\n\t\tif (rootTag === 0 || rootTag === 1)\n\t\t{\n\t\t\twhile (proc.g && proc.g.$ !== rootTag)\n\t\t\t{\n\t\t\t\tproc.g = proc.g.i;\n\t\t\t}\n\t\t\tif (!proc.g)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tproc.f = proc.g.b(proc.f.a);\n\t\t\tproc.g = proc.g.i;\n\t\t}\n\t\telse if (rootTag === 2)\n\t\t{\n\t\t\tproc.f.c = proc.f.b(function(newRoot) {\n\t\t\t\tproc.f = newRoot;\n\t\t\t\t_Scheduler_enqueue(proc);\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\telse if (rootTag === 5)\n\t\t{\n\t\t\tif (proc.h.length === 0)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tproc.f = proc.f.b(proc.h.shift());\n\t\t}\n\t\telse // if (rootTag === 3 || rootTag === 4)\n\t\t{\n\t\t\tproc.g = {\n\t\t\t\t$: rootTag === 3 ? 0 : 1,\n\t\t\t\tb: proc.f.b,\n\t\t\t\ti: proc.g\n\t\t\t};\n\t\t\tproc.f = proc.f.d;\n\t\t}\n\t}\n}\n\n\n\nfunction _Process_sleep(time)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tvar id = setTimeout(function() {\n\t\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t\t}, time);\n\n\t\treturn function() { clearTimeout(id); };\n\t});\n}\n\n\n\n\n// PROGRAMS\n\n\nvar _Platform_worker = F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.cx,\n\t\timpl.cL,\n\t\timpl.cJ,\n\t\tfunction() { return function() {} }\n\t);\n});\n\n\n\n// INITIALIZE A PROGRAM\n\n\nfunction _Platform_initialize(flagDecoder, args, init, update, subscriptions, stepperBuilder)\n{\n\tvar result = A2(_Json_run, flagDecoder, _Json_wrap(args ? args['flags'] : undefined));\n\t$elm$core$Result$isOk(result) || _Debug_crash(2 /**_UNUSED/, _Json_errorToString(result.a) /**/);\n\tvar managers = {};\n\tvar initPair = init(result.a);\n\tvar model = initPair.a;\n\tvar stepper = stepperBuilder(sendToApp, model);\n\tvar ports = _Platform_setupEffects(managers, sendToApp);\n\n\tfunction sendToApp(msg, viewMetadata)\n\t{\n\t\tvar pair = A2(update, msg, model);\n\t\tstepper(model = pair.a, viewMetadata);\n\t\t_Platform_enqueueEffects(managers, pair.b, subscriptions(model));\n\t}\n\n\t_Platform_enqueueEffects(managers, initPair.b, subscriptions(model));\n\n\treturn ports ? { ports: ports } : {};\n}\n\n\n\n// TRACK PRELOADS\n//\n// This is used by code in elm/browser and elm/http\n// to register any HTTP requests that are triggered by init.\n//\n\n\nvar _Platform_preload;\n\n\nfunction _Platform_registerPreload(url)\n{\n\t_Platform_preload.add(url);\n}\n\n\n\n// EFFECT MANAGERS\n\n\nvar _Platform_effectManagers = {};\n\n\nfunction _Platform_setupEffects(managers, sendToApp)\n{\n\tvar ports;\n\n\t// setup all necessary effect managers\n\tfor (var key in _Platform_effectManagers)\n\t{\n\t\tvar manager = _Platform_effectManagers[key];\n\n\t\tif (manager.a)\n\t\t{\n\t\t\tports = ports || {};\n\t\t\tports[key] = manager.a(key, sendToApp);\n\t\t}\n\n\t\tmanagers[key] = _Platform_instantiateManager(manager, sendToApp);\n\t}\n\n\treturn ports;\n}\n\n\nfunction _Platform_createManager(init, onEffects, onSelfMsg, cmdMap, subMap)\n{\n\treturn {\n\t\tb: init,\n\t\tc: onEffects,\n\t\td: onSelfMsg,\n\t\te: cmdMap,\n\t\tf: subMap\n\t};\n}\n\n\nfunction _Platform_instantiateManager(info, sendToApp)\n{\n\tvar router = {\n\t\tg: sendToApp,\n\t\th: undefined\n\t};\n\n\tvar onEffects = info.c;\n\tvar onSelfMsg = info.d;\n\tvar cmdMap = info.e;\n\tvar subMap = info.f;\n\n\tfunction loop(state)\n\t{\n\t\treturn A2(_Scheduler_andThen, loop, _Scheduler_receive(function(msg)\n\t\t{\n\t\t\tvar value = msg.a;\n\n\t\t\tif (msg.$ === 0)\n\t\t\t{\n\t\t\t\treturn A3(onSelfMsg, router, value, state);\n\t\t\t}\n\n\t\t\treturn cmdMap && subMap\n\t\t\t\t? A4(onEffects, router, value.i, value.j, state)\n\t\t\t\t: A3(onEffects, router, cmdMap ? value.i : value.j, state);\n\t\t}));\n\t}\n\n\treturn router.h = _Scheduler_rawSpawn(A2(_Scheduler_andThen, loop, info.b));\n}\n\n\n\n// ROUTING\n\n\nvar _Platform_sendToApp = F2(function(router, msg)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\trouter.g(msg);\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n});\n\n\nvar _Platform_sendToSelf = F2(function(router, msg)\n{\n\treturn A2(_Scheduler_send, router.h, {\n\t\t$: 0,\n\t\ta: msg\n\t});\n});\n\n\n\n// BAGS\n\n\nfunction _Platform_leaf(home)\n{\n\treturn function(value)\n\t{\n\t\treturn {\n\t\t\t$: 1,\n\t\t\tk: home,\n\t\t\tl: value\n\t\t};\n\t};\n}\n\n\nfunction _Platform_batch(list)\n{\n\treturn {\n\t\t$: 2,\n\t\tm: list\n\t};\n}\n\n\nvar _Platform_map = F2(function(tagger, bag)\n{\n\treturn {\n\t\t$: 3,\n\t\tn: tagger,\n\t\to: bag\n\t}\n});\n\n\n\n// PIPE BAGS INTO EFFECT MANAGERS\n//\n// Effects must be queued!\n//\n// Say your init contains a synchronous command, like Time.now or Time.here\n//\n//   - This will produce a batch of effects (FX_1)\n//   - The synchronous task triggers the subsequent `update` call\n//   - This will produce a batch of effects (FX_2)\n//\n// If we just start dispatching FX_2, subscriptions from FX_2 can be processed\n// before subscriptions from FX_1. No good! Earlier versions of this code had\n// this problem, leading to these reports:\n//\n//   https://github.com/elm/core/issues/980\n//   https://github.com/elm/core/pull/981\n//   https://github.com/elm/compiler/issues/1776\n//\n// The queue is necessary to avoid ordering issues for synchronous commands.\n\n\n// Why use true/false here? Why not just check the length of the queue?\n// The goal is to detect \"are we currently dispatching effects?\" If we\n// are, we need to bail and let the ongoing while loop handle things.\n//\n// Now say the queue has 1 element. When we dequeue the final element,\n// the queue will be empty, but we are still actively dispatching effects.\n// So you could get queue jumping in a really tricky category of cases.\n//\nvar _Platform_effectsQueue = [];\nvar _Platform_effectsActive = false;\n\n\nfunction _Platform_enqueueEffects(managers, cmdBag, subBag)\n{\n\t_Platform_effectsQueue.push({ p: managers, q: cmdBag, r: subBag });\n\n\tif (_Platform_effectsActive) return;\n\n\t_Platform_effectsActive = true;\n\tfor (var fx; fx = _Platform_effectsQueue.shift(); )\n\t{\n\t\t_Platform_dispatchEffects(fx.p, fx.q, fx.r);\n\t}\n\t_Platform_effectsActive = false;\n}\n\n\nfunction _Platform_dispatchEffects(managers, cmdBag, subBag)\n{\n\tvar effectsDict = {};\n\t_Platform_gatherEffects(true, cmdBag, effectsDict, null);\n\t_Platform_gatherEffects(false, subBag, effectsDict, null);\n\n\tfor (var home in managers)\n\t{\n\t\t_Scheduler_rawSend(managers[home], {\n\t\t\t$: 'fx',\n\t\t\ta: effectsDict[home] || { i: _List_Nil, j: _List_Nil }\n\t\t});\n\t}\n}\n\n\nfunction _Platform_gatherEffects(isCmd, bag, effectsDict, taggers)\n{\n\tswitch (bag.$)\n\t{\n\t\tcase 1:\n\t\t\tvar home = bag.k;\n\t\t\tvar effect = _Platform_toEffect(isCmd, home, taggers, bag.l);\n\t\t\teffectsDict[home] = _Platform_insert(isCmd, effect, effectsDict[home]);\n\t\t\treturn;\n\n\t\tcase 2:\n\t\t\tfor (var list = bag.m; list.b; list = list.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\t_Platform_gatherEffects(isCmd, list.a, effectsDict, taggers);\n\t\t\t}\n\t\t\treturn;\n\n\t\tcase 3:\n\t\t\t_Platform_gatherEffects(isCmd, bag.o, effectsDict, {\n\t\t\t\ts: bag.n,\n\t\t\t\tt: taggers\n\t\t\t});\n\t\t\treturn;\n\t}\n}\n\n\nfunction _Platform_toEffect(isCmd, home, taggers, value)\n{\n\tfunction applyTaggers(x)\n\t{\n\t\tfor (var temp = taggers; temp; temp = temp.t)\n\t\t{\n\t\t\tx = temp.s(x);\n\t\t}\n\t\treturn x;\n\t}\n\n\tvar map = isCmd\n\t\t? _Platform_effectManagers[home].e\n\t\t: _Platform_effectManagers[home].f;\n\n\treturn A2(map, applyTaggers, value)\n}\n\n\nfunction _Platform_insert(isCmd, newEffect, effects)\n{\n\teffects = effects || { i: _List_Nil, j: _List_Nil };\n\n\tisCmd\n\t\t? (effects.i = _List_Cons(newEffect, effects.i))\n\t\t: (effects.j = _List_Cons(newEffect, effects.j));\n\n\treturn effects;\n}\n\n\n\n// PORTS\n\n\nfunction _Platform_checkPortName(name)\n{\n\tif (_Platform_effectManagers[name])\n\t{\n\t\t_Debug_crash(3, name)\n\t}\n}\n\n\n\n// OUTGOING PORTS\n\n\nfunction _Platform_outgoingPort(name, converter)\n{\n\t_Platform_checkPortName(name);\n\t_Platform_effectManagers[name] = {\n\t\te: _Platform_outgoingPortMap,\n\t\tu: converter,\n\t\ta: _Platform_setupOutgoingPort\n\t};\n\treturn _Platform_leaf(name);\n}\n\n\nvar _Platform_outgoingPortMap = F2(function(tagger, value) { return value; });\n\n\nfunction _Platform_setupOutgoingPort(name)\n{\n\tvar subs = [];\n\tvar converter = _Platform_effectManagers[name].u;\n\n\t// CREATE MANAGER\n\n\tvar init = _Process_sleep(0);\n\n\t_Platform_effectManagers[name].b = init;\n\t_Platform_effectManagers[name].c = F3(function(router, cmdList, state)\n\t{\n\t\tfor ( ; cmdList.b; cmdList = cmdList.b) // WHILE_CONS\n\t\t{\n\t\t\t// grab a separate reference to subs in case unsubscribe is called\n\t\t\tvar currentSubs = subs;\n\t\t\tvar value = _Json_unwrap(converter(cmdList.a));\n\t\t\tfor (var i = 0; i < currentSubs.length; i++)\n\t\t\t{\n\t\t\t\tcurrentSubs[i](value);\n\t\t\t}\n\t\t}\n\t\treturn init;\n\t});\n\n\t// PUBLIC API\n\n\tfunction subscribe(callback)\n\t{\n\t\tsubs.push(callback);\n\t}\n\n\tfunction unsubscribe(callback)\n\t{\n\t\t// copy subs into a new array in case unsubscribe is called within a\n\t\t// subscribed callback\n\t\tsubs = subs.slice();\n\t\tvar index = subs.indexOf(callback);\n\t\tif (index >= 0)\n\t\t{\n\t\t\tsubs.splice(index, 1);\n\t\t}\n\t}\n\n\treturn {\n\t\tsubscribe: subscribe,\n\t\tunsubscribe: unsubscribe\n\t};\n}\n\n\n\n// INCOMING PORTS\n\n\nfunction _Platform_incomingPort(name, converter)\n{\n\t_Platform_checkPortName(name);\n\t_Platform_effectManagers[name] = {\n\t\tf: _Platform_incomingPortMap,\n\t\tu: converter,\n\t\ta: _Platform_setupIncomingPort\n\t};\n\treturn _Platform_leaf(name);\n}\n\n\nvar _Platform_incomingPortMap = F2(function(tagger, finalTagger)\n{\n\treturn function(value)\n\t{\n\t\treturn tagger(finalTagger(value));\n\t};\n});\n\n\nfunction _Platform_setupIncomingPort(name, sendToApp)\n{\n\tvar subs = _List_Nil;\n\tvar converter = _Platform_effectManagers[name].u;\n\n\t// CREATE MANAGER\n\n\tvar init = _Scheduler_succeed(null);\n\n\t_Platform_effectManagers[name].b = init;\n\t_Platform_effectManagers[name].c = F3(function(router, subList, state)\n\t{\n\t\tsubs = subList;\n\t\treturn init;\n\t});\n\n\t// PUBLIC API\n\n\tfunction send(incomingValue)\n\t{\n\t\tvar result = A2(_Json_run, converter, _Json_wrap(incomingValue));\n\n\t\t$elm$core$Result$isOk(result) || _Debug_crash(4, name, result.a);\n\n\t\tvar value = result.a;\n\t\tfor (var temp = subs; temp.b; temp = temp.b) // WHILE_CONS\n\t\t{\n\t\t\tsendToApp(temp.a(value));\n\t\t}\n\t}\n\n\treturn { send: send };\n}\n\n\n\n// EXPORT ELM MODULES\n//\n// Have DEBUG and PROD versions so that we can (1) give nicer errors in\n// debug mode and (2) not pay for the bits needed for that in prod mode.\n//\n\n\nfunction _Platform_export(exports)\n{\n\tscope['Elm']\n\t\t? _Platform_mergeExportsProd(scope['Elm'], exports)\n\t\t: scope['Elm'] = exports;\n}\n\n\nfunction _Platform_mergeExportsProd(obj, exports)\n{\n\tfor (var name in exports)\n\t{\n\t\t(name in obj)\n\t\t\t? (name == 'init')\n\t\t\t\t? _Debug_crash(6)\n\t\t\t\t: _Platform_mergeExportsProd(obj[name], exports[name])\n\t\t\t: (obj[name] = exports[name]);\n\t}\n}\n\n\nfunction _Platform_export_UNUSED(exports)\n{\n\tscope['Elm']\n\t\t? _Platform_mergeExportsDebug('Elm', scope['Elm'], exports)\n\t\t: scope['Elm'] = exports;\n}\n\n\nfunction _Platform_mergeExportsDebug(moduleName, obj, exports)\n{\n\tfor (var name in exports)\n\t{\n\t\t(name in obj)\n\t\t\t? (name == 'init')\n\t\t\t\t? _Debug_crash(6, moduleName)\n\t\t\t\t: _Platform_mergeExportsDebug(moduleName + '.' + name, obj[name], exports[name])\n\t\t\t: (obj[name] = exports[name]);\n\t}\n}\n\n\n\n\n// HELPERS\n\n\nvar _VirtualDom_divertHrefToApp;\n\nvar _VirtualDom_doc = typeof document !== 'undefined' ? document : {};\n\n\nfunction _VirtualDom_appendChild(parent, child)\n{\n\tparent.appendChild(child);\n}\n\nvar _VirtualDom_init = F4(function(virtualNode, flagDecoder, debugMetadata, args)\n{\n\t// NOTE: this function needs _Platform_export available to work\n\n\t/**/\n\tvar node = args['node'];\n\t//*/\n\t/**_UNUSED/\n\tvar node = args && args['node'] ? args['node'] : _Debug_crash(0);\n\t//*/\n\n\tnode.parentNode.replaceChild(\n\t\t_VirtualDom_render(virtualNode, function() {}),\n\t\tnode\n\t);\n\n\treturn {};\n});\n\n\n\n// TEXT\n\n\nfunction _VirtualDom_text(string)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: string\n\t};\n}\n\n\n\n// NODE\n\n\nvar _VirtualDom_nodeNS = F2(function(namespace, tag)\n{\n\treturn F2(function(factList, kidList)\n\t{\n\t\tfor (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS\n\t\t{\n\t\t\tvar kid = kidList.a;\n\t\t\tdescendantsCount += (kid.b || 0);\n\t\t\tkids.push(kid);\n\t\t}\n\t\tdescendantsCount += kids.length;\n\n\t\treturn {\n\t\t\t$: 1,\n\t\t\tc: tag,\n\t\t\td: _VirtualDom_organizeFacts(factList),\n\t\t\te: kids,\n\t\t\tf: namespace,\n\t\t\tb: descendantsCount\n\t\t};\n\t});\n});\n\n\nvar _VirtualDom_node = _VirtualDom_nodeNS(undefined);\n\n\n\n// KEYED NODE\n\n\nvar _VirtualDom_keyedNodeNS = F2(function(namespace, tag)\n{\n\treturn F2(function(factList, kidList)\n\t{\n\t\tfor (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS\n\t\t{\n\t\t\tvar kid = kidList.a;\n\t\t\tdescendantsCount += (kid.b.b || 0);\n\t\t\tkids.push(kid);\n\t\t}\n\t\tdescendantsCount += kids.length;\n\n\t\treturn {\n\t\t\t$: 2,\n\t\t\tc: tag,\n\t\t\td: _VirtualDom_organizeFacts(factList),\n\t\t\te: kids,\n\t\t\tf: namespace,\n\t\t\tb: descendantsCount\n\t\t};\n\t});\n});\n\n\nvar _VirtualDom_keyedNode = _VirtualDom_keyedNodeNS(undefined);\n\n\n\n// CUSTOM\n\n\nfunction _VirtualDom_custom(factList, model, render, diff)\n{\n\treturn {\n\t\t$: 3,\n\t\td: _VirtualDom_organizeFacts(factList),\n\t\tg: model,\n\t\th: render,\n\t\ti: diff\n\t};\n}\n\n\n\n// MAP\n\n\nvar _VirtualDom_map = F2(function(tagger, node)\n{\n\treturn {\n\t\t$: 4,\n\t\tj: tagger,\n\t\tk: node,\n\t\tb: 1 + (node.b || 0)\n\t};\n});\n\n\n\n// LAZY\n\n\nfunction _VirtualDom_thunk(refs, thunk)\n{\n\treturn {\n\t\t$: 5,\n\t\tl: refs,\n\t\tm: thunk,\n\t\tk: undefined\n\t};\n}\n\nvar _VirtualDom_lazy = F2(function(func, a)\n{\n\treturn _VirtualDom_thunk([func, a], function() {\n\t\treturn func(a);\n\t});\n});\n\nvar _VirtualDom_lazy2 = F3(function(func, a, b)\n{\n\treturn _VirtualDom_thunk([func, a, b], function() {\n\t\treturn A2(func, a, b);\n\t});\n});\n\nvar _VirtualDom_lazy3 = F4(function(func, a, b, c)\n{\n\treturn _VirtualDom_thunk([func, a, b, c], function() {\n\t\treturn A3(func, a, b, c);\n\t});\n});\n\nvar _VirtualDom_lazy4 = F5(function(func, a, b, c, d)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d], function() {\n\t\treturn A4(func, a, b, c, d);\n\t});\n});\n\nvar _VirtualDom_lazy5 = F6(function(func, a, b, c, d, e)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e], function() {\n\t\treturn A5(func, a, b, c, d, e);\n\t});\n});\n\nvar _VirtualDom_lazy6 = F7(function(func, a, b, c, d, e, f)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f], function() {\n\t\treturn A6(func, a, b, c, d, e, f);\n\t});\n});\n\nvar _VirtualDom_lazy7 = F8(function(func, a, b, c, d, e, f, g)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f, g], function() {\n\t\treturn A7(func, a, b, c, d, e, f, g);\n\t});\n});\n\nvar _VirtualDom_lazy8 = F9(function(func, a, b, c, d, e, f, g, h)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f, g, h], function() {\n\t\treturn A8(func, a, b, c, d, e, f, g, h);\n\t});\n});\n\n\n\n// FACTS\n\n\nvar _VirtualDom_on = F2(function(key, handler)\n{\n\treturn {\n\t\t$: 'a0',\n\t\tn: key,\n\t\to: handler\n\t};\n});\nvar _VirtualDom_style = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a1',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_property = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a2',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_attribute = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a3',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_attributeNS = F3(function(namespace, key, value)\n{\n\treturn {\n\t\t$: 'a4',\n\t\tn: key,\n\t\to: { f: namespace, o: value }\n\t};\n});\n\n\n\n// XSS ATTACK VECTOR CHECKS\n//\n// For some reason, tabs can appear in href protocols and it still works.\n// So '\\tjava\\tSCRIPT:alert(\"!!!\")' and 'javascript:alert(\"!!!\")' are the same\n// in practice. That is why _VirtualDom_RE_js and _VirtualDom_RE_js_html look\n// so freaky.\n//\n// Pulling the regular expressions out to the top level gives a slight speed\n// boost in small benchmarks (4-10%) but hoisting values to reduce allocation\n// can be unpredictable in large programs where JIT may have a harder time with\n// functions are not fully self-contained. The benefit is more that the js and\n// js_html ones are so weird that I prefer to see them near each other.\n\n\nvar _VirtualDom_RE_script = /^script$/i;\nvar _VirtualDom_RE_on_formAction = /^(on|formAction$)/i;\nvar _VirtualDom_RE_js = /^\\s*j\\s*a\\s*v\\s*a\\s*s\\s*c\\s*r\\s*i\\s*p\\s*t\\s*:/i;\nvar _VirtualDom_RE_js_html = /^\\s*(j\\s*a\\s*v\\s*a\\s*s\\s*c\\s*r\\s*i\\s*p\\s*t\\s*:|d\\s*a\\s*t\\s*a\\s*:\\s*t\\s*e\\s*x\\s*t\\s*\\/\\s*h\\s*t\\s*m\\s*l\\s*(,|;))/i;\n\n\nfunction _VirtualDom_noScript(tag)\n{\n\treturn _VirtualDom_RE_script.test(tag) ? 'p' : tag;\n}\n\nfunction _VirtualDom_noOnOrFormAction(key)\n{\n\treturn _VirtualDom_RE_on_formAction.test(key) ? 'data-' + key : key;\n}\n\nfunction _VirtualDom_noInnerHtmlOrFormAction(key)\n{\n\treturn key == 'innerHTML' || key == 'formAction' ? 'data-' + key : key;\n}\n\nfunction _VirtualDom_noJavaScriptUri(value)\n{\n\treturn _VirtualDom_RE_js.test(value)\n\t\t? /**/''//*//**_UNUSED/'javascript:alert(\"This is an XSS vector. Please use ports or web components instead.\")'//*/\n\t\t: value;\n}\n\nfunction _VirtualDom_noJavaScriptOrHtmlUri(value)\n{\n\treturn _VirtualDom_RE_js_html.test(value)\n\t\t? /**/''//*//**_UNUSED/'javascript:alert(\"This is an XSS vector. Please use ports or web components instead.\")'//*/\n\t\t: value;\n}\n\nfunction _VirtualDom_noJavaScriptOrHtmlJson(value)\n{\n\treturn (typeof _Json_unwrap(value) === 'string' && _VirtualDom_RE_js_html.test(_Json_unwrap(value)))\n\t\t? _Json_wrap(\n\t\t\t/**/''//*//**_UNUSED/'javascript:alert(\"This is an XSS vector. Please use ports or web components instead.\")'//*/\n\t\t) : value;\n}\n\n\n\n// MAP FACTS\n\n\nvar _VirtualDom_mapAttribute = F2(function(func, attr)\n{\n\treturn (attr.$ === 'a0')\n\t\t? A2(_VirtualDom_on, attr.n, _VirtualDom_mapHandler(func, attr.o))\n\t\t: attr;\n});\n\nfunction _VirtualDom_mapHandler(func, handler)\n{\n\tvar tag = $elm$virtual_dom$VirtualDom$toHandlerInt(handler);\n\n\t// 0 = Normal\n\t// 1 = MayStopPropagation\n\t// 2 = MayPreventDefault\n\t// 3 = Custom\n\n\treturn {\n\t\t$: handler.$,\n\t\ta:\n\t\t\t!tag\n\t\t\t\t? A2($elm$json$Json$Decode$map, func, handler.a)\n\t\t\t\t:\n\t\t\tA3($elm$json$Json$Decode$map2,\n\t\t\t\ttag < 3\n\t\t\t\t\t? _VirtualDom_mapEventTuple\n\t\t\t\t\t: _VirtualDom_mapEventRecord,\n\t\t\t\t$elm$json$Json$Decode$succeed(func),\n\t\t\t\thandler.a\n\t\t\t)\n\t};\n}\n\nvar _VirtualDom_mapEventTuple = F2(function(func, tuple)\n{\n\treturn _Utils_Tuple2(func(tuple.a), tuple.b);\n});\n\nvar _VirtualDom_mapEventRecord = F2(function(func, record)\n{\n\treturn {\n\t\tO: func(record.O),\n\t\tbm: record.bm,\n\t\tbj: record.bj\n\t}\n});\n\n\n\n// ORGANIZE FACTS\n\n\nfunction _VirtualDom_organizeFacts(factList)\n{\n\tfor (var facts = {}; factList.b; factList = factList.b) // WHILE_CONS\n\t{\n\t\tvar entry = factList.a;\n\n\t\tvar tag = entry.$;\n\t\tvar key = entry.n;\n\t\tvar value = entry.o;\n\n\t\tif (tag === 'a2')\n\t\t{\n\t\t\t(key === 'className')\n\t\t\t\t? _VirtualDom_addClass(facts, key, _Json_unwrap(value))\n\t\t\t\t: facts[key] = _Json_unwrap(value);\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar subFacts = facts[tag] || (facts[tag] = {});\n\t\t(tag === 'a3' && key === 'class')\n\t\t\t? _VirtualDom_addClass(subFacts, key, value)\n\t\t\t: subFacts[key] = value;\n\t}\n\n\treturn facts;\n}\n\nfunction _VirtualDom_addClass(object, key, newClass)\n{\n\tvar classes = object[key];\n\tobject[key] = classes ? classes + ' ' + newClass : newClass;\n}\n\n\n\n// RENDER\n\n\nfunction _VirtualDom_render(vNode, eventNode)\n{\n\tvar tag = vNode.$;\n\n\tif (tag === 5)\n\t{\n\t\treturn _VirtualDom_render(vNode.k || (vNode.k = vNode.m()), eventNode);\n\t}\n\n\tif (tag === 0)\n\t{\n\t\treturn _VirtualDom_doc.createTextNode(vNode.a);\n\t}\n\n\tif (tag === 4)\n\t{\n\t\tvar subNode = vNode.k;\n\t\tvar tagger = vNode.j;\n\n\t\twhile (subNode.$ === 4)\n\t\t{\n\t\t\ttypeof tagger !== 'object'\n\t\t\t\t? tagger = [tagger, subNode.j]\n\t\t\t\t: tagger.push(subNode.j);\n\n\t\t\tsubNode = subNode.k;\n\t\t}\n\n\t\tvar subEventRoot = { j: tagger, p: eventNode };\n\t\tvar domNode = _VirtualDom_render(subNode, subEventRoot);\n\t\tdomNode.elm_event_node_ref = subEventRoot;\n\t\treturn domNode;\n\t}\n\n\tif (tag === 3)\n\t{\n\t\tvar domNode = vNode.h(vNode.g);\n\t\t_VirtualDom_applyFacts(domNode, eventNode, vNode.d);\n\t\treturn domNode;\n\t}\n\n\t// at this point `tag` must be 1 or 2\n\n\tvar domNode = vNode.f\n\t\t? _VirtualDom_doc.createElementNS(vNode.f, vNode.c)\n\t\t: _VirtualDom_doc.createElement(vNode.c);\n\n\tif (_VirtualDom_divertHrefToApp && vNode.c == 'a')\n\t{\n\t\tdomNode.addEventListener('click', _VirtualDom_divertHrefToApp(domNode));\n\t}\n\n\t_VirtualDom_applyFacts(domNode, eventNode, vNode.d);\n\n\tfor (var kids = vNode.e, i = 0; i < kids.length; i++)\n\t{\n\t\t_VirtualDom_appendChild(domNode, _VirtualDom_render(tag === 1 ? kids[i] : kids[i].b, eventNode));\n\t}\n\n\treturn domNode;\n}\n\n\n\n// APPLY FACTS\n\n\nfunction _VirtualDom_applyFacts(domNode, eventNode, facts)\n{\n\tfor (var key in facts)\n\t{\n\t\tvar value = facts[key];\n\n\t\tkey === 'a1'\n\t\t\t? _VirtualDom_applyStyles(domNode, value)\n\t\t\t:\n\t\tkey === 'a0'\n\t\t\t? _VirtualDom_applyEvents(domNode, eventNode, value)\n\t\t\t:\n\t\tkey === 'a3'\n\t\t\t? _VirtualDom_applyAttrs(domNode, value)\n\t\t\t:\n\t\tkey === 'a4'\n\t\t\t? _VirtualDom_applyAttrsNS(domNode, value)\n\t\t\t:\n\t\t((key !== 'value' && key !== 'checked') || domNode[key] !== value) && (domNode[key] = value);\n\t}\n}\n\n\n\n// APPLY STYLES\n\n\nfunction _VirtualDom_applyStyles(domNode, styles)\n{\n\tvar domNodeStyle = domNode.style;\n\n\tfor (var key in styles)\n\t{\n\t\tdomNodeStyle[key] = styles[key];\n\t}\n}\n\n\n\n// APPLY ATTRS\n\n\nfunction _VirtualDom_applyAttrs(domNode, attrs)\n{\n\tfor (var key in attrs)\n\t{\n\t\tvar value = attrs[key];\n\t\ttypeof value !== 'undefined'\n\t\t\t? domNode.setAttribute(key, value)\n\t\t\t: domNode.removeAttribute(key);\n\t}\n}\n\n\n\n// APPLY NAMESPACED ATTRS\n\n\nfunction _VirtualDom_applyAttrsNS(domNode, nsAttrs)\n{\n\tfor (var key in nsAttrs)\n\t{\n\t\tvar pair = nsAttrs[key];\n\t\tvar namespace = pair.f;\n\t\tvar value = pair.o;\n\n\t\ttypeof value !== 'undefined'\n\t\t\t? domNode.setAttributeNS(namespace, key, value)\n\t\t\t: domNode.removeAttributeNS(namespace, key);\n\t}\n}\n\n\n\n// APPLY EVENTS\n\n\nfunction _VirtualDom_applyEvents(domNode, eventNode, events)\n{\n\tvar allCallbacks = domNode.elmFs || (domNode.elmFs = {});\n\n\tfor (var key in events)\n\t{\n\t\tvar newHandler = events[key];\n\t\tvar oldCallback = allCallbacks[key];\n\n\t\tif (!newHandler)\n\t\t{\n\t\t\tdomNode.removeEventListener(key, oldCallback);\n\t\t\tallCallbacks[key] = undefined;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (oldCallback)\n\t\t{\n\t\t\tvar oldHandler = oldCallback.q;\n\t\t\tif (oldHandler.$ === newHandler.$)\n\t\t\t{\n\t\t\t\toldCallback.q = newHandler;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tdomNode.removeEventListener(key, oldCallback);\n\t\t}\n\n\t\toldCallback = _VirtualDom_makeCallback(eventNode, newHandler);\n\t\tdomNode.addEventListener(key, oldCallback,\n\t\t\t_VirtualDom_passiveSupported\n\t\t\t&& { passive: $elm$virtual_dom$VirtualDom$toHandlerInt(newHandler) < 2 }\n\t\t);\n\t\tallCallbacks[key] = oldCallback;\n\t}\n}\n\n\n\n// PASSIVE EVENTS\n\n\nvar _VirtualDom_passiveSupported;\n\ntry\n{\n\twindow.addEventListener('t', null, Object.defineProperty({}, 'passive', {\n\t\tget: function() { _VirtualDom_passiveSupported = true; }\n\t}));\n}\ncatch(e) {}\n\n\n\n// EVENT HANDLERS\n\n\nfunction _VirtualDom_makeCallback(eventNode, initialHandler)\n{\n\tfunction callback(event)\n\t{\n\t\tvar handler = callback.q;\n\t\tvar result = _Json_runHelp(handler.a, event);\n\n\t\tif (!$elm$core$Result$isOk(result))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvar tag = $elm$virtual_dom$VirtualDom$toHandlerInt(handler);\n\n\t\t// 0 = Normal\n\t\t// 1 = MayStopPropagation\n\t\t// 2 = MayPreventDefault\n\t\t// 3 = Custom\n\n\t\tvar value = result.a;\n\t\tvar message = !tag ? value : tag < 3 ? value.a : value.O;\n\t\tvar stopPropagation = tag == 1 ? value.b : tag == 3 && value.bm;\n\t\tvar currentEventNode = (\n\t\t\tstopPropagation && event.stopPropagation(),\n\t\t\t(tag == 2 ? value.b : tag == 3 && value.bj) && event.preventDefault(),\n\t\t\teventNode\n\t\t);\n\t\tvar tagger;\n\t\tvar i;\n\t\twhile (tagger = currentEventNode.j)\n\t\t{\n\t\t\tif (typeof tagger == 'function')\n\t\t\t{\n\t\t\t\tmessage = tagger(message);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor (var i = tagger.length; i--; )\n\t\t\t\t{\n\t\t\t\t\tmessage = tagger[i](message);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcurrentEventNode = currentEventNode.p;\n\t\t}\n\t\tcurrentEventNode(message, stopPropagation); // stopPropagation implies isSync\n\t}\n\n\tcallback.q = initialHandler;\n\n\treturn callback;\n}\n\nfunction _VirtualDom_equalEvents(x, y)\n{\n\treturn x.$ == y.$ && _Json_equality(x.a, y.a);\n}\n\n\n\n// DIFF\n\n\n// TODO: Should we do patches like in iOS?\n//\n// type Patch\n//   = At Int Patch\n//   | Batch (List Patch)\n//   | Change ...\n//\n// How could it not be better?\n//\nfunction _VirtualDom_diff(x, y)\n{\n\tvar patches = [];\n\t_VirtualDom_diffHelp(x, y, patches, 0);\n\treturn patches;\n}\n\n\nfunction _VirtualDom_pushPatch(patches, type, index, data)\n{\n\tvar patch = {\n\t\t$: type,\n\t\tr: index,\n\t\ts: data,\n\t\tt: undefined,\n\t\tu: undefined\n\t};\n\tpatches.push(patch);\n\treturn patch;\n}\n\n\nfunction _VirtualDom_diffHelp(x, y, patches, index)\n{\n\tif (x === y)\n\t{\n\t\treturn;\n\t}\n\n\tvar xType = x.$;\n\tvar yType = y.$;\n\n\t// Bail if you run into different types of nodes. Implies that the\n\t// structure has changed significantly and it's not worth a diff.\n\tif (xType !== yType)\n\t{\n\t\tif (xType === 1 && yType === 2)\n\t\t{\n\t\t\ty = _VirtualDom_dekey(y);\n\t\t\tyType = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t// Now we know that both nodes are the same $.\n\tswitch (yType)\n\t{\n\t\tcase 5:\n\t\t\tvar xRefs = x.l;\n\t\t\tvar yRefs = y.l;\n\t\t\tvar i = xRefs.length;\n\t\t\tvar same = i === yRefs.length;\n\t\t\twhile (same && i--)\n\t\t\t{\n\t\t\t\tsame = xRefs[i] === yRefs[i];\n\t\t\t}\n\t\t\tif (same)\n\t\t\t{\n\t\t\t\ty.k = x.k;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ty.k = y.m();\n\t\t\tvar subPatches = [];\n\t\t\t_VirtualDom_diffHelp(x.k, y.k, subPatches, 0);\n\t\t\tsubPatches.length > 0 && _VirtualDom_pushPatch(patches, 1, index, subPatches);\n\t\t\treturn;\n\n\t\tcase 4:\n\t\t\t// gather nested taggers\n\t\t\tvar xTaggers = x.j;\n\t\t\tvar yTaggers = y.j;\n\t\t\tvar nesting = false;\n\n\t\t\tvar xSubNode = x.k;\n\t\t\twhile (xSubNode.$ === 4)\n\t\t\t{\n\t\t\t\tnesting = true;\n\n\t\t\t\ttypeof xTaggers !== 'object'\n\t\t\t\t\t? xTaggers = [xTaggers, xSubNode.j]\n\t\t\t\t\t: xTaggers.push(xSubNode.j);\n\n\t\t\t\txSubNode = xSubNode.k;\n\t\t\t}\n\n\t\t\tvar ySubNode = y.k;\n\t\t\twhile (ySubNode.$ === 4)\n\t\t\t{\n\t\t\t\tnesting = true;\n\n\t\t\t\ttypeof yTaggers !== 'object'\n\t\t\t\t\t? yTaggers = [yTaggers, ySubNode.j]\n\t\t\t\t\t: yTaggers.push(ySubNode.j);\n\n\t\t\t\tySubNode = ySubNode.k;\n\t\t\t}\n\n\t\t\t// Just bail if different numbers of taggers. This implies the\n\t\t\t// structure of the virtual DOM has changed.\n\t\t\tif (nesting && xTaggers.length !== yTaggers.length)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// check if taggers are \"the same\"\n\t\t\tif (nesting ? !_VirtualDom_pairwiseRefEqual(xTaggers, yTaggers) : xTaggers !== yTaggers)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 2, index, yTaggers);\n\t\t\t}\n\n\t\t\t// diff everything below the taggers\n\t\t\t_VirtualDom_diffHelp(xSubNode, ySubNode, patches, index + 1);\n\t\t\treturn;\n\n\t\tcase 0:\n\t\t\tif (x.a !== y.a)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 3, index, y.a);\n\t\t\t}\n\t\t\treturn;\n\n\t\tcase 1:\n\t\t\t_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKids);\n\t\t\treturn;\n\n\t\tcase 2:\n\t\t\t_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKeyedKids);\n\t\t\treturn;\n\n\t\tcase 3:\n\t\t\tif (x.h !== y.h)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar factsDiff = _VirtualDom_diffFacts(x.d, y.d);\n\t\t\tfactsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);\n\n\t\t\tvar patch = y.i(x.g, y.g);\n\t\t\tpatch && _VirtualDom_pushPatch(patches, 5, index, patch);\n\n\t\t\treturn;\n\t}\n}\n\n// assumes the incoming arrays are the same length\nfunction _VirtualDom_pairwiseRefEqual(as, bs)\n{\n\tfor (var i = 0; i < as.length; i++)\n\t{\n\t\tif (as[i] !== bs[i])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction _VirtualDom_diffNodes(x, y, patches, index, diffKids)\n{\n\t// Bail if obvious indicators have changed. Implies more serious\n\t// structural changes such that it's not worth it to diff.\n\tif (x.c !== y.c || x.f !== y.f)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\treturn;\n\t}\n\n\tvar factsDiff = _VirtualDom_diffFacts(x.d, y.d);\n\tfactsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);\n\n\tdiffKids(x, y, patches, index);\n}\n\n\n\n// DIFF FACTS\n\n\n// TODO Instead of creating a new diff object, it's possible to just test if\n// there *is* a diff. During the actual patch, do the diff again and make the\n// modifications directly. This way, there's no new allocations. Worth it?\nfunction _VirtualDom_diffFacts(x, y, category)\n{\n\tvar diff;\n\n\t// look for changes and removals\n\tfor (var xKey in x)\n\t{\n\t\tif (xKey === 'a1' || xKey === 'a0' || xKey === 'a3' || xKey === 'a4')\n\t\t{\n\t\t\tvar subDiff = _VirtualDom_diffFacts(x[xKey], y[xKey] || {}, xKey);\n\t\t\tif (subDiff)\n\t\t\t{\n\t\t\t\tdiff = diff || {};\n\t\t\t\tdiff[xKey] = subDiff;\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove if not in the new facts\n\t\tif (!(xKey in y))\n\t\t{\n\t\t\tdiff = diff || {};\n\t\t\tdiff[xKey] =\n\t\t\t\t!category\n\t\t\t\t\t? (typeof x[xKey] === 'string' ? '' : null)\n\t\t\t\t\t:\n\t\t\t\t(category === 'a1')\n\t\t\t\t\t? ''\n\t\t\t\t\t:\n\t\t\t\t(category === 'a0' || category === 'a3')\n\t\t\t\t\t? undefined\n\t\t\t\t\t:\n\t\t\t\t{ f: x[xKey].f, o: undefined };\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar xValue = x[xKey];\n\t\tvar yValue = y[xKey];\n\n\t\t// reference equal, so don't worry about it\n\t\tif (xValue === yValue && xKey !== 'value' && xKey !== 'checked'\n\t\t\t|| category === 'a0' && _VirtualDom_equalEvents(xValue, yValue))\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\n\t\tdiff = diff || {};\n\t\tdiff[xKey] = yValue;\n\t}\n\n\t// add new stuff\n\tfor (var yKey in y)\n\t{\n\t\tif (!(yKey in x))\n\t\t{\n\t\t\tdiff = diff || {};\n\t\t\tdiff[yKey] = y[yKey];\n\t\t}\n\t}\n\n\treturn diff;\n}\n\n\n\n// DIFF KIDS\n\n\nfunction _VirtualDom_diffKids(xParent, yParent, patches, index)\n{\n\tvar xKids = xParent.e;\n\tvar yKids = yParent.e;\n\n\tvar xLen = xKids.length;\n\tvar yLen = yKids.length;\n\n\t// FIGURE OUT IF THERE ARE INSERTS OR REMOVALS\n\n\tif (xLen > yLen)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 6, index, {\n\t\t\tv: yLen,\n\t\t\ti: xLen - yLen\n\t\t});\n\t}\n\telse if (xLen < yLen)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 7, index, {\n\t\t\tv: xLen,\n\t\t\te: yKids\n\t\t});\n\t}\n\n\t// PAIRWISE DIFF EVERYTHING ELSE\n\n\tfor (var minLen = xLen < yLen ? xLen : yLen, i = 0; i < minLen; i++)\n\t{\n\t\tvar xKid = xKids[i];\n\t\t_VirtualDom_diffHelp(xKid, yKids[i], patches, ++index);\n\t\tindex += xKid.b || 0;\n\t}\n}\n\n\n\n// KEYED DIFF\n\n\nfunction _VirtualDom_diffKeyedKids(xParent, yParent, patches, rootIndex)\n{\n\tvar localPatches = [];\n\n\tvar changes = {}; // Dict String Entry\n\tvar inserts = []; // Array { index : Int, entry : Entry }\n\t// type Entry = { tag : String, vnode : VNode, index : Int, data : _ }\n\n\tvar xKids = xParent.e;\n\tvar yKids = yParent.e;\n\tvar xLen = xKids.length;\n\tvar yLen = yKids.length;\n\tvar xIndex = 0;\n\tvar yIndex = 0;\n\n\tvar index = rootIndex;\n\n\twhile (xIndex < xLen && yIndex < yLen)\n\t{\n\t\tvar x = xKids[xIndex];\n\t\tvar y = yKids[yIndex];\n\n\t\tvar xKey = x.a;\n\t\tvar yKey = y.a;\n\t\tvar xNode = x.b;\n\t\tvar yNode = y.b;\n\n\t\tvar newMatch = undefined;\n\t\tvar oldMatch = undefined;\n\n\t\t// check if keys match\n\n\t\tif (xKey === yKey)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNode, yNode, localPatches, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\txIndex++;\n\t\t\tyIndex++;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// look ahead 1 to detect insertions and removals.\n\n\t\tvar xNext = xKids[xIndex + 1];\n\t\tvar yNext = yKids[yIndex + 1];\n\n\t\tif (xNext)\n\t\t{\n\t\t\tvar xNextKey = xNext.a;\n\t\t\tvar xNextNode = xNext.b;\n\t\t\toldMatch = yKey === xNextKey;\n\t\t}\n\n\t\tif (yNext)\n\t\t{\n\t\t\tvar yNextKey = yNext.a;\n\t\t\tvar yNextNode = yNext.b;\n\t\t\tnewMatch = xKey === yNextKey;\n\t\t}\n\n\n\t\t// swap x and y\n\t\tif (newMatch && oldMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);\n\t\t\t_VirtualDom_insertNode(changes, localPatches, xKey, yNode, yIndex, inserts);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNextNode, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// insert y\n\t\tif (newMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);\n\t\t\t_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\txIndex += 1;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove x\n\t\tif (oldMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNextNode, yNode, localPatches, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 1;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove x, insert y\n\t\tif (xNext && xNextKey === yNextKey)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);\n\t\t\t_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNextNode, yNextNode, localPatches, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\tbreak;\n\t}\n\n\t// eat up any remaining nodes with removeNode and insertNode\n\n\twhile (xIndex < xLen)\n\t{\n\t\tindex++;\n\t\tvar x = xKids[xIndex];\n\t\tvar xNode = x.b;\n\t\t_VirtualDom_removeNode(changes, localPatches, x.a, xNode, index);\n\t\tindex += xNode.b || 0;\n\t\txIndex++;\n\t}\n\n\twhile (yIndex < yLen)\n\t{\n\t\tvar endInserts = endInserts || [];\n\t\tvar y = yKids[yIndex];\n\t\t_VirtualDom_insertNode(changes, localPatches, y.a, y.b, undefined, endInserts);\n\t\tyIndex++;\n\t}\n\n\tif (localPatches.length > 0 || inserts.length > 0 || endInserts)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 8, rootIndex, {\n\t\t\tw: localPatches,\n\t\t\tx: inserts,\n\t\t\ty: endInserts\n\t\t});\n\t}\n}\n\n\n\n// CHANGES FROM KEYED DIFF\n\n\nvar _VirtualDom_POSTFIX = '_elmW6BL';\n\n\nfunction _VirtualDom_insertNode(changes, localPatches, key, vnode, yIndex, inserts)\n{\n\tvar entry = changes[key];\n\n\t// never seen this key before\n\tif (!entry)\n\t{\n\t\tentry = {\n\t\t\tc: 0,\n\t\t\tz: vnode,\n\t\t\tr: yIndex,\n\t\t\ts: undefined\n\t\t};\n\n\t\tinserts.push({ r: yIndex, A: entry });\n\t\tchanges[key] = entry;\n\n\t\treturn;\n\t}\n\n\t// this key was removed earlier, a match!\n\tif (entry.c === 1)\n\t{\n\t\tinserts.push({ r: yIndex, A: entry });\n\n\t\tentry.c = 2;\n\t\tvar subPatches = [];\n\t\t_VirtualDom_diffHelp(entry.z, vnode, subPatches, entry.r);\n\t\tentry.r = yIndex;\n\t\tentry.s.s = {\n\t\t\tw: subPatches,\n\t\t\tA: entry\n\t\t};\n\n\t\treturn;\n\t}\n\n\t// this key has already been inserted or moved, a duplicate!\n\t_VirtualDom_insertNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, yIndex, inserts);\n}\n\n\nfunction _VirtualDom_removeNode(changes, localPatches, key, vnode, index)\n{\n\tvar entry = changes[key];\n\n\t// never seen this key before\n\tif (!entry)\n\t{\n\t\tvar patch = _VirtualDom_pushPatch(localPatches, 9, index, undefined);\n\n\t\tchanges[key] = {\n\t\t\tc: 1,\n\t\t\tz: vnode,\n\t\t\tr: index,\n\t\t\ts: patch\n\t\t};\n\n\t\treturn;\n\t}\n\n\t// this key was inserted earlier, a match!\n\tif (entry.c === 0)\n\t{\n\t\tentry.c = 2;\n\t\tvar subPatches = [];\n\t\t_VirtualDom_diffHelp(vnode, entry.z, subPatches, index);\n\n\t\t_VirtualDom_pushPatch(localPatches, 9, index, {\n\t\t\tw: subPatches,\n\t\t\tA: entry\n\t\t});\n\n\t\treturn;\n\t}\n\n\t// this key has already been removed or moved, a duplicate!\n\t_VirtualDom_removeNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, index);\n}\n\n\n\n// ADD DOM NODES\n//\n// Each DOM node has an \"index\" assigned in order of traversal. It is important\n// to minimize our crawl over the actual DOM, so these indexes (along with the\n// descendantsCount of virtual nodes) let us skip touching entire subtrees of\n// the DOM if we know there are no patches there.\n\n\nfunction _VirtualDom_addDomNodes(domNode, vNode, patches, eventNode)\n{\n\t_VirtualDom_addDomNodesHelp(domNode, vNode, patches, 0, 0, vNode.b, eventNode);\n}\n\n\n// assumes `patches` is non-empty and indexes increase monotonically.\nfunction _VirtualDom_addDomNodesHelp(domNode, vNode, patches, i, low, high, eventNode)\n{\n\tvar patch = patches[i];\n\tvar index = patch.r;\n\n\twhile (index === low)\n\t{\n\t\tvar patchType = patch.$;\n\n\t\tif (patchType === 1)\n\t\t{\n\t\t\t_VirtualDom_addDomNodes(domNode, vNode.k, patch.s, eventNode);\n\t\t}\n\t\telse if (patchType === 8)\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\n\t\t\tvar subPatches = patch.s.w;\n\t\t\tif (subPatches.length > 0)\n\t\t\t{\n\t\t\t\t_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);\n\t\t\t}\n\t\t}\n\t\telse if (patchType === 9)\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\n\t\t\tvar data = patch.s;\n\t\t\tif (data)\n\t\t\t{\n\t\t\t\tdata.A.s = domNode;\n\t\t\t\tvar subPatches = data.w;\n\t\t\t\tif (subPatches.length > 0)\n\t\t\t\t{\n\t\t\t\t\t_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\t\t}\n\n\t\ti++;\n\n\t\tif (!(patch = patches[i]) || (index = patch.r) > high)\n\t\t{\n\t\t\treturn i;\n\t\t}\n\t}\n\n\tvar tag = vNode.$;\n\n\tif (tag === 4)\n\t{\n\t\tvar subNode = vNode.k;\n\n\t\twhile (subNode.$ === 4)\n\t\t{\n\t\t\tsubNode = subNode.k;\n\t\t}\n\n\t\treturn _VirtualDom_addDomNodesHelp(domNode, subNode, patches, i, low + 1, high, domNode.elm_event_node_ref);\n\t}\n\n\t// tag must be 1 or 2 at this point\n\n\tvar vKids = vNode.e;\n\tvar childNodes = domNode.childNodes;\n\tfor (var j = 0; j < vKids.length; j++)\n\t{\n\t\tlow++;\n\t\tvar vKid = tag === 1 ? vKids[j] : vKids[j].b;\n\t\tvar nextLow = low + (vKid.b || 0);\n\t\tif (low <= index && index <= nextLow)\n\t\t{\n\t\t\ti = _VirtualDom_addDomNodesHelp(childNodes[j], vKid, patches, i, low, nextLow, eventNode);\n\t\t\tif (!(patch = patches[i]) || (index = patch.r) > high)\n\t\t\t{\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\tlow = nextLow;\n\t}\n\treturn i;\n}\n\n\n\n// APPLY PATCHES\n\n\nfunction _VirtualDom_applyPatches(rootDomNode, oldVirtualNode, patches, eventNode)\n{\n\tif (patches.length === 0)\n\t{\n\t\treturn rootDomNode;\n\t}\n\n\t_VirtualDom_addDomNodes(rootDomNode, oldVirtualNode, patches, eventNode);\n\treturn _VirtualDom_applyPatchesHelp(rootDomNode, patches);\n}\n\nfunction _VirtualDom_applyPatchesHelp(rootDomNode, patches)\n{\n\tfor (var i = 0; i < patches.length; i++)\n\t{\n\t\tvar patch = patches[i];\n\t\tvar localDomNode = patch.t\n\t\tvar newNode = _VirtualDom_applyPatch(localDomNode, patch);\n\t\tif (localDomNode === rootDomNode)\n\t\t{\n\t\t\trootDomNode = newNode;\n\t\t}\n\t}\n\treturn rootDomNode;\n}\n\nfunction _VirtualDom_applyPatch(domNode, patch)\n{\n\tswitch (patch.$)\n\t{\n\t\tcase 0:\n\t\t\treturn _VirtualDom_applyPatchRedraw(domNode, patch.s, patch.u);\n\n\t\tcase 4:\n\t\t\t_VirtualDom_applyFacts(domNode, patch.u, patch.s);\n\t\t\treturn domNode;\n\n\t\tcase 3:\n\t\t\tdomNode.replaceData(0, domNode.length, patch.s);\n\t\t\treturn domNode;\n\n\t\tcase 1:\n\t\t\treturn _VirtualDom_applyPatchesHelp(domNode, patch.s);\n\n\t\tcase 2:\n\t\t\tif (domNode.elm_event_node_ref)\n\t\t\t{\n\t\t\t\tdomNode.elm_event_node_ref.j = patch.s;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdomNode.elm_event_node_ref = { j: patch.s, p: patch.u };\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 6:\n\t\t\tvar data = patch.s;\n\t\t\tfor (var i = 0; i < data.i; i++)\n\t\t\t{\n\t\t\t\tdomNode.removeChild(domNode.childNodes[data.v]);\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 7:\n\t\t\tvar data = patch.s;\n\t\t\tvar kids = data.e;\n\t\t\tvar i = data.v;\n\t\t\tvar theEnd = domNode.childNodes[i];\n\t\t\tfor (; i < kids.length; i++)\n\t\t\t{\n\t\t\t\tdomNode.insertBefore(_VirtualDom_render(kids[i], patch.u), theEnd);\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 9:\n\t\t\tvar data = patch.s;\n\t\t\tif (!data)\n\t\t\t{\n\t\t\t\tdomNode.parentNode.removeChild(domNode);\n\t\t\t\treturn domNode;\n\t\t\t}\n\t\t\tvar entry = data.A;\n\t\t\tif (typeof entry.r !== 'undefined')\n\t\t\t{\n\t\t\t\tdomNode.parentNode.removeChild(domNode);\n\t\t\t}\n\t\t\tentry.s = _VirtualDom_applyPatchesHelp(domNode, data.w);\n\t\t\treturn domNode;\n\n\t\tcase 8:\n\t\t\treturn _VirtualDom_applyPatchReorder(domNode, patch);\n\n\t\tcase 5:\n\t\t\treturn patch.s(domNode);\n\n\t\tdefault:\n\t\t\t_Debug_crash(10); // 'Ran into an unknown patch!'\n\t}\n}\n\n\nfunction _VirtualDom_applyPatchRedraw(domNode, vNode, eventNode)\n{\n\tvar parentNode = domNode.parentNode;\n\tvar newNode = _VirtualDom_render(vNode, eventNode);\n\n\tif (!newNode.elm_event_node_ref)\n\t{\n\t\tnewNode.elm_event_node_ref = domNode.elm_event_node_ref;\n\t}\n\n\tif (parentNode && newNode !== domNode)\n\t{\n\t\tparentNode.replaceChild(newNode, domNode);\n\t}\n\treturn newNode;\n}\n\n\nfunction _VirtualDom_applyPatchReorder(domNode, patch)\n{\n\tvar data = patch.s;\n\n\t// remove end inserts\n\tvar frag = _VirtualDom_applyPatchReorderEndInsertsHelp(data.y, patch);\n\n\t// removals\n\tdomNode = _VirtualDom_applyPatchesHelp(domNode, data.w);\n\n\t// inserts\n\tvar inserts = data.x;\n\tfor (var i = 0; i < inserts.length; i++)\n\t{\n\t\tvar insert = inserts[i];\n\t\tvar entry = insert.A;\n\t\tvar node = entry.c === 2\n\t\t\t? entry.s\n\t\t\t: _VirtualDom_render(entry.z, patch.u);\n\t\tdomNode.insertBefore(node, domNode.childNodes[insert.r]);\n\t}\n\n\t// add end inserts\n\tif (frag)\n\t{\n\t\t_VirtualDom_appendChild(domNode, frag);\n\t}\n\n\treturn domNode;\n}\n\n\nfunction _VirtualDom_applyPatchReorderEndInsertsHelp(endInserts, patch)\n{\n\tif (!endInserts)\n\t{\n\t\treturn;\n\t}\n\n\tvar frag = _VirtualDom_doc.createDocumentFragment();\n\tfor (var i = 0; i < endInserts.length; i++)\n\t{\n\t\tvar insert = endInserts[i];\n\t\tvar entry = insert.A;\n\t\t_VirtualDom_appendChild(frag, entry.c === 2\n\t\t\t? entry.s\n\t\t\t: _VirtualDom_render(entry.z, patch.u)\n\t\t);\n\t}\n\treturn frag;\n}\n\n\nfunction _VirtualDom_virtualize(node)\n{\n\t// TEXT NODES\n\n\tif (node.nodeType === 3)\n\t{\n\t\treturn _VirtualDom_text(node.textContent);\n\t}\n\n\n\t// WEIRD NODES\n\n\tif (node.nodeType !== 1)\n\t{\n\t\treturn _VirtualDom_text('');\n\t}\n\n\n\t// ELEMENT NODES\n\n\tvar attrList = _List_Nil;\n\tvar attrs = node.attributes;\n\tfor (var i = attrs.length; i--; )\n\t{\n\t\tvar attr = attrs[i];\n\t\tvar name = attr.name;\n\t\tvar value = attr.value;\n\t\tattrList = _List_Cons( A2(_VirtualDom_attribute, name, value), attrList );\n\t}\n\n\tvar tag = node.tagName.toLowerCase();\n\tvar kidList = _List_Nil;\n\tvar kids = node.childNodes;\n\n\tfor (var i = kids.length; i--; )\n\t{\n\t\tkidList = _List_Cons(_VirtualDom_virtualize(kids[i]), kidList);\n\t}\n\treturn A3(_VirtualDom_node, tag, attrList, kidList);\n}\n\nfunction _VirtualDom_dekey(keyedNode)\n{\n\tvar keyedKids = keyedNode.e;\n\tvar len = keyedKids.length;\n\tvar kids = new Array(len);\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tkids[i] = keyedKids[i].b;\n\t}\n\n\treturn {\n\t\t$: 1,\n\t\tc: keyedNode.c,\n\t\td: keyedNode.d,\n\t\te: kids,\n\t\tf: keyedNode.f,\n\t\tb: keyedNode.b\n\t};\n}\n\n\n\n\n// ELEMENT\n\n\nvar _Debugger_element;\n\nvar _Browser_element = _Debugger_element || F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.cx,\n\t\timpl.cL,\n\t\timpl.cJ,\n\t\tfunction(sendToApp, initialModel) {\n\t\t\tvar view = impl.cN;\n\t\t\t/**/\n\t\t\tvar domNode = args['node'];\n\t\t\t//*/\n\t\t\t/**_UNUSED/\n\t\t\tvar domNode = args && args['node'] ? args['node'] : _Debug_crash(0);\n\t\t\t//*/\n\t\t\tvar currNode = _VirtualDom_virtualize(domNode);\n\n\t\t\treturn _Browser_makeAnimator(initialModel, function(model)\n\t\t\t{\n\t\t\t\tvar nextNode = view(model);\n\t\t\t\tvar patches = _VirtualDom_diff(currNode, nextNode);\n\t\t\t\tdomNode = _VirtualDom_applyPatches(domNode, currNode, patches, sendToApp);\n\t\t\t\tcurrNode = nextNode;\n\t\t\t});\n\t\t}\n\t);\n});\n\n\n\n// DOCUMENT\n\n\nvar _Debugger_document;\n\nvar _Browser_document = _Debugger_document || F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.cx,\n\t\timpl.cL,\n\t\timpl.cJ,\n\t\tfunction(sendToApp, initialModel) {\n\t\t\tvar divertHrefToApp = impl.bk && impl.bk(sendToApp)\n\t\t\tvar view = impl.cN;\n\t\t\tvar title = _VirtualDom_doc.title;\n\t\t\tvar bodyNode = _VirtualDom_doc.body;\n\t\t\tvar currNode = _VirtualDom_virtualize(bodyNode);\n\t\t\treturn _Browser_makeAnimator(initialModel, function(model)\n\t\t\t{\n\t\t\t\t_VirtualDom_divertHrefToApp = divertHrefToApp;\n\t\t\t\tvar doc = view(model);\n\t\t\t\tvar nextNode = _VirtualDom_node('body')(_List_Nil)(doc.cl);\n\t\t\t\tvar patches = _VirtualDom_diff(currNode, nextNode);\n\t\t\t\tbodyNode = _VirtualDom_applyPatches(bodyNode, currNode, patches, sendToApp);\n\t\t\t\tcurrNode = nextNode;\n\t\t\t\t_VirtualDom_divertHrefToApp = 0;\n\t\t\t\t(title !== doc.cK) && (_VirtualDom_doc.title = title = doc.cK);\n\t\t\t});\n\t\t}\n\t);\n});\n\n\n\n// ANIMATION\n\n\nvar _Browser_cancelAnimationFrame =\n\ttypeof cancelAnimationFrame !== 'undefined'\n\t\t? cancelAnimationFrame\n\t\t: function(id) { clearTimeout(id); };\n\nvar _Browser_requestAnimationFrame =\n\ttypeof requestAnimationFrame !== 'undefined'\n\t\t? requestAnimationFrame\n\t\t: function(callback) { return setTimeout(callback, 1000 / 60); };\n\n\nfunction _Browser_makeAnimator(model, draw)\n{\n\tdraw(model);\n\n\tvar state = 0;\n\n\tfunction updateIfNeeded()\n\t{\n\t\tstate = state === 1\n\t\t\t? 0\n\t\t\t: ( _Browser_requestAnimationFrame(updateIfNeeded), draw(model), 1 );\n\t}\n\n\treturn function(nextModel, isSync)\n\t{\n\t\tmodel = nextModel;\n\n\t\tisSync\n\t\t\t? ( draw(model),\n\t\t\t\tstate === 2 && (state = 1)\n\t\t\t\t)\n\t\t\t: ( state === 0 && _Browser_requestAnimationFrame(updateIfNeeded),\n\t\t\t\tstate = 2\n\t\t\t\t);\n\t};\n}\n\n\n\n// APPLICATION\n\n\nfunction _Browser_application(impl)\n{\n\tvar onUrlChange = impl.cC;\n\tvar onUrlRequest = impl.cD;\n\tvar key = function() { key.a(onUrlChange(_Browser_getUrl())); };\n\n\treturn _Browser_document({\n\t\tbk: function(sendToApp)\n\t\t{\n\t\t\tkey.a = sendToApp;\n\t\t\t_Browser_window.addEventListener('popstate', key);\n\t\t\t_Browser_window.navigator.userAgent.indexOf('Trident') < 0 || _Browser_window.addEventListener('hashchange', key);\n\n\t\t\treturn F2(function(domNode, event)\n\t\t\t{\n\t\t\t\tif (!event.ctrlKey && !event.metaKey && !event.shiftKey && event.button < 1 && !domNode.target && !domNode.hasAttribute('download'))\n\t\t\t\t{\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tvar href = domNode.href;\n\t\t\t\t\tvar curr = _Browser_getUrl();\n\t\t\t\t\tvar next = $elm$url$Url$fromString(href).a;\n\t\t\t\t\tsendToApp(onUrlRequest(\n\t\t\t\t\t\t(next\n\t\t\t\t\t\t\t&& curr.b_ === next.b_\n\t\t\t\t\t\t\t&& curr.bK === next.bK\n\t\t\t\t\t\t\t&& curr.bX.a === next.bX.a\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\t? $elm$browser$Browser$Internal(next)\n\t\t\t\t\t\t\t: $elm$browser$Browser$External(href)\n\t\t\t\t\t));\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\tcx: function(flags)\n\t\t{\n\t\t\treturn A3(impl.cx, flags, _Browser_getUrl(), key);\n\t\t},\n\t\tcN: impl.cN,\n\t\tcL: impl.cL,\n\t\tcJ: impl.cJ\n\t});\n}\n\nfunction _Browser_getUrl()\n{\n\treturn $elm$url$Url$fromString(_VirtualDom_doc.location.href).a || _Debug_crash(1);\n}\n\nvar _Browser_go = F2(function(key, n)\n{\n\treturn A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function() {\n\t\tn && history.go(n);\n\t\tkey();\n\t}));\n});\n\nvar _Browser_pushUrl = F2(function(key, url)\n{\n\treturn A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function() {\n\t\thistory.pushState({}, '', url);\n\t\tkey();\n\t}));\n});\n\nvar _Browser_replaceUrl = F2(function(key, url)\n{\n\treturn A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function() {\n\t\thistory.replaceState({}, '', url);\n\t\tkey();\n\t}));\n});\n\n\n\n// GLOBAL EVENTS\n\n\nvar _Browser_fakeNode = { addEventListener: function() {}, removeEventListener: function() {} };\nvar _Browser_doc = typeof document !== 'undefined' ? document : _Browser_fakeNode;\nvar _Browser_window = typeof window !== 'undefined' ? window : _Browser_fakeNode;\n\nvar _Browser_on = F3(function(node, eventName, sendToSelf)\n{\n\treturn _Scheduler_spawn(_Scheduler_binding(function(callback)\n\t{\n\t\tfunction handler(event)\t{ _Scheduler_rawSpawn(sendToSelf(event)); }\n\t\tnode.addEventListener(eventName, handler, _VirtualDom_passiveSupported && { passive: true });\n\t\treturn function() { node.removeEventListener(eventName, handler); };\n\t}));\n});\n\nvar _Browser_decodeEvent = F2(function(decoder, event)\n{\n\tvar result = _Json_runHelp(decoder, event);\n\treturn $elm$core$Result$isOk(result) ? $elm$core$Maybe$Just(result.a) : $elm$core$Maybe$Nothing;\n});\n\n\n\n// PAGE VISIBILITY\n\n\nfunction _Browser_visibilityInfo()\n{\n\treturn (typeof _VirtualDom_doc.hidden !== 'undefined')\n\t\t? { cu: 'hidden', cm: 'visibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.mozHidden !== 'undefined')\n\t\t? { cu: 'mozHidden', cm: 'mozvisibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.msHidden !== 'undefined')\n\t\t? { cu: 'msHidden', cm: 'msvisibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.webkitHidden !== 'undefined')\n\t\t? { cu: 'webkitHidden', cm: 'webkitvisibilitychange' }\n\t\t: { cu: 'hidden', cm: 'visibilitychange' };\n}\n\n\n\n// ANIMATION FRAMES\n\n\nfunction _Browser_rAF()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tvar id = _Browser_requestAnimationFrame(function() {\n\t\t\tcallback(_Scheduler_succeed(Date.now()));\n\t\t});\n\n\t\treturn function() {\n\t\t\t_Browser_cancelAnimationFrame(id);\n\t\t};\n\t});\n}\n\n\nfunction _Browser_now()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tcallback(_Scheduler_succeed(Date.now()));\n\t});\n}\n\n\n\n// DOM STUFF\n\n\nfunction _Browser_withNode(id, doStuff)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\t_Browser_requestAnimationFrame(function() {\n\t\t\tvar node = document.getElementById(id);\n\t\t\tcallback(node\n\t\t\t\t? _Scheduler_succeed(doStuff(node))\n\t\t\t\t: _Scheduler_fail($elm$browser$Browser$Dom$NotFound(id))\n\t\t\t);\n\t\t});\n\t});\n}\n\n\nfunction _Browser_withWindow(doStuff)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\t_Browser_requestAnimationFrame(function() {\n\t\t\tcallback(_Scheduler_succeed(doStuff()));\n\t\t});\n\t});\n}\n\n\n// FOCUS and BLUR\n\n\nvar _Browser_call = F2(function(functionName, id)\n{\n\treturn _Browser_withNode(id, function(node) {\n\t\tnode[functionName]();\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// WINDOW VIEWPORT\n\n\nfunction _Browser_getViewport()\n{\n\treturn {\n\t\tb4: _Browser_getScene(),\n\t\tcb: {\n\t\t\tcd: _Browser_window.pageXOffset,\n\t\t\tce: _Browser_window.pageYOffset,\n\t\t\tcc: _Browser_doc.documentElement.clientWidth,\n\t\t\tbJ: _Browser_doc.documentElement.clientHeight\n\t\t}\n\t};\n}\n\nfunction _Browser_getScene()\n{\n\tvar body = _Browser_doc.body;\n\tvar elem = _Browser_doc.documentElement;\n\treturn {\n\t\tcc: Math.max(body.scrollWidth, body.offsetWidth, elem.scrollWidth, elem.offsetWidth, elem.clientWidth),\n\t\tbJ: Math.max(body.scrollHeight, body.offsetHeight, elem.scrollHeight, elem.offsetHeight, elem.clientHeight)\n\t};\n}\n\nvar _Browser_setViewport = F2(function(x, y)\n{\n\treturn _Browser_withWindow(function()\n\t{\n\t\t_Browser_window.scroll(x, y);\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// ELEMENT VIEWPORT\n\n\nfunction _Browser_getViewportOf(id)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\treturn {\n\t\t\tb4: {\n\t\t\t\tcc: node.scrollWidth,\n\t\t\t\tbJ: node.scrollHeight\n\t\t\t},\n\t\t\tcb: {\n\t\t\t\tcd: node.scrollLeft,\n\t\t\t\tce: node.scrollTop,\n\t\t\t\tcc: node.clientWidth,\n\t\t\t\tbJ: node.clientHeight\n\t\t\t}\n\t\t};\n\t});\n}\n\n\nvar _Browser_setViewportOf = F3(function(id, x, y)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\tnode.scrollLeft = x;\n\t\tnode.scrollTop = y;\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// ELEMENT\n\n\nfunction _Browser_getElement(id)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\tvar rect = node.getBoundingClientRect();\n\t\tvar x = _Browser_window.pageXOffset;\n\t\tvar y = _Browser_window.pageYOffset;\n\t\treturn {\n\t\t\tb4: _Browser_getScene(),\n\t\t\tcb: {\n\t\t\t\tcd: x,\n\t\t\t\tce: y,\n\t\t\t\tcc: _Browser_doc.documentElement.clientWidth,\n\t\t\t\tbJ: _Browser_doc.documentElement.clientHeight\n\t\t\t},\n\t\t\tcq: {\n\t\t\t\tcd: x + rect.left,\n\t\t\t\tce: y + rect.top,\n\t\t\t\tcc: rect.width,\n\t\t\t\tbJ: rect.height\n\t\t\t}\n\t\t};\n\t});\n}\n\n\n\n// LOAD and RELOAD\n\n\nfunction _Browser_reload(skipCache)\n{\n\treturn A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function(callback)\n\t{\n\t\t_VirtualDom_doc.location.reload(skipCache);\n\t}));\n}\n\nfunction _Browser_load(url)\n{\n\treturn A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function(callback)\n\t{\n\t\ttry\n\t\t{\n\t\t\t_Browser_window.location = url;\n\t\t}\n\t\tcatch(err)\n\t\t{\n\t\t\t// Only Firefox can throw a NS_ERROR_MALFORMED_URI exception here.\n\t\t\t// Other browsers reload the page, so let's be consistent about that.\n\t\t\t_VirtualDom_doc.location.reload(false);\n\t\t}\n\t}));\n}\n\n\n\nvar _Bitwise_and = F2(function(a, b)\n{\n\treturn a & b;\n});\n\nvar _Bitwise_or = F2(function(a, b)\n{\n\treturn a | b;\n});\n\nvar _Bitwise_xor = F2(function(a, b)\n{\n\treturn a ^ b;\n});\n\nfunction _Bitwise_complement(a)\n{\n\treturn ~a;\n};\n\nvar _Bitwise_shiftLeftBy = F2(function(offset, a)\n{\n\treturn a << offset;\n});\n\nvar _Bitwise_shiftRightBy = F2(function(offset, a)\n{\n\treturn a >> offset;\n});\n\nvar _Bitwise_shiftRightZfBy = F2(function(offset, a)\n{\n\treturn a >>> offset;\n});\nvar $elm$core$List$cons = _List_cons;\nvar $elm$core$Elm$JsArray$foldr = _JsArray_foldr;\nvar $elm$core$Array$foldr = F3(\n\tfunction (func, baseCase, _v0) {\n\t\tvar tree = _v0.c;\n\t\tvar tail = _v0.d;\n\t\tvar helper = F2(\n\t\t\tfunction (node, acc) {\n\t\t\t\tif (!node.$) {\n\t\t\t\t\tvar subTree = node.a;\n\t\t\t\t\treturn A3($elm$core$Elm$JsArray$foldr, helper, acc, subTree);\n\t\t\t\t} else {\n\t\t\t\t\tvar values = node.a;\n\t\t\t\t\treturn A3($elm$core$Elm$JsArray$foldr, func, acc, values);\n\t\t\t\t}\n\t\t\t});\n\t\treturn A3(\n\t\t\t$elm$core$Elm$JsArray$foldr,\n\t\t\thelper,\n\t\t\tA3($elm$core$Elm$JsArray$foldr, func, baseCase, tail),\n\t\t\ttree);\n\t});\nvar $elm$core$Array$toList = function (array) {\n\treturn A3($elm$core$Array$foldr, $elm$core$List$cons, _List_Nil, array);\n};\nvar $elm$core$Dict$foldr = F3(\n\tfunction (func, acc, t) {\n\t\tfoldr:\n\t\twhile (true) {\n\t\t\tif (t.$ === -2) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar key = t.b;\n\t\t\t\tvar value = t.c;\n\t\t\t\tvar left = t.d;\n\t\t\t\tvar right = t.e;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A3(\n\t\t\t\t\tfunc,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA3($elm$core$Dict$foldr, func, acc, right)),\n\t\t\t\t\t$temp$t = left;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tt = $temp$t;\n\t\t\t\tcontinue foldr;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Dict$toList = function (dict) {\n\treturn A3(\n\t\t$elm$core$Dict$foldr,\n\t\tF3(\n\t\t\tfunction (key, value, list) {\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t_Utils_Tuple2(key, value),\n\t\t\t\t\tlist);\n\t\t\t}),\n\t\t_List_Nil,\n\t\tdict);\n};\nvar $elm$core$Dict$keys = function (dict) {\n\treturn A3(\n\t\t$elm$core$Dict$foldr,\n\t\tF3(\n\t\t\tfunction (key, value, keyList) {\n\t\t\t\treturn A2($elm$core$List$cons, key, keyList);\n\t\t\t}),\n\t\t_List_Nil,\n\t\tdict);\n};\nvar $elm$core$Set$toList = function (_v0) {\n\tvar dict = _v0;\n\treturn $elm$core$Dict$keys(dict);\n};\nvar $elm$core$Basics$EQ = 1;\nvar $elm$core$Basics$GT = 2;\nvar $elm$core$Basics$LT = 0;\nvar $author$project$Main$AccountFailed = function (a) {\n\treturn {$: 1, a: a};\n};\nvar $author$project$Main$AccountSucceeded = function (a) {\n\treturn {$: 2, a: a};\n};\nvar $author$project$Main$ApproveFailed = function (a) {\n\treturn {$: 4, a: a};\n};\nvar $author$project$Main$ApproveSucceeded = function (a) {\n\treturn {$: 5, a: a};\n};\nvar $author$project$Main$MintFailed = function (a) {\n\treturn {$: 8, a: a};\n};\nvar $author$project$Main$MintSucceeded = function (a) {\n\treturn {$: 7, a: a};\n};\nvar $elm$core$Result$Err = function (a) {\n\treturn {$: 1, a: a};\n};\nvar $elm$json$Json$Decode$Failure = F2(\n\tfunction (a, b) {\n\t\treturn {$: 3, a: a, b: b};\n\t});\nvar $elm$json$Json$Decode$Field = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar $elm$json$Json$Decode$Index = F2(\n\tfunction (a, b) {\n\t\treturn {$: 1, a: a, b: b};\n\t});\nvar $elm$core$Result$Ok = function (a) {\n\treturn {$: 0, a: a};\n};\nvar $elm$json$Json$Decode$OneOf = function (a) {\n\treturn {$: 2, a: a};\n};\nvar $elm$core$Basics$False = 1;\nvar $elm$core$Basics$add = _Basics_add;\nvar $elm$core$Maybe$Just = function (a) {\n\treturn {$: 0, a: a};\n};\nvar $elm$core$Maybe$Nothing = {$: 1};\nvar $elm$core$String$all = _String_all;\nvar $elm$core$Basics$and = _Basics_and;\nvar $elm$core$Basics$append = _Utils_append;\nvar $elm$json$Json$Encode$encode = _Json_encode;\nvar $elm$core$String$fromInt = _String_fromNumber;\nvar $elm$core$String$join = F2(\n\tfunction (sep, chunks) {\n\t\treturn A2(\n\t\t\t_String_join,\n\t\t\tsep,\n\t\t\t_List_toArray(chunks));\n\t});\nvar $elm$core$String$split = F2(\n\tfunction (sep, string) {\n\t\treturn _List_fromArray(\n\t\t\tA2(_String_split, sep, string));\n\t});\nvar $elm$json$Json$Decode$indent = function (str) {\n\treturn A2(\n\t\t$elm$core$String$join,\n\t\t'\\n    ',\n\t\tA2($elm$core$String$split, '\\n', str));\n};\nvar $elm$core$List$foldl = F3(\n\tfunction (func, acc, list) {\n\t\tfoldl:\n\t\twhile (true) {\n\t\t\tif (!list.b) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar x = list.a;\n\t\t\t\tvar xs = list.b;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A2(func, x, acc),\n\t\t\t\t\t$temp$list = xs;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tcontinue foldl;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$List$length = function (xs) {\n\treturn A3(\n\t\t$elm$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (_v0, i) {\n\t\t\t\treturn i + 1;\n\t\t\t}),\n\t\t0,\n\t\txs);\n};\nvar $elm$core$List$map2 = _List_map2;\nvar $elm$core$Basics$le = _Utils_le;\nvar $elm$core$Basics$sub = _Basics_sub;\nvar $elm$core$List$rangeHelp = F3(\n\tfunction (lo, hi, list) {\n\t\trangeHelp:\n\t\twhile (true) {\n\t\t\tif (_Utils_cmp(lo, hi) < 1) {\n\t\t\t\tvar $temp$lo = lo,\n\t\t\t\t\t$temp$hi = hi - 1,\n\t\t\t\t\t$temp$list = A2($elm$core$List$cons, hi, list);\n\t\t\t\tlo = $temp$lo;\n\t\t\t\thi = $temp$hi;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tcontinue rangeHelp;\n\t\t\t} else {\n\t\t\t\treturn list;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$List$range = F2(\n\tfunction (lo, hi) {\n\t\treturn A3($elm$core$List$rangeHelp, lo, hi, _List_Nil);\n\t});\nvar $elm$core$List$indexedMap = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\t$elm$core$List$map2,\n\t\t\tf,\n\t\t\tA2(\n\t\t\t\t$elm$core$List$range,\n\t\t\t\t0,\n\t\t\t\t$elm$core$List$length(xs) - 1),\n\t\t\txs);\n\t});\nvar $elm$core$Char$toCode = _Char_toCode;\nvar $elm$core$Char$isLower = function (_char) {\n\tvar code = $elm$core$Char$toCode(_char);\n\treturn (97 <= code) && (code <= 122);\n};\nvar $elm$core$Char$isUpper = function (_char) {\n\tvar code = $elm$core$Char$toCode(_char);\n\treturn (code <= 90) && (65 <= code);\n};\nvar $elm$core$Basics$or = _Basics_or;\nvar $elm$core$Char$isAlpha = function (_char) {\n\treturn $elm$core$Char$isLower(_char) || $elm$core$Char$isUpper(_char);\n};\nvar $elm$core$Char$isDigit = function (_char) {\n\tvar code = $elm$core$Char$toCode(_char);\n\treturn (code <= 57) && (48 <= code);\n};\nvar $elm$core$Char$isAlphaNum = function (_char) {\n\treturn $elm$core$Char$isLower(_char) || ($elm$core$Char$isUpper(_char) || $elm$core$Char$isDigit(_char));\n};\nvar $elm$core$List$reverse = function (list) {\n\treturn A3($elm$core$List$foldl, $elm$core$List$cons, _List_Nil, list);\n};\nvar $elm$core$String$uncons = _String_uncons;\nvar $elm$json$Json$Decode$errorOneOf = F2(\n\tfunction (i, error) {\n\t\treturn '\\n\\n(' + ($elm$core$String$fromInt(i + 1) + (') ' + $elm$json$Json$Decode$indent(\n\t\t\t$elm$json$Json$Decode$errorToString(error))));\n\t});\nvar $elm$json$Json$Decode$errorToString = function (error) {\n\treturn A2($elm$json$Json$Decode$errorToStringHelp, error, _List_Nil);\n};\nvar $elm$json$Json$Decode$errorToStringHelp = F2(\n\tfunction (error, context) {\n\t\terrorToStringHelp:\n\t\twhile (true) {\n\t\t\tswitch (error.$) {\n\t\t\t\tcase 0:\n\t\t\t\t\tvar f = error.a;\n\t\t\t\t\tvar err = error.b;\n\t\t\t\t\tvar isSimple = function () {\n\t\t\t\t\t\tvar _v1 = $elm$core$String$uncons(f);\n\t\t\t\t\t\tif (_v1.$ === 1) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar _v2 = _v1.a;\n\t\t\t\t\t\t\tvar _char = _v2.a;\n\t\t\t\t\t\t\tvar rest = _v2.b;\n\t\t\t\t\t\t\treturn $elm$core$Char$isAlpha(_char) && A2($elm$core$String$all, $elm$core$Char$isAlphaNum, rest);\n\t\t\t\t\t\t}\n\t\t\t\t\t}();\n\t\t\t\t\tvar fieldName = isSimple ? ('.' + f) : ('[\\'' + (f + '\\']'));\n\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t$temp$context = A2($elm$core$List$cons, fieldName, context);\n\t\t\t\t\terror = $temp$error;\n\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\tcase 1:\n\t\t\t\t\tvar i = error.a;\n\t\t\t\t\tvar err = error.b;\n\t\t\t\t\tvar indexName = '[' + ($elm$core$String$fromInt(i) + ']');\n\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t$temp$context = A2($elm$core$List$cons, indexName, context);\n\t\t\t\t\terror = $temp$error;\n\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\tcase 2:\n\t\t\t\t\tvar errors = error.a;\n\t\t\t\t\tif (!errors.b) {\n\t\t\t\t\t\treturn 'Ran into a Json.Decode.oneOf with no possibilities' + function () {\n\t\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\t\treturn '!';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn ' at json' + A2(\n\t\t\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t\t$elm$core$List$reverse(context));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (!errors.b.b) {\n\t\t\t\t\t\t\tvar err = errors.a;\n\t\t\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t\t\t$temp$context = context;\n\t\t\t\t\t\t\terror = $temp$error;\n\t\t\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar starter = function () {\n\t\t\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\t\t\treturn 'Json.Decode.oneOf';\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn 'The Json.Decode.oneOf at json' + A2(\n\t\t\t\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t\t\t$elm$core$List$reverse(context));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}();\n\t\t\t\t\t\t\tvar introduction = starter + (' failed in the following ' + ($elm$core$String$fromInt(\n\t\t\t\t\t\t\t\t$elm$core$List$length(errors)) + ' ways:'));\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t\t'\\n\\n',\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\tintroduction,\n\t\t\t\t\t\t\t\t\tA2($elm$core$List$indexedMap, $elm$json$Json$Decode$errorOneOf, errors)));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tvar msg = error.a;\n\t\t\t\t\tvar json = error.b;\n\t\t\t\t\tvar introduction = function () {\n\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\treturn 'Problem with the given value:\\n\\n';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn 'Problem with the value at json' + (A2(\n\t\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t$elm$core$List$reverse(context)) + ':\\n\\n    ');\n\t\t\t\t\t\t}\n\t\t\t\t\t}();\n\t\t\t\t\treturn introduction + ($elm$json$Json$Decode$indent(\n\t\t\t\t\t\tA2($elm$json$Json$Encode$encode, 4, json)) + ('\\n\\n' + msg));\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Array$branchFactor = 32;\nvar $elm$core$Array$Array_elm_builtin = F4(\n\tfunction (a, b, c, d) {\n\t\treturn {$: 0, a: a, b: b, c: c, d: d};\n\t});\nvar $elm$core$Elm$JsArray$empty = _JsArray_empty;\nvar $elm$core$Basics$ceiling = _Basics_ceiling;\nvar $elm$core$Basics$fdiv = _Basics_fdiv;\nvar $elm$core$Basics$logBase = F2(\n\tfunction (base, number) {\n\t\treturn _Basics_log(number) / _Basics_log(base);\n\t});\nvar $elm$core$Basics$toFloat = _Basics_toFloat;\nvar $elm$core$Array$shiftStep = $elm$core$Basics$ceiling(\n\tA2($elm$core$Basics$logBase, 2, $elm$core$Array$branchFactor));\nvar $elm$core$Array$empty = A4($elm$core$Array$Array_elm_builtin, 0, $elm$core$Array$shiftStep, $elm$core$Elm$JsArray$empty, $elm$core$Elm$JsArray$empty);\nvar $elm$core$Elm$JsArray$initialize = _JsArray_initialize;\nvar $elm$core$Array$Leaf = function (a) {\n\treturn {$: 1, a: a};\n};\nvar $elm$core$Basics$apL = F2(\n\tfunction (f, x) {\n\t\treturn f(x);\n\t});\nvar $elm$core$Basics$apR = F2(\n\tfunction (x, f) {\n\t\treturn f(x);\n\t});\nvar $elm$core$Basics$eq = _Utils_equal;\nvar $elm$core$Basics$floor = _Basics_floor;\nvar $elm$core$Elm$JsArray$length = _JsArray_length;\nvar $elm$core$Basics$gt = _Utils_gt;\nvar $elm$core$Basics$max = F2(\n\tfunction (x, y) {\n\t\treturn (_Utils_cmp(x, y) > 0) ? x : y;\n\t});\nvar $elm$core$Basics$mul = _Basics_mul;\nvar $elm$core$Array$SubTree = function (a) {\n\treturn {$: 0, a: a};\n};\nvar $elm$core$Elm$JsArray$initializeFromList = _JsArray_initializeFromList;\nvar $elm$core$Array$compressNodes = F2(\n\tfunction (nodes, acc) {\n\t\tcompressNodes:\n\t\twhile (true) {\n\t\t\tvar _v0 = A2($elm$core$Elm$JsArray$initializeFromList, $elm$core$Array$branchFactor, nodes);\n\t\t\tvar node = _v0.a;\n\t\t\tvar remainingNodes = _v0.b;\n\t\t\tvar newAcc = A2(\n\t\t\t\t$elm$core$List$cons,\n\t\t\t\t$elm$core$Array$SubTree(node),\n\t\t\t\tacc);\n\t\t\tif (!remainingNodes.b) {\n\t\t\t\treturn $elm$core$List$reverse(newAcc);\n\t\t\t} else {\n\t\t\t\tvar $temp$nodes = remainingNodes,\n\t\t\t\t\t$temp$acc = newAcc;\n\t\t\t\tnodes = $temp$nodes;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tcontinue compressNodes;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Tuple$first = function (_v0) {\n\tvar x = _v0.a;\n\treturn x;\n};\nvar $elm$core$Array$treeFromBuilder = F2(\n\tfunction (nodeList, nodeListSize) {\n\t\ttreeFromBuilder:\n\t\twhile (true) {\n\t\t\tvar newNodeSize = $elm$core$Basics$ceiling(nodeListSize / $elm$core$Array$branchFactor);\n\t\t\tif (newNodeSize === 1) {\n\t\t\t\treturn A2($elm$core$Elm$JsArray$initializeFromList, $elm$core$Array$branchFactor, nodeList).a;\n\t\t\t} else {\n\t\t\t\tvar $temp$nodeList = A2($elm$core$Array$compressNodes, nodeList, _List_Nil),\n\t\t\t\t\t$temp$nodeListSize = newNodeSize;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\tnodeListSize = $temp$nodeListSize;\n\t\t\t\tcontinue treeFromBuilder;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Array$builderToArray = F2(\n\tfunction (reverseNodeList, builder) {\n\t\tif (!builder.g) {\n\t\t\treturn A4(\n\t\t\t\t$elm$core$Array$Array_elm_builtin,\n\t\t\t\t$elm$core$Elm$JsArray$length(builder.i),\n\t\t\t\t$elm$core$Array$shiftStep,\n\t\t\t\t$elm$core$Elm$JsArray$empty,\n\t\t\t\tbuilder.i);\n\t\t} else {\n\t\t\tvar treeLen = builder.g * $elm$core$Array$branchFactor;\n\t\t\tvar depth = $elm$core$Basics$floor(\n\t\t\t\tA2($elm$core$Basics$logBase, $elm$core$Array$branchFactor, treeLen - 1));\n\t\t\tvar correctNodeList = reverseNodeList ? $elm$core$List$reverse(builder.j) : builder.j;\n\t\t\tvar tree = A2($elm$core$Array$treeFromBuilder, correctNodeList, builder.g);\n\t\t\treturn A4(\n\t\t\t\t$elm$core$Array$Array_elm_builtin,\n\t\t\t\t$elm$core$Elm$JsArray$length(builder.i) + treeLen,\n\t\t\t\tA2($elm$core$Basics$max, 5, depth * $elm$core$Array$shiftStep),\n\t\t\t\ttree,\n\t\t\t\tbuilder.i);\n\t\t}\n\t});\nvar $elm$core$Basics$idiv = _Basics_idiv;\nvar $elm$core$Basics$lt = _Utils_lt;\nvar $elm$core$Array$initializeHelp = F5(\n\tfunction (fn, fromIndex, len, nodeList, tail) {\n\t\tinitializeHelp:\n\t\twhile (true) {\n\t\t\tif (fromIndex < 0) {\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$Array$builderToArray,\n\t\t\t\t\tfalse,\n\t\t\t\t\t{j: nodeList, g: (len / $elm$core$Array$branchFactor) | 0, i: tail});\n\t\t\t} else {\n\t\t\t\tvar leaf = $elm$core$Array$Leaf(\n\t\t\t\t\tA3($elm$core$Elm$JsArray$initialize, $elm$core$Array$branchFactor, fromIndex, fn));\n\t\t\t\tvar $temp$fn = fn,\n\t\t\t\t\t$temp$fromIndex = fromIndex - $elm$core$Array$branchFactor,\n\t\t\t\t\t$temp$len = len,\n\t\t\t\t\t$temp$nodeList = A2($elm$core$List$cons, leaf, nodeList),\n\t\t\t\t\t$temp$tail = tail;\n\t\t\t\tfn = $temp$fn;\n\t\t\t\tfromIndex = $temp$fromIndex;\n\t\t\t\tlen = $temp$len;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\ttail = $temp$tail;\n\t\t\t\tcontinue initializeHelp;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Basics$remainderBy = _Basics_remainderBy;\nvar $elm$core$Array$initialize = F2(\n\tfunction (len, fn) {\n\t\tif (len <= 0) {\n\t\t\treturn $elm$core$Array$empty;\n\t\t} else {\n\t\t\tvar tailLen = len % $elm$core$Array$branchFactor;\n\t\t\tvar tail = A3($elm$core$Elm$JsArray$initialize, tailLen, len - tailLen, fn);\n\t\t\tvar initialFromIndex = (len - tailLen) - $elm$core$Array$branchFactor;\n\t\t\treturn A5($elm$core$Array$initializeHelp, fn, initialFromIndex, len, _List_Nil, tail);\n\t\t}\n\t});\nvar $elm$core$Basics$True = 0;\nvar $elm$core$Result$isOk = function (result) {\n\tif (!result.$) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\nvar $elm$json$Json$Decode$string = _Json_decodeString;\nvar $author$project$Main$accountFailed = _Platform_incomingPort('accountFailed', $elm$json$Json$Decode$string);\nvar $elm$json$Json$Decode$andThen = _Json_andThen;\nvar $elm$json$Json$Decode$field = _Json_decodeField;\nvar $elm$json$Json$Decode$succeed = _Json_succeed;\nvar $author$project$Main$accountSucceeded = _Platform_incomingPort(\n\t'accountSucceeded',\n\tA2(\n\t\t$elm$json$Json$Decode$andThen,\n\t\tfunction (stablecoinSymbol) {\n\t\t\treturn A2(\n\t\t\t\t$elm$json$Json$Decode$andThen,\n\t\t\t\tfunction (stablecoinFee) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\t$elm$json$Json$Decode$andThen,\n\t\t\t\t\t\tfunction (stablecoinBalance) {\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t$elm$json$Json$Decode$andThen,\n\t\t\t\t\t\t\t\tfunction (network) {\n\t\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t\t$elm$json$Json$Decode$andThen,\n\t\t\t\t\t\t\t\t\t\tfunction (algobullBalance) {\n\t\t\t\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$json$Json$Decode$andThen,\n\t\t\t\t\t\t\t\t\t\t\t\tfunction (address) {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn $elm$json$Json$Decode$succeed(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{bq: address, a8: algobullBalance, bS: network, a5: stablecoinBalance, aM: stablecoinFee, ar: stablecoinSymbol});\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\tA2($elm$json$Json$Decode$field, 'address', $elm$json$Json$Decode$string));\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tA2($elm$json$Json$Decode$field, 'algobullBalance', $elm$json$Json$Decode$string));\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tA2($elm$json$Json$Decode$field, 'network', $elm$json$Json$Decode$string));\n\t\t\t\t\t\t},\n\t\t\t\t\t\tA2($elm$json$Json$Decode$field, 'stablecoinBalance', $elm$json$Json$Decode$string));\n\t\t\t\t},\n\t\t\t\tA2($elm$json$Json$Decode$field, 'stablecoinFee', $elm$json$Json$Decode$string));\n\t\t},\n\t\tA2($elm$json$Json$Decode$field, 'stablecoinSymbol', $elm$json$Json$Decode$string)));\nvar $author$project$Main$approveFailed = _Platform_incomingPort('approveFailed', $elm$json$Json$Decode$string);\nvar $author$project$Main$approveSucceeded = _Platform_incomingPort('approveSucceeded', $elm$json$Json$Decode$string);\nvar $elm$core$Platform$Sub$batch = _Platform_batch;\nvar $elm$json$Json$Decode$bool = _Json_decodeBool;\nvar $elm$core$Basics$composeR = F3(\n\tfunction (f, g, x) {\n\t\treturn g(\n\t\t\tf(x));\n\t});\nvar $elm$json$Json$Decode$map = _Json_map1;\nvar $elm$json$Json$Decode$map2 = _Json_map2;\nvar $elm$virtual_dom$VirtualDom$toHandlerInt = function (handler) {\n\tswitch (handler.$) {\n\t\tcase 0:\n\t\t\treturn 0;\n\t\tcase 1:\n\t\t\treturn 1;\n\t\tcase 2:\n\t\t\treturn 2;\n\t\tdefault:\n\t\t\treturn 3;\n\t}\n};\nvar $elm$browser$Browser$External = function (a) {\n\treturn {$: 1, a: a};\n};\nvar $elm$browser$Browser$Internal = function (a) {\n\treturn {$: 0, a: a};\n};\nvar $elm$core$Basics$identity = function (x) {\n\treturn x;\n};\nvar $elm$browser$Browser$Dom$NotFound = $elm$core$Basics$identity;\nvar $elm$url$Url$Http = 0;\nvar $elm$url$Url$Https = 1;\nvar $elm$url$Url$Url = F6(\n\tfunction (protocol, host, port_, path, query, fragment) {\n\t\treturn {bH: fragment, bK: host, bV: path, bX: port_, b_: protocol, b$: query};\n\t});\nvar $elm$core$String$contains = _String_contains;\nvar $elm$core$String$length = _String_length;\nvar $elm$core$String$slice = _String_slice;\nvar $elm$core$String$dropLeft = F2(\n\tfunction (n, string) {\n\t\treturn (n < 1) ? string : A3(\n\t\t\t$elm$core$String$slice,\n\t\t\tn,\n\t\t\t$elm$core$String$length(string),\n\t\t\tstring);\n\t});\nvar $elm$core$String$indexes = _String_indexes;\nvar $elm$core$String$isEmpty = function (string) {\n\treturn string === '';\n};\nvar $elm$core$String$left = F2(\n\tfunction (n, string) {\n\t\treturn (n < 1) ? '' : A3($elm$core$String$slice, 0, n, string);\n\t});\nvar $elm$core$String$toInt = _String_toInt;\nvar $elm$url$Url$chompBeforePath = F5(\n\tfunction (protocol, path, params, frag, str) {\n\t\tif ($elm$core$String$isEmpty(str) || A2($elm$core$String$contains, '@', str)) {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _v0 = A2($elm$core$String$indexes, ':', str);\n\t\t\tif (!_v0.b) {\n\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\tA6($elm$url$Url$Url, protocol, str, $elm$core$Maybe$Nothing, path, params, frag));\n\t\t\t} else {\n\t\t\t\tif (!_v0.b.b) {\n\t\t\t\t\tvar i = _v0.a;\n\t\t\t\t\tvar _v1 = $elm$core$String$toInt(\n\t\t\t\t\t\tA2($elm$core$String$dropLeft, i + 1, str));\n\t\t\t\t\tif (_v1.$ === 1) {\n\t\t\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar port_ = _v1;\n\t\t\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\t\t\tA6(\n\t\t\t\t\t\t\t\t$elm$url$Url$Url,\n\t\t\t\t\t\t\t\tprotocol,\n\t\t\t\t\t\t\t\tA2($elm$core$String$left, i, str),\n\t\t\t\t\t\t\t\tport_,\n\t\t\t\t\t\t\t\tpath,\n\t\t\t\t\t\t\t\tparams,\n\t\t\t\t\t\t\t\tfrag));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $elm$url$Url$chompBeforeQuery = F4(\n\tfunction (protocol, params, frag, str) {\n\t\tif ($elm$core$String$isEmpty(str)) {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _v0 = A2($elm$core$String$indexes, '/', str);\n\t\t\tif (!_v0.b) {\n\t\t\t\treturn A5($elm$url$Url$chompBeforePath, protocol, '/', params, frag, str);\n\t\t\t} else {\n\t\t\t\tvar i = _v0.a;\n\t\t\t\treturn A5(\n\t\t\t\t\t$elm$url$Url$chompBeforePath,\n\t\t\t\t\tprotocol,\n\t\t\t\t\tA2($elm$core$String$dropLeft, i, str),\n\t\t\t\t\tparams,\n\t\t\t\t\tfrag,\n\t\t\t\t\tA2($elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar $elm$url$Url$chompBeforeFragment = F3(\n\tfunction (protocol, frag, str) {\n\t\tif ($elm$core$String$isEmpty(str)) {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _v0 = A2($elm$core$String$indexes, '?', str);\n\t\t\tif (!_v0.b) {\n\t\t\t\treturn A4($elm$url$Url$chompBeforeQuery, protocol, $elm$core$Maybe$Nothing, frag, str);\n\t\t\t} else {\n\t\t\t\tvar i = _v0.a;\n\t\t\t\treturn A4(\n\t\t\t\t\t$elm$url$Url$chompBeforeQuery,\n\t\t\t\t\tprotocol,\n\t\t\t\t\t$elm$core$Maybe$Just(\n\t\t\t\t\t\tA2($elm$core$String$dropLeft, i + 1, str)),\n\t\t\t\t\tfrag,\n\t\t\t\t\tA2($elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar $elm$url$Url$chompAfterProtocol = F2(\n\tfunction (protocol, str) {\n\t\tif ($elm$core$String$isEmpty(str)) {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _v0 = A2($elm$core$String$indexes, '#', str);\n\t\t\tif (!_v0.b) {\n\t\t\t\treturn A3($elm$url$Url$chompBeforeFragment, protocol, $elm$core$Maybe$Nothing, str);\n\t\t\t} else {\n\t\t\t\tvar i = _v0.a;\n\t\t\t\treturn A3(\n\t\t\t\t\t$elm$url$Url$chompBeforeFragment,\n\t\t\t\t\tprotocol,\n\t\t\t\t\t$elm$core$Maybe$Just(\n\t\t\t\t\t\tA2($elm$core$String$dropLeft, i + 1, str)),\n\t\t\t\t\tA2($elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$String$startsWith = _String_startsWith;\nvar $elm$url$Url$fromString = function (str) {\n\treturn A2($elm$core$String$startsWith, 'http://', str) ? A2(\n\t\t$elm$url$Url$chompAfterProtocol,\n\t\t0,\n\t\tA2($elm$core$String$dropLeft, 7, str)) : (A2($elm$core$String$startsWith, 'https://', str) ? A2(\n\t\t$elm$url$Url$chompAfterProtocol,\n\t\t1,\n\t\tA2($elm$core$String$dropLeft, 8, str)) : $elm$core$Maybe$Nothing);\n};\nvar $elm$core$Basics$never = function (_v0) {\n\tnever:\n\twhile (true) {\n\t\tvar nvr = _v0;\n\t\tvar $temp$_v0 = nvr;\n\t\t_v0 = $temp$_v0;\n\t\tcontinue never;\n\t}\n};\nvar $elm$core$Task$Perform = $elm$core$Basics$identity;\nvar $elm$core$Task$succeed = _Scheduler_succeed;\nvar $elm$core$Task$init = $elm$core$Task$succeed(0);\nvar $elm$core$List$foldrHelper = F4(\n\tfunction (fn, acc, ctr, ls) {\n\t\tif (!ls.b) {\n\t\t\treturn acc;\n\t\t} else {\n\t\t\tvar a = ls.a;\n\t\t\tvar r1 = ls.b;\n\t\t\tif (!r1.b) {\n\t\t\t\treturn A2(fn, a, acc);\n\t\t\t} else {\n\t\t\t\tvar b = r1.a;\n\t\t\t\tvar r2 = r1.b;\n\t\t\t\tif (!r2.b) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\tfn,\n\t\t\t\t\t\ta,\n\t\t\t\t\t\tA2(fn, b, acc));\n\t\t\t\t} else {\n\t\t\t\t\tvar c = r2.a;\n\t\t\t\t\tvar r3 = r2.b;\n\t\t\t\t\tif (!r3.b) {\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\ta,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\tA2(fn, c, acc)));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar d = r3.a;\n\t\t\t\t\t\tvar r4 = r3.b;\n\t\t\t\t\t\tvar res = (ctr > 500) ? A3(\n\t\t\t\t\t\t\t$elm$core$List$foldl,\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\tacc,\n\t\t\t\t\t\t\t$elm$core$List$reverse(r4)) : A4($elm$core$List$foldrHelper, fn, acc, ctr + 1, r4);\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\ta,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\t\tc,\n\t\t\t\t\t\t\t\t\tA2(fn, d, res))));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$List$foldr = F3(\n\tfunction (fn, acc, ls) {\n\t\treturn A4($elm$core$List$foldrHelper, fn, acc, 0, ls);\n\t});\nvar $elm$core$List$map = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\t$elm$core$List$foldr,\n\t\t\tF2(\n\t\t\t\tfunction (x, acc) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\tf(x),\n\t\t\t\t\t\tacc);\n\t\t\t\t}),\n\t\t\t_List_Nil,\n\t\t\txs);\n\t});\nvar $elm$core$Task$andThen = _Scheduler_andThen;\nvar $elm$core$Task$map = F2(\n\tfunction (func, taskA) {\n\t\treturn A2(\n\t\t\t$elm$core$Task$andThen,\n\t\t\tfunction (a) {\n\t\t\t\treturn $elm$core$Task$succeed(\n\t\t\t\t\tfunc(a));\n\t\t\t},\n\t\t\ttaskA);\n\t});\nvar $elm$core$Task$map2 = F3(\n\tfunction (func, taskA, taskB) {\n\t\treturn A2(\n\t\t\t$elm$core$Task$andThen,\n\t\t\tfunction (a) {\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$Task$andThen,\n\t\t\t\t\tfunction (b) {\n\t\t\t\t\t\treturn $elm$core$Task$succeed(\n\t\t\t\t\t\t\tA2(func, a, b));\n\t\t\t\t\t},\n\t\t\t\t\ttaskB);\n\t\t\t},\n\t\t\ttaskA);\n\t});\nvar $elm$core$Task$sequence = function (tasks) {\n\treturn A3(\n\t\t$elm$core$List$foldr,\n\t\t$elm$core$Task$map2($elm$core$List$cons),\n\t\t$elm$core$Task$succeed(_List_Nil),\n\t\ttasks);\n};\nvar $elm$core$Platform$sendToApp = _Platform_sendToApp;\nvar $elm$core$Task$spawnCmd = F2(\n\tfunction (router, _v0) {\n\t\tvar task = _v0;\n\t\treturn _Scheduler_spawn(\n\t\t\tA2(\n\t\t\t\t$elm$core$Task$andThen,\n\t\t\t\t$elm$core$Platform$sendToApp(router),\n\t\t\t\ttask));\n\t});\nvar $elm$core$Task$onEffects = F3(\n\tfunction (router, commands, state) {\n\t\treturn A2(\n\t\t\t$elm$core$Task$map,\n\t\t\tfunction (_v0) {\n\t\t\t\treturn 0;\n\t\t\t},\n\t\t\t$elm$core$Task$sequence(\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t$elm$core$Task$spawnCmd(router),\n\t\t\t\t\tcommands)));\n\t});\nvar $elm$core$Task$onSelfMsg = F3(\n\tfunction (_v0, _v1, _v2) {\n\t\treturn $elm$core$Task$succeed(0);\n\t});\nvar $elm$core$Task$cmdMap = F2(\n\tfunction (tagger, _v0) {\n\t\tvar task = _v0;\n\t\treturn A2($elm$core$Task$map, tagger, task);\n\t});\n_Platform_effectManagers['Task'] = _Platform_createManager($elm$core$Task$init, $elm$core$Task$onEffects, $elm$core$Task$onSelfMsg, $elm$core$Task$cmdMap);\nvar $elm$core$Task$command = _Platform_leaf('Task');\nvar $elm$core$Task$perform = F2(\n\tfunction (toMessage, task) {\n\t\treturn $elm$core$Task$command(\n\t\t\tA2($elm$core$Task$map, toMessage, task));\n\t});\nvar $elm$browser$Browser$element = _Browser_element;\nvar $author$project$Main$AccountNotFound = {$: 0};\nvar $author$project$Main$ConnectAccount = function (a) {\n\treturn {$: 1, a: a};\n};\nvar $elm$core$Platform$Cmd$batch = _Platform_batch;\nvar $elm$core$Platform$Cmd$none = $elm$core$Platform$Cmd$batch(_List_Nil);\nvar $author$project$Main$init = function (walletFound) {\n\tif (!walletFound) {\n\t\treturn _Utils_Tuple2(\n\t\t\t{n: 0, aL: '', o: $author$project$Main$AccountNotFound, I: $elm$core$Maybe$Nothing},\n\t\t\t$elm$core$Platform$Cmd$none);\n\t} else {\n\t\treturn _Utils_Tuple2(\n\t\t\t{\n\t\t\t\tn: 0,\n\t\t\t\taL: '',\n\t\t\t\to: $author$project$Main$ConnectAccount($elm$core$Maybe$Nothing),\n\t\t\t\tI: $elm$core$Maybe$Nothing\n\t\t\t},\n\t\t\t$elm$core$Platform$Cmd$none);\n\t}\n};\nvar $author$project$Main$mintFailed = _Platform_incomingPort('mintFailed', $elm$json$Json$Decode$string);\nvar $author$project$Main$mintSucceeded = _Platform_incomingPort('mintSucceeded', $elm$json$Json$Decode$string);\nvar $rtfeldman$elm_css$VirtualDom$Styled$UnscopedStyles = function (a) {\n\treturn {$: 0, a: a};\n};\nvar $elm$core$String$cons = _String_cons;\nvar $robinheghan$murmur3$Murmur3$HashData = F4(\n\tfunction (shift, seed, hash, charsProcessed) {\n\t\treturn {ae: charsProcessed, aj: hash, x: seed, ap: shift};\n\t});\nvar $robinheghan$murmur3$Murmur3$c1 = 3432918353;\nvar $robinheghan$murmur3$Murmur3$c2 = 461845907;\nvar $elm$core$Bitwise$and = _Bitwise_and;\nvar $elm$core$Bitwise$shiftLeftBy = _Bitwise_shiftLeftBy;\nvar $elm$core$Bitwise$shiftRightZfBy = _Bitwise_shiftRightZfBy;\nvar $robinheghan$murmur3$Murmur3$multiplyBy = F2(\n\tfunction (b, a) {\n\t\treturn ((a & 65535) * b) + ((((a >>> 16) * b) & 65535) << 16);\n\t});\nvar $elm$core$Basics$neq = _Utils_notEqual;\nvar $elm$core$Bitwise$or = _Bitwise_or;\nvar $robinheghan$murmur3$Murmur3$rotlBy = F2(\n\tfunction (b, a) {\n\t\treturn (a << b) | (a >>> (32 - b));\n\t});\nvar $elm$core$Bitwise$xor = _Bitwise_xor;\nvar $robinheghan$murmur3$Murmur3$finalize = function (data) {\n\tvar acc = (!(!data.aj)) ? (data.x ^ A2(\n\t\t$robinheghan$murmur3$Murmur3$multiplyBy,\n\t\t$robinheghan$murmur3$Murmur3$c2,\n\t\tA2(\n\t\t\t$robinheghan$murmur3$Murmur3$rotlBy,\n\t\t\t15,\n\t\t\tA2($robinheghan$murmur3$Murmur3$multiplyBy, $robinheghan$murmur3$Murmur3$c1, data.aj)))) : data.x;\n\tvar h0 = acc ^ data.ae;\n\tvar h1 = A2($robinheghan$murmur3$Murmur3$multiplyBy, 2246822507, h0 ^ (h0 >>> 16));\n\tvar h2 = A2($robinheghan$murmur3$Murmur3$multiplyBy, 3266489909, h1 ^ (h1 >>> 13));\n\treturn (h2 ^ (h2 >>> 16)) >>> 0;\n};\nvar $elm$core$String$foldl = _String_foldl;\nvar $robinheghan$murmur3$Murmur3$mix = F2(\n\tfunction (h1, k1) {\n\t\treturn A2(\n\t\t\t$robinheghan$murmur3$Murmur3$multiplyBy,\n\t\t\t5,\n\t\t\tA2(\n\t\t\t\t$robinheghan$murmur3$Murmur3$rotlBy,\n\t\t\t\t13,\n\t\t\t\th1 ^ A2(\n\t\t\t\t\t$robinheghan$murmur3$Murmur3$multiplyBy,\n\t\t\t\t\t$robinheghan$murmur3$Murmur3$c2,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$robinheghan$murmur3$Murmur3$rotlBy,\n\t\t\t\t\t\t15,\n\t\t\t\t\t\tA2($robinheghan$murmur3$Murmur3$multiplyBy, $robinheghan$murmur3$Murmur3$c1, k1))))) + 3864292196;\n\t});\nvar $robinheghan$murmur3$Murmur3$hashFold = F2(\n\tfunction (c, data) {\n\t\tvar res = data.aj | ((255 & $elm$core$Char$toCode(c)) << data.ap);\n\t\tvar _v0 = data.ap;\n\t\tif (_v0 === 24) {\n\t\t\treturn {\n\t\t\t\tae: data.ae + 1,\n\t\t\t\taj: 0,\n\t\t\t\tx: A2($robinheghan$murmur3$Murmur3$mix, data.x, res),\n\t\t\t\tap: 0\n\t\t\t};\n\t\t} else {\n\t\t\treturn {ae: data.ae + 1, aj: res, x: data.x, ap: data.ap + 8};\n\t\t}\n\t});\nvar $robinheghan$murmur3$Murmur3$hashString = F2(\n\tfunction (seed, str) {\n\t\treturn $robinheghan$murmur3$Murmur3$finalize(\n\t\t\tA3(\n\t\t\t\t$elm$core$String$foldl,\n\t\t\t\t$robinheghan$murmur3$Murmur3$hashFold,\n\t\t\t\tA4($robinheghan$murmur3$Murmur3$HashData, 0, seed, 0, 0),\n\t\t\t\tstr));\n\t});\nvar $rtfeldman$elm_css$Hash$initialSeed = 15739;\nvar $elm$core$String$fromList = _String_fromList;\nvar $elm$core$Basics$negate = function (n) {\n\treturn -n;\n};\nvar $elm$core$Basics$modBy = _Basics_modBy;\nvar $rtfeldman$elm_hex$Hex$unsafeToDigit = function (num) {\n\tunsafeToDigit:\n\twhile (true) {\n\t\tswitch (num) {\n\t\t\tcase 0:\n\t\t\t\treturn '0';\n\t\t\tcase 1:\n\t\t\t\treturn '1';\n\t\t\tcase 2:\n\t\t\t\treturn '2';\n\t\t\tcase 3:\n\t\t\t\treturn '3';\n\t\t\tcase 4:\n\t\t\t\treturn '4';\n\t\t\tcase 5:\n\t\t\t\treturn '5';\n\t\t\tcase 6:\n\t\t\t\treturn '6';\n\t\t\tcase 7:\n\t\t\t\treturn '7';\n\t\t\tcase 8:\n\t\t\t\treturn '8';\n\t\t\tcase 9:\n\t\t\t\treturn '9';\n\t\t\tcase 10:\n\t\t\t\treturn 'a';\n\t\t\tcase 11:\n\t\t\t\treturn 'b';\n\t\t\tcase 12:\n\t\t\t\treturn 'c';\n\t\t\tcase 13:\n\t\t\t\treturn 'd';\n\t\t\tcase 14:\n\t\t\t\treturn 'e';\n\t\t\tcase 15:\n\t\t\t\treturn 'f';\n\t\t\tdefault:\n\t\t\t\tvar $temp$num = num;\n\t\t\t\tnum = $temp$num;\n\t\t\t\tcontinue unsafeToDigit;\n\t\t}\n\t}\n};\nvar $rtfeldman$elm_hex$Hex$unsafePositiveToDigits = F2(\n\tfunction (digits, num) {\n\t\tunsafePositiveToDigits:\n\t\twhile (true) {\n\t\t\tif (num < 16) {\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t$rtfeldman$elm_hex$Hex$unsafeToDigit(num),\n\t\t\t\t\tdigits);\n\t\t\t} else {\n\t\t\t\tvar $temp$digits = A2(\n\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t$rtfeldman$elm_hex$Hex$unsafeToDigit(\n\t\t\t\t\t\tA2($elm$core$Basics$modBy, 16, num)),\n\t\t\t\t\tdigits),\n\t\t\t\t\t$temp$num = (num / 16) | 0;\n\t\t\t\tdigits = $temp$digits;\n\t\t\t\tnum = $temp$num;\n\t\t\t\tcontinue unsafePositiveToDigits;\n\t\t\t}\n\t\t}\n\t});\nvar $rtfeldman$elm_hex$Hex$toString = function (num) {\n\treturn $elm$core$String$fromList(\n\t\t(num < 0) ? A2(\n\t\t\t$elm$core$List$cons,\n\t\t\t'-',\n\t\t\tA2($rtfeldman$elm_hex$Hex$unsafePositiveToDigits, _List_Nil, -num)) : A2($rtfeldman$elm_hex$Hex$unsafePositiveToDigits, _List_Nil, num));\n};\nvar $rtfeldman$elm_css$Hash$fromString = function (str) {\n\treturn A2(\n\t\t$elm$core$String$cons,\n\t\t'_',\n\t\t$rtfeldman$elm_hex$Hex$toString(\n\t\t\tA2($robinheghan$murmur3$Murmur3$hashString, $rtfeldman$elm_css$Hash$initialSeed, str)));\n};\nvar $elm$core$Basics$compare = _Utils_compare;\nvar $elm$core$Dict$get = F2(\n\tfunction (targetKey, dict) {\n\t\tget:\n\t\twhile (true) {\n\t\t\tif (dict.$ === -2) {\n\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t\t} else {\n\t\t\t\tvar key = dict.b;\n\t\t\t\tvar value = dict.c;\n\t\t\t\tvar left = dict.d;\n\t\t\t\tvar right = dict.e;\n\t\t\t\tvar _v1 = A2($elm$core$Basics$compare, targetKey, key);\n\t\t\t\tswitch (_v1) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tvar $temp$targetKey = targetKey,\n\t\t\t\t\t\t\t$temp$dict = left;\n\t\t\t\t\t\ttargetKey = $temp$targetKey;\n\t\t\t\t\t\tdict = $temp$dict;\n\t\t\t\t\t\tcontinue get;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\treturn $elm$core$Maybe$Just(value);\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tvar $temp$targetKey = targetKey,\n\t\t\t\t\t\t\t$temp$dict = right;\n\t\t\t\t\t\ttargetKey = $temp$targetKey;\n\t\t\t\t\t\tdict = $temp$dict;\n\t\t\t\t\t\tcontinue get;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Dict$Black = 1;\nvar $elm$core$Dict$RBNode_elm_builtin = F5(\n\tfunction (a, b, c, d, e) {\n\t\treturn {$: -1, a: a, b: b, c: c, d: d, e: e};\n\t});\nvar $elm$core$Dict$RBEmpty_elm_builtin = {$: -2};\nvar $elm$core$Dict$Red = 0;\nvar $elm$core$Dict$balance = F5(\n\tfunction (color, key, value, left, right) {\n\t\tif ((right.$ === -1) && (!right.a)) {\n\t\t\tvar _v1 = right.a;\n\t\t\tvar rK = right.b;\n\t\t\tvar rV = right.c;\n\t\t\tvar rLeft = right.d;\n\t\t\tvar rRight = right.e;\n\t\t\tif ((left.$ === -1) && (!left.a)) {\n\t\t\t\tvar _v3 = left.a;\n\t\t\t\tvar lK = left.b;\n\t\t\t\tvar lV = left.c;\n\t\t\t\tvar lLeft = left.d;\n\t\t\t\tvar lRight = left.e;\n\t\t\t\treturn A5(\n\t\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t0,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, 1, lK, lV, lLeft, lRight),\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, 1, rK, rV, rLeft, rRight));\n\t\t\t} else {\n\t\t\t\treturn A5(\n\t\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\tcolor,\n\t\t\t\t\trK,\n\t\t\t\t\trV,\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, 0, key, value, left, rLeft),\n\t\t\t\t\trRight);\n\t\t\t}\n\t\t} else {\n\t\t\tif ((((left.$ === -1) && (!left.a)) && (left.d.$ === -1)) && (!left.d.a)) {\n\t\t\t\tvar _v5 = left.a;\n\t\t\t\tvar lK = left.b;\n\t\t\t\tvar lV = left.c;\n\t\t\t\tvar _v6 = left.d;\n\t\t\t\tvar _v7 = _v6.a;\n\t\t\t\tvar llK = _v6.b;\n\t\t\t\tvar llV = _v6.c;\n\t\t\t\tvar llLeft = _v6.d;\n\t\t\t\tvar llRight = _v6.e;\n\t\t\t\tvar lRight = left.e;\n\t\t\t\treturn A5(\n\t\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t0,\n\t\t\t\t\tlK,\n\t\t\t\t\tlV,\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, 1, llK, llV, llLeft, llRight),\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, 1, key, value, lRight, right));\n\t\t\t} else {\n\t\t\t\treturn A5($elm$core$Dict$RBNode_elm_builtin, color, key, value, left, right);\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Dict$insertHelp = F3(\n\tfunction (key, value, dict) {\n\t\tif (dict.$ === -2) {\n\t\t\treturn A5($elm$core$Dict$RBNode_elm_builtin, 0, key, value, $elm$core$Dict$RBEmpty_elm_builtin, $elm$core$Dict$RBEmpty_elm_builtin);\n\t\t} else {\n\t\t\tvar nColor = dict.a;\n\t\t\tvar nKey = dict.b;\n\t\t\tvar nValue = dict.c;\n\t\t\tvar nLeft = dict.d;\n\t\t\tvar nRight = dict.e;\n\t\t\tvar _v1 = A2($elm$core$Basics$compare, key, nKey);\n\t\t\tswitch (_v1) {\n\t\t\t\tcase 0:\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\t$elm$core$Dict$balance,\n\t\t\t\t\t\tnColor,\n\t\t\t\t\t\tnKey,\n\t\t\t\t\t\tnValue,\n\t\t\t\t\t\tA3($elm$core$Dict$insertHelp, key, value, nLeft),\n\t\t\t\t\t\tnRight);\n\t\t\t\tcase 1:\n\t\t\t\t\treturn A5($elm$core$Dict$RBNode_elm_builtin, nColor, nKey, value, nLeft, nRight);\n\t\t\t\tdefault:\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\t$elm$core$Dict$balance,\n\t\t\t\t\t\tnColor,\n\t\t\t\t\t\tnKey,\n\t\t\t\t\t\tnValue,\n\t\t\t\t\t\tnLeft,\n\t\t\t\t\t\tA3($elm$core$Dict$insertHelp, key, value, nRight));\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Dict$insert = F3(\n\tfunction (key, value, dict) {\n\t\tvar _v0 = A3($elm$core$Dict$insertHelp, key, value, dict);\n\t\tif ((_v0.$ === -1) && (!_v0.a)) {\n\t\t\tvar _v1 = _v0.a;\n\t\t\tvar k = _v0.b;\n\t\t\tvar v = _v0.c;\n\t\t\tvar l = _v0.d;\n\t\t\tvar r = _v0.e;\n\t\t\treturn A5($elm$core$Dict$RBNode_elm_builtin, 1, k, v, l, r);\n\t\t} else {\n\t\t\tvar x = _v0;\n\t\t\treturn x;\n\t\t}\n\t});\nvar $rtfeldman$elm_css$VirtualDom$Styled$accumulateStyles = F2(\n\tfunction (_v0, styles) {\n\t\tvar isCssStyles = _v0.b;\n\t\tvar cssTemplate = _v0.c;\n\t\tif (isCssStyles) {\n\t\t\tvar _v1 = A2($elm$core$Dict$get, cssTemplate, styles);\n\t\t\tif (!_v1.$) {\n\t\t\t\treturn styles;\n\t\t\t} else {\n\t\t\t\treturn A3(\n\t\t\t\t\t$elm$core$Dict$insert,\n\t\t\t\t\tcssTemplate,\n\t\t\t\t\t$rtfeldman$elm_css$Hash$fromString(cssTemplate),\n\t\t\t\t\tstyles);\n\t\t\t}\n\t\t} else {\n\t\t\treturn styles;\n\t\t}\n\t});\nvar $elm$virtual_dom$VirtualDom$property = F2(\n\tfunction (key, value) {\n\t\treturn A2(\n\t\t\t_VirtualDom_property,\n\t\t\t_VirtualDom_noInnerHtmlOrFormAction(key),\n\t\t\t_VirtualDom_noJavaScriptOrHtmlJson(value));\n\t});\nvar $elm$json$Json$Encode$string = _Json_wrap;\nvar $rtfeldman$elm_css$VirtualDom$Styled$extractUnstyledAttribute = F2(\n\tfunction (styles, _v0) {\n\t\tvar val = _v0.a;\n\t\tvar isCssStyles = _v0.b;\n\t\tvar cssTemplate = _v0.c;\n\t\tif (isCssStyles) {\n\t\t\tvar _v1 = A2($elm$core$Dict$get, cssTemplate, styles);\n\t\t\tif (!_v1.$) {\n\t\t\t\tvar classname = _v1.a;\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$virtual_dom$VirtualDom$property,\n\t\t\t\t\t'className',\n\t\t\t\t\t$elm$json$Json$Encode$string(classname));\n\t\t\t} else {\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$virtual_dom$VirtualDom$property,\n\t\t\t\t\t'className',\n\t\t\t\t\t$elm$json$Json$Encode$string('_unstyled'));\n\t\t\t}\n\t\t} else {\n\t\t\treturn val;\n\t\t}\n\t});\nvar $elm$virtual_dom$VirtualDom$attribute = F2(\n\tfunction (key, value) {\n\t\treturn A2(\n\t\t\t_VirtualDom_attribute,\n\t\t\t_VirtualDom_noOnOrFormAction(key),\n\t\t\t_VirtualDom_noJavaScriptOrHtmlUri(value));\n\t});\nvar $rtfeldman$elm_css$VirtualDom$Styled$extractUnstyledAttributeNS = F2(\n\tfunction (styles, _v0) {\n\t\tvar val = _v0.a;\n\t\tvar isCssStyles = _v0.b;\n\t\tvar cssTemplate = _v0.c;\n\t\tif (isCssStyles) {\n\t\t\tvar _v1 = A2($elm$core$Dict$get, cssTemplate, styles);\n\t\t\tif (!_v1.$) {\n\t\t\t\tvar classname = _v1.a;\n\t\t\t\treturn A2($elm$virtual_dom$VirtualDom$attribute, 'class', classname);\n\t\t\t} else {\n\t\t\t\treturn A2($elm$virtual_dom$VirtualDom$attribute, 'class', '_unstyled');\n\t\t\t}\n\t\t} else {\n\t\t\treturn val;\n\t\t}\n\t});\nvar $elm$virtual_dom$VirtualDom$keyedNode = function (tag) {\n\treturn _VirtualDom_keyedNode(\n\t\t_VirtualDom_noScript(tag));\n};\nvar $elm$virtual_dom$VirtualDom$keyedNodeNS = F2(\n\tfunction (namespace, tag) {\n\t\treturn A2(\n\t\t\t_VirtualDom_keyedNodeNS,\n\t\t\tnamespace,\n\t\t\t_VirtualDom_noScript(tag));\n\t});\nvar $elm$virtual_dom$VirtualDom$node = function (tag) {\n\treturn _VirtualDom_node(\n\t\t_VirtualDom_noScript(tag));\n};\nvar $elm$virtual_dom$VirtualDom$nodeNS = F2(\n\tfunction (namespace, tag) {\n\t\treturn A2(\n\t\t\t_VirtualDom_nodeNS,\n\t\t\tnamespace,\n\t\t\t_VirtualDom_noScript(tag));\n\t});\nvar $rtfeldman$elm_css$VirtualDom$Styled$accumulateKeyedStyledHtml = F2(\n\tfunction (_v6, _v7) {\n\t\tvar key = _v6.a;\n\t\tvar html = _v6.b;\n\t\tvar pairs = _v7.a;\n\t\tvar styles = _v7.b;\n\t\tswitch (html.$) {\n\t\t\tcase 4:\n\t\t\t\tvar vdom = html.a;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t_Utils_Tuple2(key, vdom),\n\t\t\t\t\t\tpairs),\n\t\t\t\t\tstyles);\n\t\t\tcase 0:\n\t\t\t\tvar elemType = html.a;\n\t\t\t\tvar properties = html.b;\n\t\t\t\tvar children = html.c;\n\t\t\t\tvar combinedStyles = A3($elm$core$List$foldl, $rtfeldman$elm_css$VirtualDom$Styled$accumulateStyles, styles, properties);\n\t\t\t\tvar _v9 = A3(\n\t\t\t\t\t$elm$core$List$foldl,\n\t\t\t\t\t$rtfeldman$elm_css$VirtualDom$Styled$accumulateStyledHtml,\n\t\t\t\t\t_Utils_Tuple2(_List_Nil, combinedStyles),\n\t\t\t\t\tchildren);\n\t\t\t\tvar childNodes = _v9.a;\n\t\t\t\tvar finalStyles = _v9.b;\n\t\t\t\tvar vdom = A3(\n\t\t\t\t\t$elm$virtual_dom$VirtualDom$node,\n\t\t\t\t\telemType,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\t$rtfeldman$elm_css$VirtualDom$Styled$extractUnstyledAttribute(finalStyles),\n\t\t\t\t\t\tproperties),\n\t\t\t\t\t$elm$core$List$reverse(childNodes));\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t_Utils_Tuple2(key, vdom),\n\t\t\t\t\t\tpairs),\n\t\t\t\t\tfinalStyles);\n\t\t\tcase 1:\n\t\t\t\tvar ns = html.a;\n\t\t\t\tvar elemType = html.b;\n\t\t\t\tvar properties = html.c;\n\t\t\t\tvar children = html.d;\n\t\t\t\tvar combinedStyles = A3($elm$core$List$foldl, $rtfeldman$elm_css$VirtualDom$Styled$accumulateStyles, styles, properties);\n\t\t\t\tvar _v10 = A3(\n\t\t\t\t\t$elm$core$List$foldl,\n\t\t\t\t\t$rtfeldman$elm_css$VirtualDom$Styled$accumulateStyledHtml,\n\t\t\t\t\t_Utils_Tuple2(_List_Nil, combinedStyles),\n\t\t\t\t\tchildren);\n\t\t\t\tvar childNodes = _v10.a;\n\t\t\t\tvar finalStyles = _v10.b;\n\t\t\t\tvar vdom = A4(\n\t\t\t\t\t$elm$virtual_dom$VirtualDom$nodeNS,\n\t\t\t\t\tns,\n\t\t\t\t\telemType,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\t$rtfeldman$elm_css$VirtualDom$Styled$extractUnstyledAttribute(finalStyles),\n\t\t\t\t\t\tproperties),\n\t\t\t\t\t$elm$core$List$reverse(childNodes));\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t_Utils_Tuple2(key, vdom),\n\t\t\t\t\t\tpairs),\n\t\t\t\t\tfinalStyles);\n\t\t\tcase 2:\n\t\t\t\tvar elemType = html.a;\n\t\t\t\tvar properties = html.b;\n\t\t\t\tvar children = html.c;\n\t\t\t\tvar combinedStyles = A3($elm$core$List$foldl, $rtfeldman$elm_css$VirtualDom$Styled$accumulateStyles, styles, properties);\n\t\t\t\tvar _v11 = A3(\n\t\t\t\t\t$elm$core$List$foldl,\n\t\t\t\t\t$rtfeldman$elm_css$VirtualDom$Styled$accumulateKeyedStyledHtml,\n\t\t\t\t\t_Utils_Tuple2(_List_Nil, combinedStyles),\n\t\t\t\t\tchildren);\n\t\t\t\tvar childNodes = _v11.a;\n\t\t\t\tvar finalStyles = _v11.b;\n\t\t\t\tvar vdom = A3(\n\t\t\t\t\t$elm$virtual_dom$VirtualDom$keyedNode,\n\t\t\t\t\telemType,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\t$rtfeldman$elm_css$VirtualDom$Styled$extractUnstyledAttribute(finalStyles),\n\t\t\t\t\t\tproperties),\n\t\t\t\t\t$elm$core$List$reverse(childNodes));\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t_Utils_Tuple2(key, vdom),\n\t\t\t\t\t\tpairs),\n\t\t\t\t\tfinalStyles);\n\t\t\tdefault:\n\t\t\t\tvar ns = html.a;\n\t\t\t\tvar elemType = html.b;\n\t\t\t\tvar properties = html.c;\n\t\t\t\tvar children = html.d;\n\t\t\t\tvar combinedStyles = A3($elm$core$List$foldl, $rtfeldman$elm_css$VirtualDom$Styled$accumulateStyles, styles, properties);\n\t\t\t\tvar _v12 = A3(\n\t\t\t\t\t$elm$core$List$foldl,\n\t\t\t\t\t$rtfeldman$elm_css$VirtualDom$Styled$accumulateKeyedStyledHtml,\n\t\t\t\t\t_Utils_Tuple2(_List_Nil, combinedStyles),\n\t\t\t\t\tchildren);\n\t\t\t\tvar childNodes = _v12.a;\n\t\t\t\tvar finalStyles = _v12.b;\n\t\t\t\tvar vdom = A4(\n\t\t\t\t\t$elm$virtual_dom$VirtualDom$keyedNodeNS,\n\t\t\t\t\tns,\n\t\t\t\t\telemType,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\t$rtfeldman$elm_css$VirtualDom$Styled$extractUnstyledAttribute(finalStyles),\n\t\t\t\t\t\tproperties),\n\t\t\t\t\t$elm$core$List$reverse(childNodes));\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t_Utils_Tuple2(key, vdom),\n\t\t\t\t\t\tpairs),\n\t\t\t\t\tfinalStyles);\n\t\t}\n\t});\nvar $rtfeldman$elm_css$VirtualDom$Styled$accumulateStyledHtml = F2(\n\tfunction (html, _v0) {\n\t\tvar nodes = _v0.a;\n\t\tvar styles = _v0.b;\n\t\tswitch (html.$) {\n\t\t\tcase 4:\n\t\t\t\tvar vdomNode = html.a;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\tA2($elm$core$List$cons, vdomNode, nodes),\n\t\t\t\t\tstyles);\n\t\t\tcase 0:\n\t\t\t\tvar elemType = html.a;\n\t\t\t\tvar properties = html.b;\n\t\t\t\tvar children = html.c;\n\t\t\t\tvar combinedStyles = A3($elm$core$List$foldl, $rtfeldman$elm_css$VirtualDom$Styled$accumulateStyles, styles, properties);\n\t\t\t\tvar _v2 = A3(\n\t\t\t\t\t$elm$core$List$foldl,\n\t\t\t\t\t$rtfeldman$elm_css$VirtualDom$Styled$accumulateStyledHtml,\n\t\t\t\t\t_Utils_Tuple2(_List_Nil, combinedStyles),\n\t\t\t\t\tchildren);\n\t\t\t\tvar childNodes = _v2.a;\n\t\t\t\tvar finalStyles = _v2.b;\n\t\t\t\tvar vdomNode = A3(\n\t\t\t\t\t$elm$virtual_dom$VirtualDom$node,\n\t\t\t\t\telemType,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\t$rtfeldman$elm_css$VirtualDom$Styled$extractUnstyledAttribute(finalStyles),\n\t\t\t\t\t\tproperties),\n\t\t\t\t\t$elm$core$List$reverse(childNodes));\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\tA2($elm$core$List$cons, vdomNode, nodes),\n\t\t\t\t\tfinalStyles);\n\t\t\tcase 1:\n\t\t\t\tvar ns = html.a;\n\t\t\t\tvar elemType = html.b;\n\t\t\t\tvar properties = html.c;\n\t\t\t\tvar children = html.d;\n\t\t\t\tvar combinedStyles = A3($elm$core$List$foldl, $rtfeldman$elm_css$VirtualDom$Styled$accumulateStyles, styles, properties);\n\t\t\t\tvar _v3 = A3(\n\t\t\t\t\t$elm$core$List$foldl,\n\t\t\t\t\t$rtfeldman$elm_css$VirtualDom$Styled$accumulateStyledHtml,\n\t\t\t\t\t_Utils_Tuple2(_List_Nil, combinedStyles),\n\t\t\t\t\tchildren);\n\t\t\t\tvar childNodes = _v3.a;\n\t\t\t\tvar finalStyles = _v3.b;\n\t\t\t\tvar vdomNode = A4(\n\t\t\t\t\t$elm$virtual_dom$VirtualDom$nodeNS,\n\t\t\t\t\tns,\n\t\t\t\t\telemType,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\t$rtfeldman$elm_css$VirtualDom$Styled$extractUnstyledAttributeNS(finalStyles),\n\t\t\t\t\t\tproperties),\n\t\t\t\t\t$elm$core$List$reverse(childNodes));\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\tA2($elm$core$List$cons, vdomNode, nodes),\n\t\t\t\t\tfinalStyles);\n\t\t\tcase 2:\n\t\t\t\tvar elemType = html.a;\n\t\t\t\tvar properties = html.b;\n\t\t\t\tvar children = html.c;\n\t\t\t\tvar combinedStyles = A3($elm$core$List$foldl, $rtfeldman$elm_css$VirtualDom$Styled$accumulateStyles, styles, properties);\n\t\t\t\tvar _v4 = A3(\n\t\t\t\t\t$elm$core$List$foldl,\n\t\t\t\t\t$rtfeldman$elm_css$VirtualDom$Styled$accumulateKeyedStyledHtml,\n\t\t\t\t\t_Utils_Tuple2(_List_Nil, combinedStyles),\n\t\t\t\t\tchildren);\n\t\t\t\tvar childNodes = _v4.a;\n\t\t\t\tvar finalStyles = _v4.b;\n\t\t\t\tvar vdomNode = A3(\n\t\t\t\t\t$elm$virtual_dom$VirtualDom$keyedNode,\n\t\t\t\t\telemType,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\t$rtfeldman$elm_css$VirtualDom$Styled$extractUnstyledAttribute(finalStyles),\n\t\t\t\t\t\tproperties),\n\t\t\t\t\t$elm$core$List$reverse(childNodes));\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\tA2($elm$core$List$cons, vdomNode, nodes),\n\t\t\t\t\tfinalStyles);\n\t\t\tdefault:\n\t\t\t\tvar ns = html.a;\n\t\t\t\tvar elemType = html.b;\n\t\t\t\tvar properties = html.c;\n\t\t\t\tvar children = html.d;\n\t\t\t\tvar combinedStyles = A3($elm$core$List$foldl, $rtfeldman$elm_css$VirtualDom$Styled$accumulateStyles, styles, properties);\n\t\t\t\tvar _v5 = A3(\n\t\t\t\t\t$elm$core$List$foldl,\n\t\t\t\t\t$rtfeldman$elm_css$VirtualDom$Styled$accumulateKeyedStyledHtml,\n\t\t\t\t\t_Utils_Tuple2(_List_Nil, combinedStyles),\n\t\t\t\t\tchildren);\n\t\t\t\tvar childNodes = _v5.a;\n\t\t\t\tvar finalStyles = _v5.b;\n\t\t\t\tvar vdomNode = A4(\n\t\t\t\t\t$elm$virtual_dom$VirtualDom$keyedNodeNS,\n\t\t\t\t\tns,\n\t\t\t\t\telemType,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\t$rtfeldman$elm_css$VirtualDom$Styled$extractUnstyledAttributeNS(finalStyles),\n\t\t\t\t\t\tproperties),\n\t\t\t\t\t$elm$core$List$reverse(childNodes));\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\tA2($elm$core$List$cons, vdomNode, nodes),\n\t\t\t\t\tfinalStyles);\n\t\t}\n\t});\nvar $elm$core$Dict$empty = $elm$core$Dict$RBEmpty_elm_builtin;\nvar $elm$core$List$singleton = function (value) {\n\treturn _List_fromArray(\n\t\t[value]);\n};\nvar $elm$virtual_dom$VirtualDom$text = _VirtualDom_text;\nvar $elm$core$Dict$foldl = F3(\n\tfunction (func, acc, dict) {\n\t\tfoldl:\n\t\twhile (true) {\n\t\t\tif (dict.$ === -2) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar key = dict.b;\n\t\t\t\tvar value = dict.c;\n\t\t\t\tvar left = dict.d;\n\t\t\t\tvar right = dict.e;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A3(\n\t\t\t\t\tfunc,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA3($elm$core$Dict$foldl, func, acc, left)),\n\t\t\t\t\t$temp$dict = right;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tdict = $temp$dict;\n\t\t\t\tcontinue foldl;\n\t\t\t}\n\t\t}\n\t});\nvar $rtfeldman$elm_css$VirtualDom$Styled$classnameStandin = '\\u0007';\nvar $elm$core$String$replace = F3(\n\tfunction (before, after, string) {\n\t\treturn A2(\n\t\t\t$elm$core$String$join,\n\t\t\tafter,\n\t\t\tA2($elm$core$String$split, before, string));\n\t});\nvar $rtfeldman$elm_css$VirtualDom$Styled$styleToDeclaration = F3(\n\tfunction (template, classname, declaration) {\n\t\treturn declaration + ('\\n' + A3($elm$core$String$replace, $rtfeldman$elm_css$VirtualDom$Styled$classnameStandin, classname, template));\n\t});\nvar $rtfeldman$elm_css$VirtualDom$Styled$toDeclaration = function (dict) {\n\treturn A3($elm$core$Dict$foldl, $rtfeldman$elm_css$VirtualDom$Styled$styleToDeclaration, '', dict);\n};\nvar $rtfeldman$elm_css$VirtualDom$Styled$toScopedDeclaration = F2(\n\tfunction (scopingPrefix, dict) {\n\t\treturn A3(\n\t\t\t$elm$core$Dict$foldl,\n\t\t\tF3(\n\t\t\t\tfunction (template, classname, declaration) {\n\t\t\t\t\treturn declaration + ('\\n' + A3($elm$core$String$replace, '.' + $rtfeldman$elm_css$VirtualDom$Styled$classnameStandin, '#' + (scopingPrefix + ('.' + classname)), template));\n\t\t\t\t}),\n\t\t\t'',\n\t\t\tdict);\n\t});\nvar $rtfeldman$elm_css$VirtualDom$Styled$toStyleNode = F2(\n\tfunction (maybeNonce, accumulatedStyles) {\n\t\tvar cssText = function () {\n\t\t\tif (!accumulatedStyles.$) {\n\t\t\t\tvar allStyles = accumulatedStyles.a;\n\t\t\t\treturn $rtfeldman$elm_css$VirtualDom$Styled$toDeclaration(allStyles);\n\t\t\t} else {\n\t\t\t\tvar scope = accumulatedStyles.a;\n\t\t\t\tvar rootStyles = accumulatedStyles.b;\n\t\t\t\tvar descendantStyles = accumulatedStyles.c;\n\t\t\t\treturn A2($rtfeldman$elm_css$VirtualDom$Styled$toScopedDeclaration, scope, rootStyles) + ('\\n' + A2($rtfeldman$elm_css$VirtualDom$Styled$toScopedDeclaration, scope + ' ', descendantStyles));\n\t\t\t}\n\t\t}();\n\t\treturn A3(\n\t\t\t$elm$virtual_dom$VirtualDom$node,\n\t\t\t'span',\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2($elm$virtual_dom$VirtualDom$attribute, 'style', 'display: none;'),\n\t\t\t\t\tA2($elm$virtual_dom$VirtualDom$attribute, 'class', 'elm-css-style-wrapper')\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA3(\n\t\t\t\t\t$elm$virtual_dom$VirtualDom$node,\n\t\t\t\t\t'style',\n\t\t\t\t\tfunction () {\n\t\t\t\t\t\tif (!maybeNonce.$) {\n\t\t\t\t\t\t\tvar nonce = maybeNonce.a;\n\t\t\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tA2($elm$virtual_dom$VirtualDom$attribute, 'nonce', nonce)\n\t\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn _List_Nil;\n\t\t\t\t\t\t}\n\t\t\t\t\t}(),\n\t\t\t\t\t$elm$core$List$singleton(\n\t\t\t\t\t\t$elm$virtual_dom$VirtualDom$text(cssText)))\n\t\t\t\t]));\n\t});\nvar $rtfeldman$elm_css$VirtualDom$Styled$unstyle = F4(\n\tfunction (maybeNonce, elemType, properties, children) {\n\t\tvar initialStyles = A3($elm$core$List$foldl, $rtfeldman$elm_css$VirtualDom$Styled$accumulateStyles, $elm$core$Dict$empty, properties);\n\t\tvar _v0 = A3(\n\t\t\t$elm$core$List$foldl,\n\t\t\t$rtfeldman$elm_css$VirtualDom$Styled$accumulateStyledHtml,\n\t\t\t_Utils_Tuple2(_List_Nil, initialStyles),\n\t\t\tchildren);\n\t\tvar childNodes = _v0.a;\n\t\tvar styles = _v0.b;\n\t\tvar styleNode = A2(\n\t\t\t$rtfeldman$elm_css$VirtualDom$Styled$toStyleNode,\n\t\t\tmaybeNonce,\n\t\t\t$rtfeldman$elm_css$VirtualDom$Styled$UnscopedStyles(styles));\n\t\tvar unstyledProperties = A2(\n\t\t\t$elm$core$List$map,\n\t\t\t$rtfeldman$elm_css$VirtualDom$Styled$extractUnstyledAttribute(styles),\n\t\t\tproperties);\n\t\treturn A3(\n\t\t\t$elm$virtual_dom$VirtualDom$node,\n\t\t\telemType,\n\t\t\tunstyledProperties,\n\t\t\tA2(\n\t\t\t\t$elm$core$List$cons,\n\t\t\t\tstyleNode,\n\t\t\t\t$elm$core$List$reverse(childNodes)));\n\t});\nvar $rtfeldman$elm_css$VirtualDom$Styled$containsKey = F2(\n\tfunction (key, pairs) {\n\t\tcontainsKey:\n\t\twhile (true) {\n\t\t\tif (!pairs.b) {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\tvar _v1 = pairs.a;\n\t\t\t\tvar str = _v1.a;\n\t\t\t\tvar rest = pairs.b;\n\t\t\t\tif (_Utils_eq(key, str)) {\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\tvar $temp$key = key,\n\t\t\t\t\t\t$temp$pairs = rest;\n\t\t\t\t\tkey = $temp$key;\n\t\t\t\t\tpairs = $temp$pairs;\n\t\t\t\t\tcontinue containsKey;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $rtfeldman$elm_css$VirtualDom$Styled$getUnusedKey = F2(\n\tfunction (_default, pairs) {\n\t\tgetUnusedKey:\n\t\twhile (true) {\n\t\t\tif (!pairs.b) {\n\t\t\t\treturn _default;\n\t\t\t} else {\n\t\t\t\tvar _v1 = pairs.a;\n\t\t\t\tvar firstKey = _v1.a;\n\t\t\t\tvar rest = pairs.b;\n\t\t\t\tvar newKey = '_' + firstKey;\n\t\t\t\tif (A2($rtfeldman$elm_css$VirtualDom$Styled$containsKey, newKey, rest)) {\n\t\t\t\t\tvar $temp$default = newKey,\n\t\t\t\t\t\t$temp$pairs = rest;\n\t\t\t\t\t_default = $temp$default;\n\t\t\t\t\tpairs = $temp$pairs;\n\t\t\t\t\tcontinue getUnusedKey;\n\t\t\t\t} else {\n\t\t\t\t\treturn newKey;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $rtfeldman$elm_css$VirtualDom$Styled$toKeyedStyleNode = F3(\n\tfunction (maybeNonce, accumulatedStyles, keyedChildNodes) {\n\t\tvar styleNodeKey = A2($rtfeldman$elm_css$VirtualDom$Styled$getUnusedKey, '_', keyedChildNodes);\n\t\tvar finalNode = A2($rtfeldman$elm_css$VirtualDom$Styled$toStyleNode, maybeNonce, accumulatedStyles);\n\t\treturn _Utils_Tuple2(styleNodeKey, finalNode);\n\t});\nvar $rtfeldman$elm_css$VirtualDom$Styled$unstyleKeyed = F4(\n\tfunction (maybeNonce, elemType, properties, keyedChildren) {\n\t\tvar initialStyles = A3($elm$core$List$foldl, $rtfeldman$elm_css$VirtualDom$Styled$accumulateStyles, $elm$core$Dict$empty, properties);\n\t\tvar _v0 = A3(\n\t\t\t$elm$core$List$foldl,\n\t\t\t$rtfeldman$elm_css$VirtualDom$Styled$accumulateKeyedStyledHtml,\n\t\t\t_Utils_Tuple2(_List_Nil, initialStyles),\n\t\t\tkeyedChildren);\n\t\tvar keyedChildNodes = _v0.a;\n\t\tvar styles = _v0.b;\n\t\tvar keyedStyleNode = A3(\n\t\t\t$rtfeldman$elm_css$VirtualDom$Styled$toKeyedStyleNode,\n\t\t\tmaybeNonce,\n\t\t\t$rtfeldman$elm_css$VirtualDom$Styled$UnscopedStyles(styles),\n\t\t\tkeyedChildNodes);\n\t\tvar unstyledProperties = A2(\n\t\t\t$elm$core$List$map,\n\t\t\t$rtfeldman$elm_css$VirtualDom$Styled$extractUnstyledAttribute(styles),\n\t\t\tproperties);\n\t\treturn A3(\n\t\t\t$elm$virtual_dom$VirtualDom$keyedNode,\n\t\t\telemType,\n\t\t\tunstyledProperties,\n\t\t\tA2(\n\t\t\t\t$elm$core$List$cons,\n\t\t\t\tkeyedStyleNode,\n\t\t\t\t$elm$core$List$reverse(keyedChildNodes)));\n\t});\nvar $rtfeldman$elm_css$VirtualDom$Styled$unstyleKeyedNS = F5(\n\tfunction (maybeNonce, ns, elemType, properties, keyedChildren) {\n\t\tvar initialStyles = A3($elm$core$List$foldl, $rtfeldman$elm_css$VirtualDom$Styled$accumulateStyles, $elm$core$Dict$empty, properties);\n\t\tvar _v0 = A3(\n\t\t\t$elm$core$List$foldl,\n\t\t\t$rtfeldman$elm_css$VirtualDom$Styled$accumulateKeyedStyledHtml,\n\t\t\t_Utils_Tuple2(_List_Nil, initialStyles),\n\t\t\tkeyedChildren);\n\t\tvar keyedChildNodes = _v0.a;\n\t\tvar styles = _v0.b;\n\t\tvar keyedStyleNode = A3(\n\t\t\t$rtfeldman$elm_css$VirtualDom$Styled$toKeyedStyleNode,\n\t\t\tmaybeNonce,\n\t\t\t$rtfeldman$elm_css$VirtualDom$Styled$UnscopedStyles(styles),\n\t\t\tkeyedChildNodes);\n\t\tvar unstyledProperties = A2(\n\t\t\t$elm$core$List$map,\n\t\t\t$rtfeldman$elm_css$VirtualDom$Styled$extractUnstyledAttributeNS(styles),\n\t\t\tproperties);\n\t\treturn A4(\n\t\t\t$elm$virtual_dom$VirtualDom$keyedNodeNS,\n\t\t\tns,\n\t\t\telemType,\n\t\t\tunstyledProperties,\n\t\t\tA2(\n\t\t\t\t$elm$core$List$cons,\n\t\t\t\tkeyedStyleNode,\n\t\t\t\t$elm$core$List$reverse(keyedChildNodes)));\n\t});\nvar $rtfeldman$elm_css$VirtualDom$Styled$unstyleNS = F5(\n\tfunction (maybeNonce, ns, elemType, properties, children) {\n\t\tvar initialStyles = A3($elm$core$List$foldl, $rtfeldman$elm_css$VirtualDom$Styled$accumulateStyles, $elm$core$Dict$empty, properties);\n\t\tvar _v0 = A3(\n\t\t\t$elm$core$List$foldl,\n\t\t\t$rtfeldman$elm_css$VirtualDom$Styled$accumulateStyledHtml,\n\t\t\t_Utils_Tuple2(_List_Nil, initialStyles),\n\t\t\tchildren);\n\t\tvar childNodes = _v0.a;\n\t\tvar styles = _v0.b;\n\t\tvar styleNode = A2(\n\t\t\t$rtfeldman$elm_css$VirtualDom$Styled$toStyleNode,\n\t\t\tmaybeNonce,\n\t\t\t$rtfeldman$elm_css$VirtualDom$Styled$UnscopedStyles(styles));\n\t\tvar unstyledProperties = A2(\n\t\t\t$elm$core$List$map,\n\t\t\t$rtfeldman$elm_css$VirtualDom$Styled$extractUnstyledAttributeNS(styles),\n\t\t\tproperties);\n\t\treturn A4(\n\t\t\t$elm$virtual_dom$VirtualDom$nodeNS,\n\t\t\tns,\n\t\t\telemType,\n\t\t\tunstyledProperties,\n\t\t\tA2(\n\t\t\t\t$elm$core$List$cons,\n\t\t\t\tstyleNode,\n\t\t\t\t$elm$core$List$reverse(childNodes)));\n\t});\nvar $rtfeldman$elm_css$VirtualDom$Styled$toUnstyled = function (vdom) {\n\tswitch (vdom.$) {\n\t\tcase 4:\n\t\t\tvar plainNode = vdom.a;\n\t\t\treturn plainNode;\n\t\tcase 0:\n\t\t\tvar elemType = vdom.a;\n\t\t\tvar properties = vdom.b;\n\t\t\tvar children = vdom.c;\n\t\t\treturn A4($rtfeldman$elm_css$VirtualDom$Styled$unstyle, $elm$core$Maybe$Nothing, elemType, properties, children);\n\t\tcase 1:\n\t\t\tvar ns = vdom.a;\n\t\t\tvar elemType = vdom.b;\n\t\t\tvar properties = vdom.c;\n\t\t\tvar children = vdom.d;\n\t\t\treturn A5($rtfeldman$elm_css$VirtualDom$Styled$unstyleNS, $elm$core$Maybe$Nothing, ns, elemType, properties, children);\n\t\tcase 2:\n\t\t\tvar elemType = vdom.a;\n\t\t\tvar properties = vdom.b;\n\t\t\tvar children = vdom.c;\n\t\t\treturn A4($rtfeldman$elm_css$VirtualDom$Styled$unstyleKeyed, $elm$core$Maybe$Nothing, elemType, properties, children);\n\t\tdefault:\n\t\t\tvar ns = vdom.a;\n\t\t\tvar elemType = vdom.b;\n\t\t\tvar properties = vdom.c;\n\t\t\tvar children = vdom.d;\n\t\t\treturn A5($rtfeldman$elm_css$VirtualDom$Styled$unstyleKeyedNS, $elm$core$Maybe$Nothing, ns, elemType, properties, children);\n\t}\n};\nvar $rtfeldman$elm_css$Html$Styled$toUnstyled = $rtfeldman$elm_css$VirtualDom$Styled$toUnstyled;\nvar $author$project$Main$FormUX = function (a) {\n\treturn {$: 2, a: a};\n};\nvar $author$project$Main$LoadingUX = function (a) {\n\treturn {$: 3, a: a};\n};\nvar $author$project$Main$SubmittedUX = {$: 4};\nvar $author$project$Main$accountRequested = _Platform_outgoingPort('accountRequested', $elm$json$Json$Encode$string);\nvar $elm$json$Json$Encode$int = _Json_wrap;\nvar $author$project$Main$approveRequested = _Platform_outgoingPort('approveRequested', $elm$json$Json$Encode$int);\nvar $elm$core$Maybe$map = F2(\n\tfunction (f, maybe) {\n\t\tif (!maybe.$) {\n\t\t\tvar value = maybe.a;\n\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\tf(value));\n\t\t} else {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t}\n\t});\nvar $author$project$Main$mintRequested = _Platform_outgoingPort('mintRequested', $elm$json$Json$Encode$int);\nvar $elm$core$Basics$round = _Basics_round;\nvar $elm$core$String$toFloat = _String_toFloat;\nvar $elm$core$Maybe$withDefault = F2(\n\tfunction (_default, maybe) {\n\t\tif (!maybe.$) {\n\t\t\tvar value = maybe.a;\n\t\t\treturn value;\n\t\t} else {\n\t\t\treturn _default;\n\t\t}\n\t});\nvar $author$project$Main$stringFloatInt = A2(\n\t$elm$core$Basics$composeR,\n\t$elm$core$String$toFloat,\n\tA2(\n\t\t$elm$core$Basics$composeR,\n\t\t$elm$core$Maybe$map($elm$core$Basics$round),\n\t\t$elm$core$Maybe$withDefault(0)));\nvar $author$project$Main$update = F2(\n\tfunction (msg, model) {\n\t\tswitch (msg.$) {\n\t\t\tcase 0:\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\to: $author$project$Main$LoadingUX('Connecting wallet')\n\t\t\t\t\t\t}),\n\t\t\t\t\t$author$project$Main$accountRequested(''));\n\t\t\tcase 1:\n\t\t\t\tvar err = msg.a;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\to: $author$project$Main$ConnectAccount(\n\t\t\t\t\t\t\t\t$elm$core$Maybe$Just(err))\n\t\t\t\t\t\t}),\n\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\tcase 2:\n\t\t\t\tvar wallet = msg.a;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\to: $author$project$Main$FormUX($elm$core$Maybe$Nothing),\n\t\t\t\t\t\t\tI: $elm$core$Maybe$Just(wallet)\n\t\t\t\t\t\t}),\n\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\tcase 9:\n\t\t\t\tvar quantityStr = msg.a;\n\t\t\t\tvar quantity = A2(\n\t\t\t\t\t$elm$core$Maybe$withDefault,\n\t\t\t\t\t0,\n\t\t\t\t\t$elm$core$String$toInt(quantityStr));\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tn: quantity,\n\t\t\t\t\t\t\to: $author$project$Main$FormUX($elm$core$Maybe$Nothing)\n\t\t\t\t\t\t}),\n\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\tcase 3:\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$Maybe$withDefault,\n\t\t\t\t\t_Utils_Tuple2(model, $elm$core$Platform$Cmd$none),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Maybe$map,\n\t\t\t\t\t\tfunction (wallet) {\n\t\t\t\t\t\t\tvar totalFee = model.n * $author$project$Main$stringFloatInt(wallet.aM);\n\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\to: $author$project$Main$LoadingUX(\n\t\t\t\t\t\t\t\t\t\t\t'Submitting approval to transfer ' + ($elm$core$String$fromInt(totalFee) + (' ' + (wallet.ar + '...'))))\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t$author$project$Main$approveRequested(totalFee));\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmodel.I));\n\t\t\tcase 4:\n\t\t\t\tvar err = msg.a;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\to: $author$project$Main$FormUX(\n\t\t\t\t\t\t\t\t$elm$core$Maybe$Just(err))\n\t\t\t\t\t\t}),\n\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\tcase 5:\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\to: $author$project$Main$LoadingUX(\n\t\t\t\t\t\t\t\t'Submitting minting request of ' + ($elm$core$String$fromInt(model.n) + ' ALGOBULL...'))\n\t\t\t\t\t\t}),\n\t\t\t\t\t$author$project$Main$mintRequested(model.n));\n\t\t\tcase 6:\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\to: $author$project$Main$LoadingUX('Submitting mint transaction')\n\t\t\t\t\t\t}),\n\t\t\t\t\t$author$project$Main$mintRequested(model.n));\n\t\t\tcase 7:\n\t\t\t\tvar scanUrl = msg.a;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{aL: scanUrl, o: $author$project$Main$SubmittedUX}),\n\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\tdefault:\n\t\t\t\tvar err = msg.a;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\to: $author$project$Main$FormUX(\n\t\t\t\t\t\t\t\t$elm$core$Maybe$Just(err))\n\t\t\t\t\t\t}),\n\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t}\n\t});\nvar $rtfeldman$elm_css$VirtualDom$Styled$Node = F3(\n\tfunction (a, b, c) {\n\t\treturn {$: 0, a: a, b: b, c: c};\n\t});\nvar $rtfeldman$elm_css$VirtualDom$Styled$node = $rtfeldman$elm_css$VirtualDom$Styled$Node;\nvar $rtfeldman$elm_css$Html$Styled$node = $rtfeldman$elm_css$VirtualDom$Styled$node;\nvar $rtfeldman$elm_css$Html$Styled$a = $rtfeldman$elm_css$Html$Styled$node('a');\nvar $author$project$Main$AccountRequested = {$: 0};\nvar $rtfeldman$elm_css$Css$Preprocess$AppendProperty = function (a) {\n\treturn {$: 0, a: a};\n};\nvar $rtfeldman$elm_css$Css$Structure$Property = $elm$core$Basics$identity;\nvar $rtfeldman$elm_css$Css$property = F2(\n\tfunction (key, value) {\n\t\treturn $rtfeldman$elm_css$Css$Preprocess$AppendProperty(key + (':' + value));\n\t});\nvar $author$project$Tailwind$Utilities$align_middle = A2($rtfeldman$elm_css$Css$property, 'vertical-align', 'middle');\nvar $rtfeldman$elm_css$Html$Styled$button = $rtfeldman$elm_css$Html$Styled$node('button');\nvar $rtfeldman$elm_css$VirtualDom$Styled$Attribute = F3(\n\tfunction (a, b, c) {\n\t\treturn {$: 0, a: a, b: b, c: c};\n\t});\nvar $elm$core$List$any = F2(\n\tfunction (isOkay, list) {\n\t\tany:\n\t\twhile (true) {\n\t\t\tif (!list.b) {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\tvar x = list.a;\n\t\t\t\tvar xs = list.b;\n\t\t\t\tif (isOkay(x)) {\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\tvar $temp$isOkay = isOkay,\n\t\t\t\t\t\t$temp$list = xs;\n\t\t\t\t\tisOkay = $temp$isOkay;\n\t\t\t\t\tlist = $temp$list;\n\t\t\t\t\tcontinue any;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Basics$composeL = F3(\n\tfunction (g, f, x) {\n\t\treturn g(\n\t\t\tf(x));\n\t});\nvar $elm$core$Basics$not = _Basics_not;\nvar $elm$core$List$all = F2(\n\tfunction (isOkay, list) {\n\t\treturn !A2(\n\t\t\t$elm$core$List$any,\n\t\t\tA2($elm$core$Basics$composeL, $elm$core$Basics$not, isOkay),\n\t\t\tlist);\n\t});\nvar $elm$core$List$isEmpty = function (xs) {\n\tif (!xs.b) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\nvar $rtfeldman$elm_css$Css$Structure$compactHelp = F2(\n\tfunction (declaration, _v0) {\n\t\tvar keyframesByName = _v0.a;\n\t\tvar declarations = _v0.b;\n\t\tswitch (declaration.$) {\n\t\t\tcase 0:\n\t\t\t\tvar _v2 = declaration.a;\n\t\t\t\tvar properties = _v2.c;\n\t\t\t\treturn $elm$core$List$isEmpty(properties) ? _Utils_Tuple2(keyframesByName, declarations) : _Utils_Tuple2(\n\t\t\t\t\tkeyframesByName,\n\t\t\t\t\tA2($elm$core$List$cons, declaration, declarations));\n\t\t\tcase 1:\n\t\t\t\tvar styleBlocks = declaration.b;\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$List$all,\n\t\t\t\t\tfunction (_v3) {\n\t\t\t\t\t\tvar properties = _v3.c;\n\t\t\t\t\t\treturn $elm$core$List$isEmpty(properties);\n\t\t\t\t\t},\n\t\t\t\t\tstyleBlocks) ? _Utils_Tuple2(keyframesByName, declarations) : _Utils_Tuple2(\n\t\t\t\t\tkeyframesByName,\n\t\t\t\t\tA2($elm$core$List$cons, declaration, declarations));\n\t\t\tcase 2:\n\t\t\t\tvar otherDeclarations = declaration.b;\n\t\t\t\treturn $elm$core$List$isEmpty(otherDeclarations) ? _Utils_Tuple2(keyframesByName, declarations) : _Utils_Tuple2(\n\t\t\t\t\tkeyframesByName,\n\t\t\t\t\tA2($elm$core$List$cons, declaration, declarations));\n\t\t\tcase 3:\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\tkeyframesByName,\n\t\t\t\t\tA2($elm$core$List$cons, declaration, declarations));\n\t\t\tcase 4:\n\t\t\t\tvar properties = declaration.a;\n\t\t\t\treturn $elm$core$List$isEmpty(properties) ? _Utils_Tuple2(keyframesByName, declarations) : _Utils_Tuple2(\n\t\t\t\t\tkeyframesByName,\n\t\t\t\t\tA2($elm$core$List$cons, declaration, declarations));\n\t\t\tcase 5:\n\t\t\t\tvar properties = declaration.a;\n\t\t\t\treturn $elm$core$List$isEmpty(properties) ? _Utils_Tuple2(keyframesByName, declarations) : _Utils_Tuple2(\n\t\t\t\t\tkeyframesByName,\n\t\t\t\t\tA2($elm$core$List$cons, declaration, declarations));\n\t\t\tcase 6:\n\t\t\t\tvar record = declaration.a;\n\t\t\t\treturn $elm$core$String$isEmpty(record.cn) ? _Utils_Tuple2(keyframesByName, declarations) : _Utils_Tuple2(\n\t\t\t\t\tA3($elm$core$Dict$insert, record.cB, record.cn, keyframesByName),\n\t\t\t\t\tdeclarations);\n\t\t\tcase 7:\n\t\t\t\tvar properties = declaration.a;\n\t\t\t\treturn $elm$core$List$isEmpty(properties) ? _Utils_Tuple2(keyframesByName, declarations) : _Utils_Tuple2(\n\t\t\t\t\tkeyframesByName,\n\t\t\t\t\tA2($elm$core$List$cons, declaration, declarations));\n\t\t\tcase 8:\n\t\t\t\tvar properties = declaration.a;\n\t\t\t\treturn $elm$core$List$isEmpty(properties) ? _Utils_Tuple2(keyframesByName, declarations) : _Utils_Tuple2(\n\t\t\t\t\tkeyframesByName,\n\t\t\t\t\tA2($elm$core$List$cons, declaration, declarations));\n\t\t\tdefault:\n\t\t\t\tvar tuples = declaration.a;\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$List$all,\n\t\t\t\t\tfunction (_v4) {\n\t\t\t\t\t\tvar properties = _v4.b;\n\t\t\t\t\t\treturn $elm$core$List$isEmpty(properties);\n\t\t\t\t\t},\n\t\t\t\t\ttuples) ? _Utils_Tuple2(keyframesByName, declarations) : _Utils_Tuple2(\n\t\t\t\t\tkeyframesByName,\n\t\t\t\t\tA2($elm$core$List$cons, declaration, declarations));\n\t\t}\n\t});\nvar $rtfeldman$elm_css$Css$Structure$Keyframes = function (a) {\n\treturn {$: 6, a: a};\n};\nvar $elm$core$List$append = F2(\n\tfunction (xs, ys) {\n\t\tif (!ys.b) {\n\t\t\treturn xs;\n\t\t} else {\n\t\t\treturn A3($elm$core$List$foldr, $elm$core$List$cons, ys, xs);\n\t\t}\n\t});\nvar $rtfeldman$elm_css$Css$Structure$withKeyframeDeclarations = F2(\n\tfunction (keyframesByName, compactedDeclarations) {\n\t\treturn A2(\n\t\t\t$elm$core$List$append,\n\t\t\tA2(\n\t\t\t\t$elm$core$List$map,\n\t\t\t\tfunction (_v0) {\n\t\t\t\t\tvar name = _v0.a;\n\t\t\t\t\tvar decl = _v0.b;\n\t\t\t\t\treturn $rtfeldman$elm_css$Css$Structure$Keyframes(\n\t\t\t\t\t\t{cn: decl, cB: name});\n\t\t\t\t},\n\t\t\t\t$elm$core$Dict$toList(keyframesByName)),\n\t\t\tcompactedDeclarations);\n\t});\nvar $rtfeldman$elm_css$Css$Structure$compactDeclarations = function (declarations) {\n\tvar _v0 = A3(\n\t\t$elm$core$List$foldr,\n\t\t$rtfeldman$elm_css$Css$Structure$compactHelp,\n\t\t_Utils_Tuple2($elm$core$Dict$empty, _List_Nil),\n\t\tdeclarations);\n\tvar keyframesByName = _v0.a;\n\tvar compactedDeclarations = _v0.b;\n\treturn A2($rtfeldman$elm_css$Css$Structure$withKeyframeDeclarations, keyframesByName, compactedDeclarations);\n};\nvar $rtfeldman$elm_css$Css$Structure$compactStylesheet = function (_v0) {\n\tvar charset = _v0.bA;\n\tvar imports = _v0.bL;\n\tvar namespaces = _v0.bR;\n\tvar declarations = _v0.co;\n\treturn {\n\t\tbA: charset,\n\t\tco: $rtfeldman$elm_css$Css$Structure$compactDeclarations(declarations),\n\t\tbL: imports,\n\t\tbR: namespaces\n\t};\n};\nvar $rtfeldman$elm_css$Css$Structure$Output$charsetToString = function (charset) {\n\treturn A2(\n\t\t$elm$core$Maybe$withDefault,\n\t\t'',\n\t\tA2(\n\t\t\t$elm$core$Maybe$map,\n\t\t\tfunction (str) {\n\t\t\t\treturn '@charset \\\"' + (str + '\\\"');\n\t\t\t},\n\t\t\tcharset));\n};\nvar $rtfeldman$elm_css$Css$String$mapJoinHelp = F4(\n\tfunction (map, sep, strs, result) {\n\t\tmapJoinHelp:\n\t\twhile (true) {\n\t\t\tif (!strs.b) {\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\tif (!strs.b.b) {\n\t\t\t\t\tvar first = strs.a;\n\t\t\t\t\treturn result + (map(first) + '');\n\t\t\t\t} else {\n\t\t\t\t\tvar first = strs.a;\n\t\t\t\t\tvar rest = strs.b;\n\t\t\t\t\tvar $temp$map = map,\n\t\t\t\t\t\t$temp$sep = sep,\n\t\t\t\t\t\t$temp$strs = rest,\n\t\t\t\t\t\t$temp$result = result + (map(first) + (sep + ''));\n\t\t\t\t\tmap = $temp$map;\n\t\t\t\t\tsep = $temp$sep;\n\t\t\t\t\tstrs = $temp$strs;\n\t\t\t\t\tresult = $temp$result;\n\t\t\t\t\tcontinue mapJoinHelp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $rtfeldman$elm_css$Css$String$mapJoin = F3(\n\tfunction (map, sep, strs) {\n\t\treturn A4($rtfeldman$elm_css$Css$String$mapJoinHelp, map, sep, strs, '');\n\t});\nvar $rtfeldman$elm_css$Css$Structure$Output$mediaExpressionToString = function (expression) {\n\treturn '(' + (expression.bF + (A2(\n\t\t$elm$core$Maybe$withDefault,\n\t\t'',\n\t\tA2(\n\t\t\t$elm$core$Maybe$map,\n\t\t\t$elm$core$Basics$append(': '),\n\t\t\texpression.H)) + ')'));\n};\nvar $rtfeldman$elm_css$Css$Structure$Output$mediaTypeToString = function (mediaType) {\n\tswitch (mediaType) {\n\t\tcase 0:\n\t\t\treturn 'print';\n\t\tcase 1:\n\t\t\treturn 'screen';\n\t\tdefault:\n\t\t\treturn 'speech';\n\t}\n};\nvar $rtfeldman$elm_css$Css$Structure$Output$mediaQueryToString = function (mediaQuery) {\n\tvar prefixWith = F3(\n\t\tfunction (str, mediaType, expressions) {\n\t\t\treturn str + (' ' + A2(\n\t\t\t\t$elm$core$String$join,\n\t\t\t\t' and ',\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t$rtfeldman$elm_css$Css$Structure$Output$mediaTypeToString(mediaType),\n\t\t\t\t\tA2($elm$core$List$map, $rtfeldman$elm_css$Css$Structure$Output$mediaExpressionToString, expressions))));\n\t\t});\n\tswitch (mediaQuery.$) {\n\t\tcase 0:\n\t\t\tvar expressions = mediaQuery.a;\n\t\t\treturn A3($rtfeldman$elm_css$Css$String$mapJoin, $rtfeldman$elm_css$Css$Structure$Output$mediaExpressionToString, ' and ', expressions);\n\t\tcase 1:\n\t\t\tvar mediaType = mediaQuery.a;\n\t\t\tvar expressions = mediaQuery.b;\n\t\t\treturn A3(prefixWith, 'only', mediaType, expressions);\n\t\tcase 2:\n\t\t\tvar mediaType = mediaQuery.a;\n\t\t\tvar expressions = mediaQuery.b;\n\t\t\treturn A3(prefixWith, 'not', mediaType, expressions);\n\t\tdefault:\n\t\t\tvar str = mediaQuery.a;\n\t\t\treturn str;\n\t}\n};\nvar $rtfeldman$elm_css$Css$Structure$Output$importMediaQueryToString = F2(\n\tfunction (name, mediaQuery) {\n\t\treturn '@import \\\"' + (name + ($rtfeldman$elm_css$Css$Structure$Output$mediaQueryToString(mediaQuery) + '\\\"'));\n\t});\nvar $rtfeldman$elm_css$Css$Structure$Output$importToString = function (_v0) {\n\tvar name = _v0.a;\n\tvar mediaQueries = _v0.b;\n\treturn A3(\n\t\t$rtfeldman$elm_css$Css$String$mapJoin,\n\t\t$rtfeldman$elm_css$Css$Structure$Output$importMediaQueryToString(name),\n\t\t'\\n',\n\t\tmediaQueries);\n};\nvar $rtfeldman$elm_css$Css$Structure$Output$namespaceToString = function (_v0) {\n\tvar prefix = _v0.a;\n\tvar str = _v0.b;\n\treturn '@namespace ' + (prefix + ('\\\"' + (str + '\\\"')));\n};\nvar $rtfeldman$elm_css$Css$Structure$Output$emitProperties = function (properties) {\n\treturn A3(\n\t\t$rtfeldman$elm_css$Css$String$mapJoin,\n\t\tfunction (_v0) {\n\t\t\tvar prop = _v0;\n\t\t\treturn prop + ';';\n\t\t},\n\t\t'',\n\t\tproperties);\n};\nvar $elm$core$String$append = _String_append;\nvar $rtfeldman$elm_css$Css$Structure$Output$pseudoElementToString = function (_v0) {\n\tvar str = _v0;\n\treturn '::' + str;\n};\nvar $rtfeldman$elm_css$Css$Structure$Output$combinatorToString = function (combinator) {\n\tswitch (combinator) {\n\t\tcase 0:\n\t\t\treturn '+';\n\t\tcase 1:\n\t\t\treturn '~';\n\t\tcase 2:\n\t\t\treturn '>';\n\t\tdefault:\n\t\t\treturn '';\n\t}\n};\nvar $rtfeldman$elm_css$Css$Structure$Output$repeatableSimpleSelectorToString = function (repeatableSimpleSelector) {\n\tswitch (repeatableSimpleSelector.$) {\n\t\tcase 0:\n\t\t\tvar str = repeatableSimpleSelector.a;\n\t\t\treturn '.' + str;\n\t\tcase 1:\n\t\t\tvar str = repeatableSimpleSelector.a;\n\t\t\treturn '#' + str;\n\t\tcase 2:\n\t\t\tvar str = repeatableSimpleSelector.a;\n\t\t\treturn ':' + str;\n\t\tdefault:\n\t\t\tvar str = repeatableSimpleSelector.a;\n\t\t\treturn '[' + (str + ']');\n\t}\n};\nvar $rtfeldman$elm_css$Css$Structure$Output$simpleSelectorSequenceToString = function (simpleSelectorSequence) {\n\tswitch (simpleSelectorSequence.$) {\n\t\tcase 0:\n\t\t\tvar str = simpleSelectorSequence.a;\n\t\t\tvar repeatableSimpleSelectors = simpleSelectorSequence.b;\n\t\t\treturn _Utils_ap(\n\t\t\t\tstr,\n\t\t\t\tA3($rtfeldman$elm_css$Css$String$mapJoin, $rtfeldman$elm_css$Css$Structure$Output$repeatableSimpleSelectorToString, '', repeatableSimpleSelectors));\n\t\tcase 1:\n\t\t\tvar repeatableSimpleSelectors = simpleSelectorSequence.a;\n\t\t\treturn $elm$core$List$isEmpty(repeatableSimpleSelectors) ? '*' : A3($rtfeldman$elm_css$Css$String$mapJoin, $rtfeldman$elm_css$Css$Structure$Output$repeatableSimpleSelectorToString, '', repeatableSimpleSelectors);\n\t\tdefault:\n\t\t\tvar str = simpleSelectorSequence.a;\n\t\t\tvar repeatableSimpleSelectors = simpleSelectorSequence.b;\n\t\t\treturn _Utils_ap(\n\t\t\t\tstr,\n\t\t\t\tA3($rtfeldman$elm_css$Css$String$mapJoin, $rtfeldman$elm_css$Css$Structure$Output$repeatableSimpleSelectorToString, '', repeatableSimpleSelectors));\n\t}\n};\nvar $rtfeldman$elm_css$Css$Structure$Output$selectorChainToString = function (_v0) {\n\tvar combinator = _v0.a;\n\tvar sequence = _v0.b;\n\treturn $rtfeldman$elm_css$Css$Structure$Output$combinatorToString(combinator) + (' ' + $rtfeldman$elm_css$Css$Structure$Output$simpleSelectorSequenceToString(sequence));\n};\nvar $rtfeldman$elm_css$Css$Structure$Output$selectorToString = function (_v0) {\n\tvar simpleSelectorSequence = _v0.a;\n\tvar chain = _v0.b;\n\tvar pseudoElement = _v0.c;\n\tvar segments = A2(\n\t\t$elm$core$List$cons,\n\t\t$rtfeldman$elm_css$Css$Structure$Output$simpleSelectorSequenceToString(simpleSelectorSequence),\n\t\tA2($elm$core$List$map, $rtfeldman$elm_css$Css$Structure$Output$selectorChainToString, chain));\n\tvar pseudoElementsString = A2(\n\t\t$elm$core$Maybe$withDefault,\n\t\t'',\n\t\tA2($elm$core$Maybe$map, $rtfeldman$elm_css$Css$Structure$Output$pseudoElementToString, pseudoElement));\n\treturn A2(\n\t\t$elm$core$String$append,\n\t\tA2($elm$core$String$join, ' ', segments),\n\t\tpseudoElementsString);\n};\nvar $rtfeldman$elm_css$Css$Structure$Output$prettyPrintStyleBlock = function (_v0) {\n\tvar firstSelector = _v0.a;\n\tvar otherSelectors = _v0.b;\n\tvar properties = _v0.c;\n\tvar selectorStr = A3(\n\t\t$rtfeldman$elm_css$Css$String$mapJoin,\n\t\t$rtfeldman$elm_css$Css$Structure$Output$selectorToString,\n\t\t',',\n\t\tA2($elm$core$List$cons, firstSelector, otherSelectors));\n\treturn selectorStr + ('{' + ($rtfeldman$elm_css$Css$Structure$Output$emitProperties(properties) + '}'));\n};\nvar $rtfeldman$elm_css$Css$Structure$Output$prettyPrintDeclaration = function (decl) {\n\tswitch (decl.$) {\n\t\tcase 0:\n\t\t\tvar styleBlock = decl.a;\n\t\t\treturn $rtfeldman$elm_css$Css$Structure$Output$prettyPrintStyleBlock(styleBlock);\n\t\tcase 1:\n\t\t\tvar mediaQueries = decl.a;\n\t\t\tvar styleBlocks = decl.b;\n\t\t\tvar query = A3($rtfeldman$elm_css$Css$String$mapJoin, $rtfeldman$elm_css$Css$Structure$Output$mediaQueryToString, ', ', mediaQueries);\n\t\t\tvar blocks = A3($rtfeldman$elm_css$Css$String$mapJoin, $rtfeldman$elm_css$Css$Structure$Output$prettyPrintStyleBlock, '\\n', styleBlocks);\n\t\t\treturn '@media ' + (query + ('{' + (blocks + '}')));\n\t\tcase 2:\n\t\t\treturn 'TODO';\n\t\tcase 3:\n\t\t\treturn 'TODO';\n\t\tcase 4:\n\t\t\treturn 'TODO';\n\t\tcase 5:\n\t\t\treturn 'TODO';\n\t\tcase 6:\n\t\t\tvar name = decl.a.cB;\n\t\t\tvar declaration = decl.a.cn;\n\t\t\treturn '@keyframes ' + (name + ('{' + (declaration + '}')));\n\t\tcase 7:\n\t\t\treturn 'TODO';\n\t\tcase 8:\n\t\t\treturn 'TODO';\n\t\tdefault:\n\t\t\treturn 'TODO';\n\t}\n};\nvar $rtfeldman$elm_css$Css$Structure$Output$prettyPrint = function (_v0) {\n\tvar charset = _v0.bA;\n\tvar imports = _v0.bL;\n\tvar namespaces = _v0.bR;\n\tvar declarations = _v0.co;\n\treturn $rtfeldman$elm_css$Css$Structure$Output$charsetToString(charset) + (A3($rtfeldman$elm_css$Css$String$mapJoin, $rtfeldman$elm_css$Css$Structure$Output$importToString, '\\n', imports) + (A3($rtfeldman$elm_css$Css$String$mapJoin, $rtfeldman$elm_css$Css$Structure$Output$namespaceToString, '\\n', namespaces) + (A3($rtfeldman$elm_css$Css$String$mapJoin, $rtfeldman$elm_css$Css$Structure$Output$prettyPrintDeclaration, '\\n', declarations) + '')));\n};\nvar $elm$core$List$concat = function (lists) {\n\treturn A3($elm$core$List$foldr, $elm$core$List$append, _List_Nil, lists);\n};\nvar $elm$core$List$concatMap = F2(\n\tfunction (f, list) {\n\t\treturn $elm$core$List$concat(\n\t\t\tA2($elm$core$List$map, f, list));\n\t});\nvar $rtfeldman$elm_css$Css$Structure$CounterStyle = function (a) {\n\treturn {$: 8, a: a};\n};\nvar $rtfeldman$elm_css$Css$Structure$FontFace = function (a) {\n\treturn {$: 5, a: a};\n};\nvar $rtfeldman$elm_css$Css$Structure$PageRule = function (a) {\n\treturn {$: 4, a: a};\n};\nvar $rtfeldman$elm_css$Css$Structure$Selector = F3(\n\tfunction (a, b, c) {\n\t\treturn {$: 0, a: a, b: b, c: c};\n\t});\nvar $rtfeldman$elm_css$Css$Structure$StyleBlock = F3(\n\tfunction (a, b, c) {\n\t\treturn {$: 0, a: a, b: b, c: c};\n\t});\nvar $rtfeldman$elm_css$Css$Structure$StyleBlockDeclaration = function (a) {\n\treturn {$: 0, a: a};\n};\nvar $rtfeldman$elm_css$Css$Structure$SupportsRule = F2(\n\tfunction (a, b) {\n\t\treturn {$: 2, a: a, b: b};\n\t});\nvar $rtfeldman$elm_css$Css$Structure$Viewport = function (a) {\n\treturn {$: 7, a: a};\n};\nvar $rtfeldman$elm_css$Css$Structure$MediaRule = F2(\n\tfunction (a, b) {\n\t\treturn {$: 1, a: a, b: b};\n\t});\nvar $rtfeldman$elm_css$Css$Structure$mapLast = F2(\n\tfunction (update, list) {\n\t\tif (!list.b) {\n\t\t\treturn list;\n\t\t} else {\n\t\t\tif (!list.b.b) {\n\t\t\t\tvar only = list.a;\n\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tupdate(only)\n\t\t\t\t\t]);\n\t\t\t} else {\n\t\t\t\tvar first = list.a;\n\t\t\t\tvar rest = list.b;\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\tfirst,\n\t\t\t\t\tA2($rtfeldman$elm_css$Css$Structure$mapLast, update, rest));\n\t\t\t}\n\t\t}\n\t});\nvar $rtfeldman$elm_css$Css$Structure$withPropertyAppended = F2(\n\tfunction (property, _v0) {\n\t\tvar firstSelector = _v0.a;\n\t\tvar otherSelectors = _v0.b;\n\t\tvar properties = _v0.c;\n\t\treturn A3(\n\t\t\t$rtfeldman$elm_css$Css$Structure$StyleBlock,\n\t\t\tfirstSelector,\n\t\t\totherSelectors,\n\t\t\t_Utils_ap(\n\t\t\t\tproperties,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[property])));\n\t});\nvar $rtfeldman$elm_css$Css$Structure$appendProperty = F2(\n\tfunction (property, declarations) {\n\t\tif (!declarations.b) {\n\t\t\treturn declarations;\n\t\t} else {\n\t\t\tif (!declarations.b.b) {\n\t\t\t\tswitch (declarations.a.$) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tvar styleBlock = declarations.a.a;\n\t\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$rtfeldman$elm_css$Css$Structure$StyleBlockDeclaration(\n\t\t\t\t\t\t\t\tA2($rtfeldman$elm_css$Css$Structure$withPropertyAppended, property, styleBlock))\n\t\t\t\t\t\t\t]);\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tvar _v1 = declarations.a;\n\t\t\t\t\t\tvar mediaQueries = _v1.a;\n\t\t\t\t\t\tvar styleBlocks = _v1.b;\n\t\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$rtfeldman$elm_css$Css$Structure$MediaRule,\n\t\t\t\t\t\t\t\tmediaQueries,\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$rtfeldman$elm_css$Css$Structure$mapLast,\n\t\t\t\t\t\t\t\t\t$rtfeldman$elm_css$Css$Structure$withPropertyAppended(property),\n\t\t\t\t\t\t\t\t\tstyleBlocks))\n\t\t\t\t\t\t\t]);\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn declarations;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar first = declarations.a;\n\t\t\t\tvar rest = declarations.b;\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\tfirst,\n\t\t\t\t\tA2($rtfeldman$elm_css$Css$Structure$appendProperty, property, rest));\n\t\t\t}\n\t\t}\n\t});\nvar $rtfeldman$elm_css$Css$Structure$appendToLastSelector = F2(\n\tfunction (f, styleBlock) {\n\t\tif (!styleBlock.b.b) {\n\t\t\tvar only = styleBlock.a;\n\t\t\tvar properties = styleBlock.c;\n\t\t\treturn _List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA3($rtfeldman$elm_css$Css$Structure$StyleBlock, only, _List_Nil, properties),\n\t\t\t\t\tA3(\n\t\t\t\t\t$rtfeldman$elm_css$Css$Structure$StyleBlock,\n\t\t\t\t\tf(only),\n\t\t\t\t\t_List_Nil,\n\t\t\t\t\t_List_Nil)\n\t\t\t\t]);\n\t\t} else {\n\t\t\tvar first = styleBlock.a;\n\t\t\tvar rest = styleBlock.b;\n\t\t\tvar properties = styleBlock.c;\n\t\t\tvar newRest = A2($elm$core$List$map, f, rest);\n\t\t\tvar newFirst = f(first);\n\t\t\treturn _List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA3($rtfeldman$elm_css$Css$Structure$StyleBlock, first, rest, properties),\n\t\t\t\t\tA3($rtfeldman$elm_css$Css$Structure$StyleBlock, newFirst, newRest, _List_Nil)\n\t\t\t\t]);\n\t\t}\n\t});\nvar $rtfeldman$elm_css$Css$Structure$applyPseudoElement = F2(\n\tfunction (pseudo, _v0) {\n\t\tvar sequence = _v0.a;\n\t\tvar selectors = _v0.b;\n\t\treturn A3(\n\t\t\t$rtfeldman$elm_css$Css$Structure$Selector,\n\t\t\tsequence,\n\t\t\tselectors,\n\t\t\t$elm$core$Maybe$Just(pseudo));\n\t});\nvar $rtfeldman$elm_css$Css$Structure$appendPseudoElementToLastSelector = F2(\n\tfunction (pseudo, styleBlock) {\n\t\treturn A2(\n\t\t\t$rtfeldman$elm_css$Css$Structure$appendToLastSelector,\n\t\t\t$rtfeldman$elm_css$Css$Structure$applyPseudoElement(pseudo),\n\t\t\tstyleBlock);\n\t});\nvar $rtfeldman$elm_css$Css$Structure$CustomSelector = F2(\n\tfunction (a, b) {\n\t\treturn {$: 2, a: a, b: b};\n\t});\nvar $rtfeldman$elm_css$Css$Structure$TypeSelectorSequence = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar $rtfeldman$elm_css$Css$Structure$UniversalSelectorSequence = function (a) {\n\treturn {$: 1, a: a};\n};\nvar $rtfeldman$elm_css$Css$Structure$appendRepeatable = F2(\n\tfunction (selector, sequence) {\n\t\tswitch (sequence.$) {\n\t\t\tcase 0:\n\t\t\t\tvar typeSelector = sequence.a;\n\t\t\t\tvar list = sequence.b;\n\t\t\t\treturn A2(\n\t\t\t\t\t$rtfeldman$elm_css$Css$Structure$TypeSelectorSequence,\n\t\t\t\t\ttypeSelector,\n\t\t\t\t\t_Utils_ap(\n\t\t\t\t\t\tlist,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[selector])));\n\t\t\tcase 1:\n\t\t\t\tvar list = sequence.a;\n\t\t\t\treturn $rtfeldman$elm_css$Css$Structure$UniversalSelectorSequence(\n\t\t\t\t\t_Utils_ap(\n\t\t\t\t\t\tlist,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[selector])));\n\t\t\tdefault:\n\t\t\t\tvar str = sequence.a;\n\t\t\t\tvar list = sequence.b;\n\t\t\t\treturn A2(\n\t\t\t\t\t$rtfeldman$elm_css$Css$Structure$CustomSelector,\n\t\t\t\t\tstr,\n\t\t\t\t\t_Utils_ap(\n\t\t\t\t\t\tlist,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[selector])));\n\t\t}\n\t});\nvar $rtfeldman$elm_css$Css$Structure$appendRepeatableWithCombinator = F2(\n\tfunction (selector, list) {\n\t\tif (!list.b) {\n\t\t\treturn _List_Nil;\n\t\t} else {\n\t\t\tif (!list.b.b) {\n\t\t\t\tvar _v1 = list.a;\n\t\t\t\tvar combinator = _v1.a;\n\t\t\t\tvar sequence = _v1.b;\n\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\tcombinator,\n\t\t\t\t\t\tA2($rtfeldman$elm_css$Css$Structure$appendRepeatable, selector, sequence))\n\t\t\t\t\t]);\n\t\t\t} else {\n\t\t\t\tvar first = list.a;\n\t\t\t\tvar rest = list.b;\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\tfirst,\n\t\t\t\t\tA2($rtfeldman$elm_css$Css$Structure$appendRepeatableWithCombinator, selector, rest));\n\t\t\t}\n\t\t}\n\t});\nvar $rtfeldman$elm_css$Css$Structure$appendRepeatableSelector = F2(\n\tfunction (repeatableSimpleSelector, selector) {\n\t\tif (!selector.b.b) {\n\t\t\tvar sequence = selector.a;\n\t\t\tvar pseudoElement = selector.c;\n\t\t\treturn A3(\n\t\t\t\t$rtfeldman$elm_css$Css$Structure$Selector,\n\t\t\t\tA2($rtfeldman$elm_css$Css$Structure$appendRepeatable, repeatableSimpleSelector, sequence),\n\t\t\t\t_List_Nil,\n\t\t\t\tpseudoElement);\n\t\t} else {\n\t\t\tvar firstSelector = selector.a;\n\t\t\tvar tuples = selector.b;\n\t\t\tvar pseudoElement = selector.c;\n\t\t\treturn A3(\n\t\t\t\t$rtfeldman$elm_css$Css$Structure$Selector,\n\t\t\t\tfirstSelector,\n\t\t\t\tA2($rtfeldman$elm_css$Css$Structure$appendRepeatableWithCombinator, repeatableSimpleSelector, tuples),\n\t\t\t\tpseudoElement);\n\t\t}\n\t});\nvar $rtfeldman$elm_css$Css$Structure$appendRepeatableToLastSelector = F2(\n\tfunction (selector, styleBlock) {\n\t\treturn A2(\n\t\t\t$rtfeldman$elm_css$Css$Structure$appendToLastSelector,\n\t\t\t$rtfeldman$elm_css$Css$Structure$appendRepeatableSelector(selector),\n\t\t\tstyleBlock);\n\t});\nvar $rtfeldman$elm_css$Css$Preprocess$Resolve$collectSelectors = function (declarations) {\n\tcollectSelectors:\n\twhile (true) {\n\t\tif (!declarations.b) {\n\t\t\treturn _List_Nil;\n\t\t} else {\n\t\t\tif (!declarations.a.$) {\n\t\t\t\tvar _v1 = declarations.a.a;\n\t\t\t\tvar firstSelector = _v1.a;\n\t\t\t\tvar otherSelectors = _v1.b;\n\t\t\t\tvar rest = declarations.b;\n\t\t\t\treturn _Utils_ap(\n\t\t\t\t\tA2($elm$core$List$cons, firstSelector, otherSelectors),\n\t\t\t\t\t$rtfeldman$elm_css$Css$Preprocess$Resolve$collectSelectors(rest));\n\t\t\t} else {\n\t\t\t\tvar rest = declarations.b;\n\t\t\t\tvar $temp$declarations = rest;\n\t\t\t\tdeclarations = $temp$declarations;\n\t\t\t\tcontinue collectSelectors;\n\t\t\t}\n\t\t}\n\t}\n};\nvar $rtfeldman$elm_css$Css$Structure$DocumentRule = F5(\n\tfunction (a, b, c, d, e) {\n\t\treturn {$: 3, a: a, b: b, c: c, d: d, e: e};\n\t});\nvar $rtfeldman$elm_css$Css$Structure$concatMapLastStyleBlock = F2(\n\tfunction (update, declarations) {\n\t\t_v0$12:\n\t\twhile (true) {\n\t\t\tif (!declarations.b) {\n\t\t\t\treturn declarations;\n\t\t\t} else {\n\t\t\t\tif (!declarations.b.b) {\n\t\t\t\t\tswitch (declarations.a.$) {\n\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\tvar styleBlock = declarations.a.a;\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\t\t\t$rtfeldman$elm_css$Css$Structure$StyleBlockDeclaration,\n\t\t\t\t\t\t\t\tupdate(styleBlock));\n\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\tif (declarations.a.b.b) {\n\t\t\t\t\t\t\t\tif (!declarations.a.b.b.b) {\n\t\t\t\t\t\t\t\t\tvar _v1 = declarations.a;\n\t\t\t\t\t\t\t\t\tvar mediaQueries = _v1.a;\n\t\t\t\t\t\t\t\t\tvar _v2 = _v1.b;\n\t\t\t\t\t\t\t\t\tvar styleBlock = _v2.a;\n\t\t\t\t\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t$rtfeldman$elm_css$Css$Structure$MediaRule,\n\t\t\t\t\t\t\t\t\t\t\tmediaQueries,\n\t\t\t\t\t\t\t\t\t\t\tupdate(styleBlock))\n\t\t\t\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tvar _v3 = declarations.a;\n\t\t\t\t\t\t\t\t\tvar mediaQueries = _v3.a;\n\t\t\t\t\t\t\t\t\tvar _v4 = _v3.b;\n\t\t\t\t\t\t\t\t\tvar first = _v4.a;\n\t\t\t\t\t\t\t\t\tvar rest = _v4.b;\n\t\t\t\t\t\t\t\t\tvar _v5 = A2(\n\t\t\t\t\t\t\t\t\t\t$rtfeldman$elm_css$Css$Structure$concatMapLastStyleBlock,\n\t\t\t\t\t\t\t\t\t\tupdate,\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\tA2($rtfeldman$elm_css$Css$Structure$MediaRule, mediaQueries, rest)\n\t\t\t\t\t\t\t\t\t\t\t]));\n\t\t\t\t\t\t\t\t\tif ((_v5.b && (_v5.a.$ === 1)) && (!_v5.b.b)) {\n\t\t\t\t\t\t\t\t\t\tvar _v6 = _v5.a;\n\t\t\t\t\t\t\t\t\t\tvar newMediaQueries = _v6.a;\n\t\t\t\t\t\t\t\t\t\tvar newStyleBlocks = _v6.b;\n\t\t\t\t\t\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t$rtfeldman$elm_css$Css$Structure$MediaRule,\n\t\t\t\t\t\t\t\t\t\t\t\tnewMediaQueries,\n\t\t\t\t\t\t\t\t\t\t\t\tA2($elm$core$List$cons, first, newStyleBlocks))\n\t\t\t\t\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tvar newDeclarations = _v5;\n\t\t\t\t\t\t\t\t\t\treturn newDeclarations;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tbreak _v0$12;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\tvar _v7 = declarations.a;\n\t\t\t\t\t\t\tvar str = _v7.a;\n\t\t\t\t\t\t\tvar nestedDeclarations = _v7.b;\n\t\t\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$rtfeldman$elm_css$Css$Structure$SupportsRule,\n\t\t\t\t\t\t\t\t\tstr,\n\t\t\t\t\t\t\t\t\tA2($rtfeldman$elm_css$Css$Structure$concatMapLastStyleBlock, update, nestedDeclarations))\n\t\t\t\t\t\t\t\t]);\n\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\tvar _v8 = declarations.a;\n\t\t\t\t\t\t\tvar str1 = _v8.a;\n\t\t\t\t\t\t\tvar str2 = _v8.b;\n\t\t\t\t\t\t\tvar str3 = _v8.c;\n\t\t\t\t\t\t\tvar str4 = _v8.d;\n\t\t\t\t\t\t\tvar styleBlock = _v8.e;\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\t\t\tA4($rtfeldman$elm_css$Css$Structure$DocumentRule, str1, str2, str3, str4),\n\t\t\t\t\t\t\t\tupdate(styleBlock));\n\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\treturn declarations;\n\t\t\t\t\t\tcase 5:\n\t\t\t\t\t\t\treturn declarations;\n\t\t\t\t\t\tcase 6:\n\t\t\t\t\t\t\treturn declarations;\n\t\t\t\t\t\tcase 7:\n\t\t\t\t\t\t\treturn declarations;\n\t\t\t\t\t\tcase 8:\n\t\t\t\t\t\t\treturn declarations;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn declarations;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tbreak _v0$12;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tvar first = declarations.a;\n\t\tvar rest = declarations.b;\n\t\treturn A2(\n\t\t\t$elm$core$List$cons,\n\t\t\tfirst,\n\t\t\tA2($rtfeldman$elm_css$Css$Structure$concatMapLastStyleBlock, update, rest));\n\t});\nvar $elm$core$List$head = function (list) {\n\tif (list.b) {\n\t\tvar x = list.a;\n\t\tvar xs = list.b;\n\t\treturn $elm$core$Maybe$Just(x);\n\t} else {\n\t\treturn $elm$core$Maybe$Nothing;\n\t}\n};\nvar $rtfeldman$elm_css$Css$Preprocess$Resolve$last = function (list) {\n\tlast:\n\twhile (true) {\n\t\tif (!list.b) {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tif (!list.b.b) {\n\t\t\t\tvar singleton = list.a;\n\t\t\t\treturn $elm$core$Maybe$Just(singleton);\n\t\t\t} else {\n\t\t\t\tvar rest = list.b;\n\t\t\t\tvar $temp$list = rest;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tcontinue last;\n\t\t\t}\n\t\t}\n\t}\n};\nvar $rtfeldman$elm_css$Css$Preprocess$Resolve$lastDeclaration = function (declarations) {\n\tlastDeclaration:\n\twhile (true) {\n\t\tif (!declarations.b) {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tif (!declarations.b.b) {\n\t\t\t\tvar x = declarations.a;\n\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[x]));\n\t\t\t} else {\n\t\t\t\tvar xs = declarations.b;\n\t\t\t\tvar $temp$declarations = xs;\n\t\t\t\tdeclarations = $temp$declarations;\n\t\t\t\tcontinue lastDeclaration;\n\t\t\t}\n\t\t}\n\t}\n};\nvar $rtfeldman$elm_css$Css$Preprocess$Resolve$oneOf = function (maybes) {\n\toneOf:\n\twhile (true) {\n\t\tif (!maybes.b) {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar maybe = maybes.a;\n\t\t\tvar rest = maybes.b;\n\t\t\tif (maybe.$ === 1) {\n\t\t\t\tvar $temp$maybes = rest;\n\t\t\t\tmaybes = $temp$maybes;\n\t\t\t\tcontinue oneOf;\n\t\t\t} else {\n\t\t\t\treturn maybe;\n\t\t\t}\n\t\t}\n\t}\n};\nvar $rtfeldman$elm_css$Css$Structure$FontFeatureValues = function (a) {\n\treturn {$: 9, a: a};\n};\nvar $rtfeldman$elm_css$Css$Preprocess$Resolve$resolveFontFeatureValues = function (tuples) {\n\tvar expandTuples = function (tuplesToExpand) {\n\t\tif (!tuplesToExpand.b) {\n\t\t\treturn _List_Nil;\n\t\t} else {\n\t\t\tvar properties = tuplesToExpand.a;\n\t\t\tvar rest = tuplesToExpand.b;\n\t\t\treturn A2(\n\t\t\t\t$elm$core$List$cons,\n\t\t\t\tproperties,\n\t\t\t\texpandTuples(rest));\n\t\t}\n\t};\n\tvar newTuples = expandTuples(tuples);\n\treturn _List_fromArray(\n\t\t[\n\t\t\t$rtfeldman$elm_css$Css$Structure$FontFeatureValues(newTuples)\n\t\t]);\n};\nvar $rtfeldman$elm_css$Css$Structure$styleBlockToMediaRule = F2(\n\tfunction (mediaQueries, declaration) {\n\t\tif (!declaration.$) {\n\t\t\tvar styleBlock = declaration.a;\n\t\t\treturn A2(\n\t\t\t\t$rtfeldman$elm_css$Css$Structure$MediaRule,\n\t\t\t\tmediaQueries,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[styleBlock]));\n\t\t} else {\n\t\t\treturn declaration;\n\t\t}\n\t});\nvar $elm$core$List$tail = function (list) {\n\tif (list.b) {\n\t\tvar x = list.a;\n\t\tvar xs = list.b;\n\t\treturn $elm$core$Maybe$Just(xs);\n\t} else {\n\t\treturn $elm$core$Maybe$Nothing;\n\t}\n};\nvar $elm$core$List$takeReverse = F3(\n\tfunction (n, list, kept) {\n\t\ttakeReverse:\n\t\twhile (true) {\n\t\t\tif (n <= 0) {\n\t\t\t\treturn kept;\n\t\t\t} else {\n\t\t\t\tif (!list.b) {\n\t\t\t\t\treturn kept;\n\t\t\t\t} else {\n\t\t\t\t\tvar x = list.a;\n\t\t\t\t\tvar xs = list.b;\n\t\t\t\t\tvar $temp$n = n - 1,\n\t\t\t\t\t\t$temp$list = xs,\n\t\t\t\t\t\t$temp$kept = A2($elm$core$List$cons, x, kept);\n\t\t\t\t\tn = $temp$n;\n\t\t\t\t\tlist = $temp$list;\n\t\t\t\t\tkept = $temp$kept;\n\t\t\t\t\tcontinue takeReverse;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$List$takeTailRec = F2(\n\tfunction (n, list) {\n\t\treturn $elm$core$List$reverse(\n\t\t\tA3($elm$core$List$takeReverse, n, list, _List_Nil));\n\t});\nvar $elm$core$List$takeFast = F3(\n\tfunction (ctr, n, list) {\n\t\tif (n <= 0) {\n\t\t\treturn _List_Nil;\n\t\t} else {\n\t\t\tvar _v0 = _Utils_Tuple2(n, list);\n\t\t\t_v0$1:\n\t\t\twhile (true) {\n\t\t\t\t_v0$5:\n\t\t\t\twhile (true) {\n\t\t\t\t\tif (!_v0.b.b) {\n\t\t\t\t\t\treturn list;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (_v0.b.b.b) {\n\t\t\t\t\t\t\tswitch (_v0.a) {\n\t\t\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\t\t\tbreak _v0$1;\n\t\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\t\tvar _v2 = _v0.b;\n\t\t\t\t\t\t\t\t\tvar x = _v2.a;\n\t\t\t\t\t\t\t\t\tvar _v3 = _v2.b;\n\t\t\t\t\t\t\t\t\tvar y = _v3.a;\n\t\t\t\t\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[x, y]);\n\t\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t\tif (_v0.b.b.b.b) {\n\t\t\t\t\t\t\t\t\t\tvar _v4 = _v0.b;\n\t\t\t\t\t\t\t\t\t\tvar x = _v4.a;\n\t\t\t\t\t\t\t\t\t\tvar _v5 = _v4.b;\n\t\t\t\t\t\t\t\t\t\tvar y = _v5.a;\n\t\t\t\t\t\t\t\t\t\tvar _v6 = _v5.b;\n\t\t\t\t\t\t\t\t\t\tvar z = _v6.a;\n\t\t\t\t\t\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[x, y, z]);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tbreak _v0$5;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tif (_v0.b.b.b.b && _v0.b.b.b.b.b) {\n\t\t\t\t\t\t\t\t\t\tvar _v7 = _v0.b;\n\t\t\t\t\t\t\t\t\t\tvar x = _v7.a;\n\t\t\t\t\t\t\t\t\t\tvar _v8 = _v7.b;\n\t\t\t\t\t\t\t\t\t\tvar y = _v8.a;\n\t\t\t\t\t\t\t\t\t\tvar _v9 = _v8.b;\n\t\t\t\t\t\t\t\t\t\tvar z = _v9.a;\n\t\t\t\t\t\t\t\t\t\tvar _v10 = _v9.b;\n\t\t\t\t\t\t\t\t\t\tvar w = _v10.a;\n\t\t\t\t\t\t\t\t\t\tvar tl = _v10.b;\n\t\t\t\t\t\t\t\t\t\treturn (ctr > 1000) ? A2(\n\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\tx,\n\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\ty,\n\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\t\tz,\n\t\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tw,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2($elm$core$List$takeTailRec, n - 4, tl))))) : A2(\n\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\tx,\n\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\ty,\n\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\t\tz,\n\t\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tw,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tA3($elm$core$List$takeFast, ctr + 1, n - 4, tl)))));\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tbreak _v0$5;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (_v0.a === 1) {\n\t\t\t\t\t\t\t\tbreak _v0$1;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tbreak _v0$5;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn list;\n\t\t\t}\n\t\t\tvar _v1 = _v0.b;\n\t\t\tvar x = _v1.a;\n\t\t\treturn _List_fromArray(\n\t\t\t\t[x]);\n\t\t}\n\t});\nvar $elm$core$List$take = F2(\n\tfunction (n, list) {\n\t\treturn A3($elm$core$List$takeFast, 0, n, list);\n\t});\nvar $rtfeldman$elm_css$Css$Preprocess$Resolve$toDocumentRule = F5(\n\tfunction (str1, str2, str3, str4, declaration) {\n\t\tif (!declaration.$) {\n\t\t\tvar structureStyleBlock = declaration.a;\n\t\t\treturn A5($rtfeldman$elm_css$Css$Structure$DocumentRule, str1, str2, str3, str4, structureStyleBlock);\n\t\t} else {\n\t\t\treturn declaration;\n\t\t}\n\t});\nvar $rtfeldman$elm_css$Css$Preprocess$Resolve$toMediaRule = F2(\n\tfunction (mediaQueries, declaration) {\n\t\tswitch (declaration.$) {\n\t\t\tcase 0:\n\t\t\t\tvar structureStyleBlock = declaration.a;\n\t\t\t\treturn A2(\n\t\t\t\t\t$rtfeldman$elm_css$Css$Structure$MediaRule,\n\t\t\t\t\tmediaQueries,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[structureStyleBlock]));\n\t\t\tcase 1:\n\t\t\t\tvar newMediaQueries = declaration.a;\n\t\t\t\tvar structureStyleBlocks = declaration.b;\n\t\t\t\treturn A2(\n\t\t\t\t\t$rtfeldman$elm_css$Css$Structure$MediaRule,\n\t\t\t\t\t_Utils_ap(mediaQueries, newMediaQueries),\n\t\t\t\t\tstructureStyleBlocks);\n\t\t\tcase 2:\n\t\t\t\tvar str = declaration.a;\n\t\t\t\tvar declarations = declaration.b;\n\t\t\t\treturn A2(\n\t\t\t\t\t$rtfeldman$elm_css$Css$Structure$SupportsRule,\n\t\t\t\t\tstr,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\t$rtfeldman$elm_css$Css$Preprocess$Resolve$toMediaRule(mediaQueries),\n\t\t\t\t\t\tdeclarations));\n\t\t\tcase 3:\n\t\t\t\tvar str1 = declaration.a;\n\t\t\t\tvar str2 = declaration.b;\n\t\t\t\tvar str3 = declaration.c;\n\t\t\t\tvar str4 = declaration.d;\n\t\t\t\tvar structureStyleBlock = declaration.e;\n\t\t\t\treturn A5($rtfeldman$elm_css$Css$Structure$DocumentRule, str1, str2, str3, str4, structureStyleBlock);\n\t\t\tcase 4:\n\t\t\t\treturn declaration;\n\t\t\tcase 5:\n\t\t\t\treturn declaration;\n\t\t\tcase 6:\n\t\t\t\treturn declaration;\n\t\t\tcase 7:\n\t\t\t\treturn declaration;\n\t\t\tcase 8:\n\t\t\t\treturn declaration;\n\t\t\tdefault:\n\t\t\t\treturn declaration;\n\t\t}\n\t});\nvar $rtfeldman$elm_css$Css$Preprocess$unwrapSnippet = function (_v0) {\n\tvar declarations = _v0;\n\treturn declarations;\n};\nvar $rtfeldman$elm_css$Css$Preprocess$Resolve$applyNestedStylesToLast = F4(\n\tfunction (nestedStyles, rest, f, declarations) {\n\t\tvar withoutParent = function (decls) {\n\t\t\treturn A2(\n\t\t\t\t$elm$core$Maybe$withDefault,\n\t\t\t\t_List_Nil,\n\t\t\t\t$elm$core$List$tail(decls));\n\t\t};\n\t\tvar nextResult = A2(\n\t\t\t$rtfeldman$elm_css$Css$Preprocess$Resolve$applyStyles,\n\t\t\trest,\n\t\t\tA2(\n\t\t\t\t$elm$core$Maybe$withDefault,\n\t\t\t\t_List_Nil,\n\t\t\t\t$rtfeldman$elm_css$Css$Preprocess$Resolve$lastDeclaration(declarations)));\n\t\tvar newDeclarations = function () {\n\t\t\tvar _v14 = _Utils_Tuple2(\n\t\t\t\t$elm$core$List$head(nextResult),\n\t\t\t\t$rtfeldman$elm_css$Css$Preprocess$Resolve$last(declarations));\n\t\t\tif ((!_v14.a.$) && (!_v14.b.$)) {\n\t\t\t\tvar nextResultParent = _v14.a.a;\n\t\t\t\tvar originalParent = _v14.b.a;\n\t\t\t\treturn _Utils_ap(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$take,\n\t\t\t\t\t\t$elm$core$List$length(declarations) - 1,\n\t\t\t\t\t\tdeclarations),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t(!_Utils_eq(originalParent, nextResultParent)) ? nextResultParent : originalParent\n\t\t\t\t\t\t]));\n\t\t\t} else {\n\t\t\t\treturn declarations;\n\t\t\t}\n\t\t}();\n\t\tvar insertStylesToNestedDecl = function (lastDecl) {\n\t\t\treturn $elm$core$List$concat(\n\t\t\t\tA2(\n\t\t\t\t\t$rtfeldman$elm_css$Css$Structure$mapLast,\n\t\t\t\t\t$rtfeldman$elm_css$Css$Preprocess$Resolve$applyStyles(nestedStyles),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\t$elm$core$List$singleton,\n\t\t\t\t\t\tA2($rtfeldman$elm_css$Css$Structure$concatMapLastStyleBlock, f, lastDecl))));\n\t\t};\n\t\tvar initialResult = A2(\n\t\t\t$elm$core$Maybe$withDefault,\n\t\t\t_List_Nil,\n\t\t\tA2(\n\t\t\t\t$elm$core$Maybe$map,\n\t\t\t\tinsertStylesToNestedDecl,\n\t\t\t\t$rtfeldman$elm_css$Css$Preprocess$Resolve$lastDeclaration(declarations)));\n\t\treturn _Utils_ap(\n\t\t\tnewDeclarations,\n\t\t\t_Utils_ap(\n\t\t\t\twithoutParent(initialResult),\n\t\t\t\twithoutParent(nextResult)));\n\t});\nvar $rtfeldman$elm_css$Css$Preprocess$Resolve$applyStyles = F2(\n\tfunction (styles, declarations) {\n\t\tif (!styles.b) {\n\t\t\treturn declarations;\n\t\t} else {\n\t\t\tswitch (styles.a.$) {\n\t\t\t\tcase 0:\n\t\t\t\t\tvar property = styles.a.a;\n\t\t\t\t\tvar rest = styles.b;\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\t$rtfeldman$elm_css$Css$Preprocess$Resolve$applyStyles,\n\t\t\t\t\t\trest,\n\t\t\t\t\t\tA2($rtfeldman$elm_css$Css$Structure$appendProperty, property, declarations));\n\t\t\t\tcase 1:\n\t\t\t\t\tvar _v4 = styles.a;\n\t\t\t\t\tvar selector = _v4.a;\n\t\t\t\t\tvar nestedStyles = _v4.b;\n\t\t\t\t\tvar rest = styles.b;\n\t\t\t\t\treturn A4(\n\t\t\t\t\t\t$rtfeldman$elm_css$Css$Preprocess$Resolve$applyNestedStylesToLast,\n\t\t\t\t\t\tnestedStyles,\n\t\t\t\t\t\trest,\n\t\t\t\t\t\t$rtfeldman$elm_css$Css$Structure$appendRepeatableToLastSelector(selector),\n\t\t\t\t\t\tdeclarations);\n\t\t\t\tcase 2:\n\t\t\t\t\tvar _v5 = styles.a;\n\t\t\t\t\tvar selectorCombinator = _v5.a;\n\t\t\t\t\tvar snippets = _v5.b;\n\t\t\t\t\tvar rest = styles.b;\n\t\t\t\t\tvar chain = F2(\n\t\t\t\t\t\tfunction (_v9, _v10) {\n\t\t\t\t\t\t\tvar originalSequence = _v9.a;\n\t\t\t\t\t\t\tvar originalTuples = _v9.b;\n\t\t\t\t\t\t\tvar originalPseudoElement = _v9.c;\n\t\t\t\t\t\t\tvar newSequence = _v10.a;\n\t\t\t\t\t\t\tvar newTuples = _v10.b;\n\t\t\t\t\t\t\tvar newPseudoElement = _v10.c;\n\t\t\t\t\t\t\treturn A3(\n\t\t\t\t\t\t\t\t$rtfeldman$elm_css$Css$Structure$Selector,\n\t\t\t\t\t\t\t\toriginalSequence,\n\t\t\t\t\t\t\t\t_Utils_ap(\n\t\t\t\t\t\t\t\t\toriginalTuples,\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t_Utils_Tuple2(selectorCombinator, newSequence),\n\t\t\t\t\t\t\t\t\t\tnewTuples)),\n\t\t\t\t\t\t\t\t$rtfeldman$elm_css$Css$Preprocess$Resolve$oneOf(\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[newPseudoElement, originalPseudoElement])));\n\t\t\t\t\t\t});\n\t\t\t\t\tvar expandDeclaration = function (declaration) {\n\t\t\t\t\t\tswitch (declaration.$) {\n\t\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\t\tvar _v7 = declaration.a;\n\t\t\t\t\t\t\t\tvar firstSelector = _v7.a;\n\t\t\t\t\t\t\t\tvar otherSelectors = _v7.b;\n\t\t\t\t\t\t\t\tvar nestedStyles = _v7.c;\n\t\t\t\t\t\t\t\tvar newSelectors = A2(\n\t\t\t\t\t\t\t\t\t$elm$core$List$concatMap,\n\t\t\t\t\t\t\t\t\tfunction (originalSelector) {\n\t\t\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\t\t\t\t\t\tchain(originalSelector),\n\t\t\t\t\t\t\t\t\t\t\tA2($elm$core$List$cons, firstSelector, otherSelectors));\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t$rtfeldman$elm_css$Css$Preprocess$Resolve$collectSelectors(declarations));\n\t\t\t\t\t\t\t\tvar newDeclarations = function () {\n\t\t\t\t\t\t\t\t\tif (!newSelectors.b) {\n\t\t\t\t\t\t\t\t\t\treturn _List_Nil;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tvar first = newSelectors.a;\n\t\t\t\t\t\t\t\t\t\tvar remainder = newSelectors.b;\n\t\t\t\t\t\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t$rtfeldman$elm_css$Css$Structure$StyleBlockDeclaration(\n\t\t\t\t\t\t\t\t\t\t\t\tA3($rtfeldman$elm_css$Css$Structure$StyleBlock, first, remainder, _List_Nil))\n\t\t\t\t\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}();\n\t\t\t\t\t\t\t\treturn A2($rtfeldman$elm_css$Css$Preprocess$Resolve$applyStyles, nestedStyles, newDeclarations);\n\t\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\t\tvar mediaQueries = declaration.a;\n\t\t\t\t\t\t\t\tvar styleBlocks = declaration.b;\n\t\t\t\t\t\t\t\treturn A2($rtfeldman$elm_css$Css$Preprocess$Resolve$resolveMediaRule, mediaQueries, styleBlocks);\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\tvar str = declaration.a;\n\t\t\t\t\t\t\t\tvar otherSnippets = declaration.b;\n\t\t\t\t\t\t\t\treturn A2($rtfeldman$elm_css$Css$Preprocess$Resolve$resolveSupportsRule, str, otherSnippets);\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\tvar str1 = declaration.a;\n\t\t\t\t\t\t\t\tvar str2 = declaration.b;\n\t\t\t\t\t\t\t\tvar str3 = declaration.c;\n\t\t\t\t\t\t\t\tvar str4 = declaration.d;\n\t\t\t\t\t\t\t\tvar styleBlock = declaration.e;\n\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\t\t\t\tA4($rtfeldman$elm_css$Css$Preprocess$Resolve$toDocumentRule, str1, str2, str3, str4),\n\t\t\t\t\t\t\t\t\t$rtfeldman$elm_css$Css$Preprocess$Resolve$expandStyleBlock(styleBlock));\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\tvar properties = declaration.a;\n\t\t\t\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t$rtfeldman$elm_css$Css$Structure$PageRule(properties)\n\t\t\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\tcase 5:\n\t\t\t\t\t\t\t\tvar properties = declaration.a;\n\t\t\t\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t$rtfeldman$elm_css$Css$Structure$FontFace(properties)\n\t\t\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\tcase 6:\n\t\t\t\t\t\t\t\tvar properties = declaration.a;\n\t\t\t\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t$rtfeldman$elm_css$Css$Structure$Viewport(properties)\n\t\t\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\tcase 7:\n\t\t\t\t\t\t\t\tvar properties = declaration.a;\n\t\t\t\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t$rtfeldman$elm_css$Css$Structure$CounterStyle(properties)\n\t\t\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tvar tuples = declaration.a;\n\t\t\t\t\t\t\t\treturn $rtfeldman$elm_css$Css$Preprocess$Resolve$resolveFontFeatureValues(tuples);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\treturn $elm$core$List$concat(\n\t\t\t\t\t\t_Utils_ap(\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tA2($rtfeldman$elm_css$Css$Preprocess$Resolve$applyStyles, rest, declarations)\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\t\t\texpandDeclaration,\n\t\t\t\t\t\t\t\tA2($elm$core$List$concatMap, $rtfeldman$elm_css$Css$Preprocess$unwrapSnippet, snippets))));\n\t\t\t\tcase 3:\n\t\t\t\t\tvar _v11 = styles.a;\n\t\t\t\t\tvar pseudoElement = _v11.a;\n\t\t\t\t\tvar nestedStyles = _v11.b;\n\t\t\t\t\tvar rest = styles.b;\n\t\t\t\t\treturn A4(\n\t\t\t\t\t\t$rtfeldman$elm_css$Css$Preprocess$Resolve$applyNestedStylesToLast,\n\t\t\t\t\t\tnestedStyles,\n\t\t\t\t\t\trest,\n\t\t\t\t\t\t$rtfeldman$elm_css$Css$Structure$appendPseudoElementToLastSelector(pseudoElement),\n\t\t\t\t\t\tdeclarations);\n\t\t\t\tcase 5:\n\t\t\t\t\tvar str = styles.a.a;\n\t\t\t\t\tvar rest = styles.b;\n\t\t\t\t\tvar name = $rtfeldman$elm_css$Hash$fromString(str);\n\t\t\t\t\tvar newProperty = 'animation-name:' + name;\n\t\t\t\t\tvar newDeclarations = A2(\n\t\t\t\t\t\t$rtfeldman$elm_css$Css$Preprocess$Resolve$applyStyles,\n\t\t\t\t\t\trest,\n\t\t\t\t\t\tA2($rtfeldman$elm_css$Css$Structure$appendProperty, newProperty, declarations));\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\t$elm$core$List$append,\n\t\t\t\t\t\tnewDeclarations,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$rtfeldman$elm_css$Css$Structure$Keyframes(\n\t\t\t\t\t\t\t\t{cn: str, cB: name})\n\t\t\t\t\t\t\t]));\n\t\t\t\tcase 4:\n\t\t\t\t\tvar _v12 = styles.a;\n\t\t\t\t\tvar mediaQueries = _v12.a;\n\t\t\t\t\tvar nestedStyles = _v12.b;\n\t\t\t\t\tvar rest = styles.b;\n\t\t\t\t\tvar extraDeclarations = function () {\n\t\t\t\t\t\tvar _v13 = $rtfeldman$elm_css$Css$Preprocess$Resolve$collectSelectors(declarations);\n\t\t\t\t\t\tif (!_v13.b) {\n\t\t\t\t\t\t\treturn _List_Nil;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar firstSelector = _v13.a;\n\t\t\t\t\t\t\tvar otherSelectors = _v13.b;\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\t\t\t$rtfeldman$elm_css$Css$Structure$styleBlockToMediaRule(mediaQueries),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$rtfeldman$elm_css$Css$Preprocess$Resolve$applyStyles,\n\t\t\t\t\t\t\t\t\tnestedStyles,\n\t\t\t\t\t\t\t\t\t$elm$core$List$singleton(\n\t\t\t\t\t\t\t\t\t\t$rtfeldman$elm_css$Css$Structure$StyleBlockDeclaration(\n\t\t\t\t\t\t\t\t\t\t\tA3($rtfeldman$elm_css$Css$Structure$StyleBlock, firstSelector, otherSelectors, _List_Nil)))));\n\t\t\t\t\t\t}\n\t\t\t\t\t}();\n\t\t\t\t\treturn _Utils_ap(\n\t\t\t\t\t\tA2($rtfeldman$elm_css$Css$Preprocess$Resolve$applyStyles, rest, declarations),\n\t\t\t\t\t\textraDeclarations);\n\t\t\t\tdefault:\n\t\t\t\t\tvar otherStyles = styles.a.a;\n\t\t\t\t\tvar rest = styles.b;\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\t$rtfeldman$elm_css$Css$Preprocess$Resolve$applyStyles,\n\t\t\t\t\t\t_Utils_ap(otherStyles, rest),\n\t\t\t\t\t\tdeclarations);\n\t\t\t}\n\t\t}\n\t});\nvar $rtfeldman$elm_css$Css$Preprocess$Resolve$expandStyleBlock = function (_v2) {\n\tvar firstSelector = _v2.a;\n\tvar otherSelectors = _v2.b;\n\tvar styles = _v2.c;\n\treturn A2(\n\t\t$rtfeldman$elm_css$Css$Preprocess$Resolve$applyStyles,\n\t\tstyles,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$rtfeldman$elm_css$Css$Structure$StyleBlockDeclaration(\n\t\t\t\tA3($rtfeldman$elm_css$Css$Structure$StyleBlock, firstSelector, otherSelectors, _List_Nil))\n\t\t\t]));\n};\nvar $rtfeldman$elm_css$Css$Preprocess$Resolve$extract = function (snippetDeclarations) {\n\tif (!snippetDeclarations.b) {\n\t\treturn _List_Nil;\n\t} else {\n\t\tvar first = snippetDeclarations.a;\n\t\tvar rest = snippetDeclarations.b;\n\t\treturn _Utils_ap(\n\t\t\t$rtfeldman$elm_css$Css$Preprocess$Resolve$toDeclarations(first),\n\t\t\t$rtfeldman$elm_css$Css$Preprocess$Resolve$extract(rest));\n\t}\n};\nvar $rtfeldman$elm_css$Css$Preprocess$Resolve$resolveMediaRule = F2(\n\tfunction (mediaQueries, styleBlocks) {\n\t\tvar handleStyleBlock = function (styleBlock) {\n\t\t\treturn A2(\n\t\t\t\t$elm$core$List$map,\n\t\t\t\t$rtfeldman$elm_css$Css$Preprocess$Resolve$toMediaRule(mediaQueries),\n\t\t\t\t$rtfeldman$elm_css$Css$Preprocess$Resolve$expandStyleBlock(styleBlock));\n\t\t};\n\t\treturn A2($elm$core$List$concatMap, handleStyleBlock, styleBlocks);\n\t});\nvar $rtfeldman$elm_css$Css$Preprocess$Resolve$resolveSupportsRule = F2(\n\tfunction (str, snippets) {\n\t\tvar declarations = $rtfeldman$elm_css$Css$Preprocess$Resolve$extract(\n\t\t\tA2($elm$core$List$concatMap, $rtfeldman$elm_css$Css$Preprocess$unwrapSnippet, snippets));\n\t\treturn _List_fromArray(\n\t\t\t[\n\t\t\t\tA2($rtfeldman$elm_css$Css$Structure$SupportsRule, str, declarations)\n\t\t\t]);\n\t});\nvar $rtfeldman$elm_css$Css$Preprocess$Resolve$toDeclarations = function (snippetDeclaration) {\n\tswitch (snippetDeclaration.$) {\n\t\tcase 0:\n\t\t\tvar styleBlock = snippetDeclaration.a;\n\t\t\treturn $rtfeldman$elm_css$Css$Preprocess$Resolve$expandStyleBlock(styleBlock);\n\t\tcase 1:\n\t\t\tvar mediaQueries = snippetDeclaration.a;\n\t\t\tvar styleBlocks = snippetDeclaration.b;\n\t\t\treturn A2($rtfeldman$elm_css$Css$Preprocess$Resolve$resolveMediaRule, mediaQueries, styleBlocks);\n\t\tcase 2:\n\t\t\tvar str = snippetDeclaration.a;\n\t\t\tvar snippets = snippetDeclaration.b;\n\t\t\treturn A2($rtfeldman$elm_css$Css$Preprocess$Resolve$resolveSupportsRule, str, snippets);\n\t\tcase 3:\n\t\t\tvar str1 = snippetDeclaration.a;\n\t\t\tvar str2 = snippetDeclaration.b;\n\t\t\tvar str3 = snippetDeclaration.c;\n\t\t\tvar str4 = snippetDeclaration.d;\n\t\t\tvar styleBlock = snippetDeclaration.e;\n\t\t\treturn A2(\n\t\t\t\t$elm$core$List$map,\n\t\t\t\tA4($rtfeldman$elm_css$Css$Preprocess$Resolve$toDocumentRule, str1, str2, str3, str4),\n\t\t\t\t$rtfeldman$elm_css$Css$Preprocess$Resolve$expandStyleBlock(styleBlock));\n\t\tcase 4:\n\t\t\tvar properties = snippetDeclaration.a;\n\t\t\treturn _List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$rtfeldman$elm_css$Css$Structure$PageRule(properties)\n\t\t\t\t]);\n\t\tcase 5:\n\t\t\tvar properties = snippetDeclaration.a;\n\t\t\treturn _List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$rtfeldman$elm_css$Css$Structure$FontFace(properties)\n\t\t\t\t]);\n\t\tcase 6:\n\t\t\tvar properties = snippetDeclaration.a;\n\t\t\treturn _List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$rtfeldman$elm_css$Css$Structure$Viewport(properties)\n\t\t\t\t]);\n\t\tcase 7:\n\t\t\tvar properties = snippetDeclaration.a;\n\t\t\treturn _List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$rtfeldman$elm_css$Css$Structure$CounterStyle(properties)\n\t\t\t\t]);\n\t\tdefault:\n\t\t\tvar tuples = snippetDeclaration.a;\n\t\t\treturn $rtfeldman$elm_css$Css$Preprocess$Resolve$resolveFontFeatureValues(tuples);\n\t}\n};\nvar $rtfeldman$elm_css$Css$Preprocess$Resolve$toStructure = function (_v0) {\n\tvar charset = _v0.bA;\n\tvar imports = _v0.bL;\n\tvar namespaces = _v0.bR;\n\tvar snippets = _v0.b5;\n\tvar declarations = $rtfeldman$elm_css$Css$Preprocess$Resolve$extract(\n\t\tA2($elm$core$List$concatMap, $rtfeldman$elm_css$Css$Preprocess$unwrapSnippet, snippets));\n\treturn {bA: charset, co: declarations, bL: imports, bR: namespaces};\n};\nvar $rtfeldman$elm_css$Css$Preprocess$Resolve$compile = function (sheet) {\n\treturn $rtfeldman$elm_css$Css$Structure$Output$prettyPrint(\n\t\t$rtfeldman$elm_css$Css$Structure$compactStylesheet(\n\t\t\t$rtfeldman$elm_css$Css$Preprocess$Resolve$toStructure(sheet)));\n};\nvar $rtfeldman$elm_css$Css$Preprocess$Snippet = $elm$core$Basics$identity;\nvar $rtfeldman$elm_css$Css$Preprocess$StyleBlock = F3(\n\tfunction (a, b, c) {\n\t\treturn {$: 0, a: a, b: b, c: c};\n\t});\nvar $rtfeldman$elm_css$Css$Preprocess$StyleBlockDeclaration = function (a) {\n\treturn {$: 0, a: a};\n};\nvar $rtfeldman$elm_css$VirtualDom$Styled$makeSnippet = F2(\n\tfunction (styles, sequence) {\n\t\tvar selector = A3($rtfeldman$elm_css$Css$Structure$Selector, sequence, _List_Nil, $elm$core$Maybe$Nothing);\n\t\treturn _List_fromArray(\n\t\t\t[\n\t\t\t\t$rtfeldman$elm_css$Css$Preprocess$StyleBlockDeclaration(\n\t\t\t\tA3($rtfeldman$elm_css$Css$Preprocess$StyleBlock, selector, _List_Nil, styles))\n\t\t\t]);\n\t});\nvar $rtfeldman$elm_css$Css$Preprocess$stylesheet = function (snippets) {\n\treturn {bA: $elm$core$Maybe$Nothing, bL: _List_Nil, bR: _List_Nil, b5: snippets};\n};\nvar $rtfeldman$elm_css$Css$Structure$ClassSelector = function (a) {\n\treturn {$: 0, a: a};\n};\nvar $rtfeldman$elm_css$VirtualDom$Styled$templateSelector = $rtfeldman$elm_css$Css$Structure$UniversalSelectorSequence(\n\t_List_fromArray(\n\t\t[\n\t\t\t$rtfeldman$elm_css$Css$Structure$ClassSelector($rtfeldman$elm_css$VirtualDom$Styled$classnameStandin)\n\t\t]));\nvar $rtfeldman$elm_css$VirtualDom$Styled$getCssTemplate = function (styles) {\n\tif (!styles.b) {\n\t\treturn '';\n\t} else {\n\t\tvar otherwise = styles;\n\t\treturn $rtfeldman$elm_css$Css$Preprocess$Resolve$compile(\n\t\t\t$rtfeldman$elm_css$Css$Preprocess$stylesheet(\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($rtfeldman$elm_css$VirtualDom$Styled$makeSnippet, styles, $rtfeldman$elm_css$VirtualDom$Styled$templateSelector)\n\t\t\t\t\t])));\n\t}\n};\nvar $rtfeldman$elm_css$Html$Styled$Internal$css = function (styles) {\n\tvar cssTemplate = $rtfeldman$elm_css$VirtualDom$Styled$getCssTemplate(styles);\n\tvar classProperty = A2($elm$virtual_dom$VirtualDom$attribute, '', '');\n\treturn A3($rtfeldman$elm_css$VirtualDom$Styled$Attribute, classProperty, true, cssTemplate);\n};\nvar $rtfeldman$elm_css$Html$Styled$Attributes$css = $rtfeldman$elm_css$Html$Styled$Internal$css;\nvar $author$project$Tailwind$Utilities$cursor_pointer = A2($rtfeldman$elm_css$Css$property, 'cursor', 'pointer');\nvar $author$project$Tailwind$Utilities$h_12 = A2($rtfeldman$elm_css$Css$property, 'height', '3rem');\nvar $author$project$Tailwind$Utilities$inline_flex = A2($rtfeldman$elm_css$Css$property, 'display', 'inline-flex');\nvar $author$project$Tailwind$Utilities$items_center = A2($rtfeldman$elm_css$Css$property, 'align-items', 'center');\nvar $author$project$Tailwind$Utilities$justify_center = A2($rtfeldman$elm_css$Css$property, 'justify-content', 'center');\nvar $rtfeldman$elm_css$VirtualDom$Styled$Unstyled = function (a) {\n\treturn {$: 4, a: a};\n};\nvar $rtfeldman$elm_css$VirtualDom$Styled$text = function (str) {\n\treturn $rtfeldman$elm_css$VirtualDom$Styled$Unstyled(\n\t\t$elm$virtual_dom$VirtualDom$text(str));\n};\nvar $rtfeldman$elm_css$Html$Styled$text = $rtfeldman$elm_css$VirtualDom$Styled$text;\nvar $rtfeldman$elm_css$Css$Preprocess$ApplyStyles = function (a) {\n\treturn {$: 6, a: a};\n};\nvar $rtfeldman$elm_css$Css$batch = $rtfeldman$elm_css$Css$Preprocess$ApplyStyles;\nvar $author$project$Tailwind$Utilities$text_lg = $rtfeldman$elm_css$Css$batch(\n\t_List_fromArray(\n\t\t[\n\t\t\tA2($rtfeldman$elm_css$Css$property, 'font-size', '1.125rem'),\n\t\t\tA2($rtfeldman$elm_css$Css$property, 'line-height', '1.75rem')\n\t\t]));\nvar $author$project$Tailwind$Utilities$w_full = A2($rtfeldman$elm_css$Css$property, 'width', '100%');\nvar $author$project$Main$brandedButton = F3(\n\tfunction (attrs, nodes, str) {\n\t\tvar btnNodes = _Utils_ap(\n\t\t\tnodes,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$rtfeldman$elm_css$Html$Styled$text(str)\n\t\t\t\t]));\n\t\tvar btnAttrs = _Utils_ap(\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$rtfeldman$elm_css$Html$Styled$Attributes$css(\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[$author$project$Tailwind$Utilities$inline_flex, $author$project$Tailwind$Utilities$align_middle, $author$project$Tailwind$Utilities$items_center, $author$project$Tailwind$Utilities$justify_center, $author$project$Tailwind$Utilities$cursor_pointer, $author$project$Tailwind$Utilities$w_full, $author$project$Tailwind$Utilities$h_12, $author$project$Tailwind$Utilities$text_lg]))\n\t\t\t\t]),\n\t\t\tattrs);\n\t\treturn A2($rtfeldman$elm_css$Html$Styled$button, btnAttrs, btnNodes);\n\t});\nvar $rtfeldman$elm_css$Html$Styled$div = $rtfeldman$elm_css$Html$Styled$node('div');\nvar $author$project$Tailwind$Utilities$my_4 = $rtfeldman$elm_css$Css$batch(\n\t_List_fromArray(\n\t\t[\n\t\t\tA2($rtfeldman$elm_css$Css$property, 'margin-top', '1rem'),\n\t\t\tA2($rtfeldman$elm_css$Css$property, 'margin-bottom', '1rem')\n\t\t]));\nvar $author$project$Main$errorText = function (str) {\n\treturn A2(\n\t\t$rtfeldman$elm_css$Html$Styled$div,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$rtfeldman$elm_css$Html$Styled$Attributes$css(\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[$author$project$Tailwind$Utilities$my_4]))\n\t\t\t]),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$rtfeldman$elm_css$Html$Styled$text(str)\n\t\t\t]));\n};\nvar $rtfeldman$elm_css$Html$Styled$img = $rtfeldman$elm_css$Html$Styled$node('img');\nvar $author$project$Asset$Asset = $elm$core$Basics$identity;\nvar $author$project$Asset$metamaskLogo = 'metamask-logo.svg';\nvar $author$project$Tailwind$Utilities$mr_3 = A2($rtfeldman$elm_css$Css$property, 'margin-right', '0.75rem');\nvar $elm$virtual_dom$VirtualDom$Normal = function (a) {\n\treturn {$: 0, a: a};\n};\nvar $elm$virtual_dom$VirtualDom$on = _VirtualDom_on;\nvar $rtfeldman$elm_css$VirtualDom$Styled$on = F2(\n\tfunction (eventName, handler) {\n\t\treturn A3(\n\t\t\t$rtfeldman$elm_css$VirtualDom$Styled$Attribute,\n\t\t\tA2($elm$virtual_dom$VirtualDom$on, eventName, handler),\n\t\t\tfalse,\n\t\t\t'');\n\t});\nvar $rtfeldman$elm_css$Html$Styled$Events$on = F2(\n\tfunction (event, decoder) {\n\t\treturn A2(\n\t\t\t$rtfeldman$elm_css$VirtualDom$Styled$on,\n\t\t\tevent,\n\t\t\t$elm$virtual_dom$VirtualDom$Normal(decoder));\n\t});\nvar $rtfeldman$elm_css$Html$Styled$Events$onClick = function (msg) {\n\treturn A2(\n\t\t$rtfeldman$elm_css$Html$Styled$Events$on,\n\t\t'click',\n\t\t$elm$json$Json$Decode$succeed(msg));\n};\nvar $author$project$Tailwind$Utilities$px_4 = $rtfeldman$elm_css$Css$batch(\n\t_List_fromArray(\n\t\t[\n\t\t\tA2($rtfeldman$elm_css$Css$property, 'padding-left', '1rem'),\n\t\t\tA2($rtfeldman$elm_css$Css$property, 'padding-right', '1rem')\n\t\t]));\nvar $author$project$Tailwind$Utilities$py_2 = $rtfeldman$elm_css$Css$batch(\n\t_List_fromArray(\n\t\t[\n\t\t\tA2($rtfeldman$elm_css$Css$property, 'padding-top', '0.5rem'),\n\t\t\tA2($rtfeldman$elm_css$Css$property, 'padding-bottom', '0.5rem')\n\t\t]));\nvar $rtfeldman$elm_css$VirtualDom$Styled$property = F2(\n\tfunction (key, value) {\n\t\treturn A3(\n\t\t\t$rtfeldman$elm_css$VirtualDom$Styled$Attribute,\n\t\t\tA2($elm$virtual_dom$VirtualDom$property, key, value),\n\t\t\tfalse,\n\t\t\t'');\n\t});\nvar $rtfeldman$elm_css$Html$Styled$Attributes$stringProperty = F2(\n\tfunction (key, string) {\n\t\treturn A2(\n\t\t\t$rtfeldman$elm_css$VirtualDom$Styled$property,\n\t\t\tkey,\n\t\t\t$elm$json$Json$Encode$string(string));\n\t});\nvar $rtfeldman$elm_css$Html$Styled$Attributes$src = function (url) {\n\treturn A2($rtfeldman$elm_css$Html$Styled$Attributes$stringProperty, 'src', url);\n};\nvar $author$project$Tailwind$Utilities$text_base = $rtfeldman$elm_css$Css$batch(\n\t_List_fromArray(\n\t\t[\n\t\t\tA2($rtfeldman$elm_css$Css$property, 'font-size', '1rem'),\n\t\t\tA2($rtfeldman$elm_css$Css$property, 'line-height', '1.5rem')\n\t\t]));\nvar $author$project$Asset$toPath = function (_v0) {\n\tvar filename = _v0;\n\treturn '/images/' + filename;\n};\nvar $author$project$Main$connectAccountUX = F2(\n\tfunction (model, err) {\n\t\tvar errorContent = function () {\n\t\t\tif (!err.$) {\n\t\t\t\tvar str = err.a;\n\t\t\t\treturn $author$project$Main$errorText(str);\n\t\t\t} else {\n\t\t\t\treturn A2($rtfeldman$elm_css$Html$Styled$div, _List_Nil, _List_Nil);\n\t\t\t}\n\t\t}();\n\t\treturn A2(\n\t\t\t$rtfeldman$elm_css$Html$Styled$div,\n\t\t\t_List_Nil,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\terrorContent,\n\t\t\t\t\tA2(\n\t\t\t\t\t$rtfeldman$elm_css$Html$Styled$div,\n\t\t\t\t\t_List_Nil,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t$author$project$Main$brandedButton,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t$rtfeldman$elm_css$Html$Styled$Events$onClick($author$project$Main$AccountRequested),\n\t\t\t\t\t\t\t\t\t$rtfeldman$elm_css$Html$Styled$Attributes$css(\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[$author$project$Tailwind$Utilities$px_4, $author$project$Tailwind$Utilities$py_2]))\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$rtfeldman$elm_css$Html$Styled$img,\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t$rtfeldman$elm_css$Html$Styled$Attributes$src(\n\t\t\t\t\t\t\t\t\t\t\t$author$project$Asset$toPath($author$project$Asset$metamaskLogo)),\n\t\t\t\t\t\t\t\t\t\t\t$rtfeldman$elm_css$Html$Styled$Attributes$css(\n\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t[$author$project$Tailwind$Utilities$text_base, $author$project$Tailwind$Utilities$mr_3]))\n\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t_List_Nil)\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t'Connect Wallet')\n\t\t\t\t\t\t]))\n\t\t\t\t]));\n\t});\nvar $author$project$Main$ApproveRequested = {$: 3};\nvar $author$project$Main$QuantityUpdated = function (a) {\n\treturn {$: 9, a: a};\n};\nvar $elm$core$Basics$ge = _Utils_ge;\nvar $author$project$Main$hasFunds = F2(\n\tfunction (quantity, wallet) {\n\t\tvar fee = $author$project$Main$stringFloatInt(wallet.aM) * quantity;\n\t\tvar balance = $author$project$Main$stringFloatInt(wallet.a5);\n\t\treturn _Utils_cmp(balance, fee) > -1;\n\t});\nvar $author$project$Main$balanceWarningOrMint = function (model) {\n\tvar _v0 = model.I;\n\tif (!_v0.$) {\n\t\tvar wallet = _v0.a;\n\t\treturn A2($author$project$Main$hasFunds, model.n, wallet) ? 'Mint' : ('Not enough ' + (' ' + wallet.ar));\n\t} else {\n\t\treturn 'Wallet not found';\n\t}\n};\nvar $author$project$Tailwind$Utilities$box_border = A2($rtfeldman$elm_css$Css$property, 'box-sizing', 'border-box');\nvar $elm$json$Json$Encode$bool = _Json_wrap;\nvar $rtfeldman$elm_css$Html$Styled$Attributes$boolProperty = F2(\n\tfunction (key, bool) {\n\t\treturn A2(\n\t\t\t$rtfeldman$elm_css$VirtualDom$Styled$property,\n\t\t\tkey,\n\t\t\t$elm$json$Json$Encode$bool(bool));\n\t});\nvar $rtfeldman$elm_css$Html$Styled$Attributes$disabled = $rtfeldman$elm_css$Html$Styled$Attributes$boolProperty('disabled');\nvar $author$project$Tailwind$Utilities$my_2 = $rtfeldman$elm_css$Css$batch(\n\t_List_fromArray(\n\t\t[\n\t\t\tA2($rtfeldman$elm_css$Css$property, 'margin-top', '0.5rem'),\n\t\t\tA2($rtfeldman$elm_css$Css$property, 'margin-bottom', '0.5rem')\n\t\t]));\nvar $author$project$Tailwind$Utilities$text_sm = $rtfeldman$elm_css$Css$batch(\n\t_List_fromArray(\n\t\t[\n\t\t\tA2($rtfeldman$elm_css$Css$property, 'font-size', '0.875rem'),\n\t\t\tA2($rtfeldman$elm_css$Css$property, 'line-height', '1.25rem')\n\t\t]));\nvar $author$project$Main$feeView = F2(\n\tfunction (quantity, wallet) {\n\t\tvar fee = $elm$core$String$fromInt(\n\t\t\t$author$project$Main$stringFloatInt(wallet.aM) * quantity);\n\t\tif (fee === '0') {\n\t\t\treturn A2($rtfeldman$elm_css$Html$Styled$div, _List_Nil, _List_Nil);\n\t\t} else {\n\t\t\treturn A2(\n\t\t\t\t$rtfeldman$elm_css$Html$Styled$div,\n\t\t\t\t_List_Nil,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$rtfeldman$elm_css$Html$Styled$div,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$rtfeldman$elm_css$Html$Styled$Attributes$css(\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[$author$project$Tailwind$Utilities$text_sm, $author$project$Tailwind$Utilities$my_2]))\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$rtfeldman$elm_css$Html$Styled$text('Fee: ' + (fee + (' ' + wallet.ar)))\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t]));\n\t\t}\n\t});\nvar $rtfeldman$elm_css$Html$Styled$input = $rtfeldman$elm_css$Html$Styled$node('input');\nvar $rtfeldman$elm_css$Html$Styled$Events$alwaysStop = function (x) {\n\treturn _Utils_Tuple2(x, true);\n};\nvar $elm$virtual_dom$VirtualDom$MayStopPropagation = function (a) {\n\treturn {$: 1, a: a};\n};\nvar $rtfeldman$elm_css$Html$Styled$Events$stopPropagationOn = F2(\n\tfunction (event, decoder) {\n\t\treturn A2(\n\t\t\t$rtfeldman$elm_css$VirtualDom$Styled$on,\n\t\t\tevent,\n\t\t\t$elm$virtual_dom$VirtualDom$MayStopPropagation(decoder));\n\t});\nvar $elm$json$Json$Decode$at = F2(\n\tfunction (fields, decoder) {\n\t\treturn A3($elm$core$List$foldr, $elm$json$Json$Decode$field, decoder, fields);\n\t});\nvar $rtfeldman$elm_css$Html$Styled$Events$targetValue = A2(\n\t$elm$json$Json$Decode$at,\n\t_List_fromArray(\n\t\t['target', 'value']),\n\t$elm$json$Json$Decode$string);\nvar $rtfeldman$elm_css$Html$Styled$Events$onInput = function (tagger) {\n\treturn A2(\n\t\t$rtfeldman$elm_css$Html$Styled$Events$stopPropagationOn,\n\t\t'input',\n\t\tA2(\n\t\t\t$elm$json$Json$Decode$map,\n\t\t\t$rtfeldman$elm_css$Html$Styled$Events$alwaysStop,\n\t\t\tA2($elm$json$Json$Decode$map, tagger, $rtfeldman$elm_css$Html$Styled$Events$targetValue)));\n};\nvar $rtfeldman$elm_css$Html$Styled$Attributes$placeholder = $rtfeldman$elm_css$Html$Styled$Attributes$stringProperty('placeholder');\nvar $author$project$Tailwind$Utilities$px_5 = $rtfeldman$elm_css$Css$batch(\n\t_List_fromArray(\n\t\t[\n\t\t\tA2($rtfeldman$elm_css$Css$property, 'padding-left', '1.25rem'),\n\t\t\tA2($rtfeldman$elm_css$Css$property, 'padding-right', '1.25rem')\n\t\t]));\nvar $rtfeldman$elm_css$Html$Styled$Attributes$type_ = $rtfeldman$elm_css$Html$Styled$Attributes$stringProperty('type');\nvar $author$project$Main$validateForm = function (model) {\n\tvar _v0 = _Utils_Tuple2(model.n, model.I);\n\tif (!_v0.a) {\n\t\treturn false;\n\t} else {\n\t\tif (!_v0.b.$) {\n\t\t\tvar wallet = _v0.b.a;\n\t\t\treturn A2($author$project$Main$hasFunds, model.n, wallet);\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n};\nvar $rtfeldman$elm_css$Html$Styled$Attributes$value = $rtfeldman$elm_css$Html$Styled$Attributes$stringProperty('value');\nvar $author$project$Main$walletView = function (wallet) {\n\treturn A2(\n\t\t$rtfeldman$elm_css$Html$Styled$div,\n\t\t_List_Nil,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\t$rtfeldman$elm_css$Html$Styled$div,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$rtfeldman$elm_css$Html$Styled$Attributes$css(\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[$author$project$Tailwind$Utilities$text_sm]))\n\t\t\t\t\t]),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$rtfeldman$elm_css$Html$Styled$text('NFT balance: ' + (wallet.a8 + ' ALGOBULL'))\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$rtfeldman$elm_css$Html$Styled$div,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$rtfeldman$elm_css$Html$Styled$Attributes$css(\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[$author$project$Tailwind$Utilities$text_sm]))\n\t\t\t\t\t]),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$rtfeldman$elm_css$Html$Styled$text('Stablecoin balance: ' + (wallet.a5 + (' ' + wallet.ar)))\n\t\t\t\t\t]))\n\t\t\t]));\n};\nvar $author$project$Main$formUX = F2(\n\tfunction (maybeFailure, model) {\n\t\treturn A2(\n\t\t\t$rtfeldman$elm_css$Html$Styled$div,\n\t\t\t_List_Nil,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\t$rtfeldman$elm_css$Html$Styled$div,\n\t\t\t\t\t_List_Nil,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$core$Maybe$withDefault,\n\t\t\t\t\t\t\tA2($rtfeldman$elm_css$Html$Styled$div, _List_Nil, _List_Nil),\n\t\t\t\t\t\t\tA2($elm$core$Maybe$map, $author$project$Main$walletView, model.I)),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$rtfeldman$elm_css$Html$Styled$div,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t$rtfeldman$elm_css$Html$Styled$Attributes$css(\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[$author$project$Tailwind$Utilities$my_2]))\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$rtfeldman$elm_css$Html$Styled$input,\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t$rtfeldman$elm_css$Html$Styled$Events$onInput($author$project$Main$QuantityUpdated),\n\t\t\t\t\t\t\t\t\t\t\t$rtfeldman$elm_css$Html$Styled$Attributes$css(\n\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t[$author$project$Tailwind$Utilities$box_border, $author$project$Tailwind$Utilities$w_full, $author$project$Tailwind$Utilities$px_5, $author$project$Tailwind$Utilities$text_lg, $author$project$Tailwind$Utilities$h_12])),\n\t\t\t\t\t\t\t\t\t\t\t$rtfeldman$elm_css$Html$Styled$Attributes$type_('number'),\n\t\t\t\t\t\t\t\t\t\t\t$rtfeldman$elm_css$Html$Styled$Attributes$placeholder('Enter Amount'),\n\t\t\t\t\t\t\t\t\t\t\t$rtfeldman$elm_css$Html$Styled$Attributes$value(\n\t\t\t\t\t\t\t\t\t\t\t$elm$core$String$fromInt(model.n))\n\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t_List_Nil)\n\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$rtfeldman$elm_css$Html$Styled$div,\n\t\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t\t\t$author$project$Main$brandedButton,\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t$rtfeldman$elm_css$Html$Styled$Events$onClick($author$project$Main$ApproveRequested),\n\t\t\t\t\t\t\t\t\t\t\t$rtfeldman$elm_css$Html$Styled$Attributes$css(\n\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t[$author$project$Tailwind$Utilities$w_full])),\n\t\t\t\t\t\t\t\t\t\t\t$rtfeldman$elm_css$Html$Styled$Attributes$disabled(\n\t\t\t\t\t\t\t\t\t\t\t!$author$project$Main$validateForm(model))\n\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t\t\t\t$author$project$Main$balanceWarningOrMint(model))\n\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t])),\n\t\t\t\t\tA2(\n\t\t\t\t\t$elm$core$Maybe$withDefault,\n\t\t\t\t\tA2($rtfeldman$elm_css$Html$Styled$div, _List_Nil, _List_Nil),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Maybe$map,\n\t\t\t\t\t\t$author$project$Main$feeView(model.n),\n\t\t\t\t\t\tmodel.I))\n\t\t\t\t]));\n\t});\nvar $rtfeldman$elm_css$Html$Styled$h1 = $rtfeldman$elm_css$Html$Styled$node('h1');\nvar $rtfeldman$elm_css$Html$Styled$Attributes$href = function (url) {\n\treturn A2($rtfeldman$elm_css$Html$Styled$Attributes$stringProperty, 'href', url);\n};\nvar $author$project$Main$loadingUX = F2(\n\tfunction (model, str) {\n\t\treturn A2(\n\t\t\t$rtfeldman$elm_css$Html$Styled$div,\n\t\t\t_List_Nil,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$rtfeldman$elm_css$Html$Styled$text(str)\n\t\t\t\t]));\n\t});\nvar $author$project$Main$submittedUX = function (model) {\n\treturn A2(\n\t\t$rtfeldman$elm_css$Html$Styled$div,\n\t\t_List_Nil,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\t$rtfeldman$elm_css$Html$Styled$div,\n\t\t\t\t_List_Nil,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$rtfeldman$elm_css$Html$Styled$text(\n\t\t\t\t\t\t'Congrats! You successfully minted ' + ($elm$core$String$fromInt(model.n) + ' ALGOBULL!'))\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$rtfeldman$elm_css$Html$Styled$div,\n\t\t\t\t_List_Nil,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$rtfeldman$elm_css$Html$Styled$a,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$rtfeldman$elm_css$Html$Styled$Attributes$href(model.aL)\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$rtfeldman$elm_css$Html$Styled$text('🔗 Transaction URL')\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t]))\n\t\t\t]));\n};\nvar $author$project$Main$view = function (model) {\n\treturn A2(\n\t\t$rtfeldman$elm_css$Html$Styled$div,\n\t\t_List_Nil,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\t$rtfeldman$elm_css$Html$Styled$h1,\n\t\t\t\t_List_Nil,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$rtfeldman$elm_css$Html$Styled$text('Mint some ALGOBULL!')\n\t\t\t\t\t])),\n\t\t\t\tfunction () {\n\t\t\t\tvar _v0 = model.o;\n\t\t\t\tswitch (_v0.$) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t$rtfeldman$elm_css$Html$Styled$div,\n\t\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$rtfeldman$elm_css$Html$Styled$div,\n\t\t\t\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t$rtfeldman$elm_css$Html$Styled$text('Looks like you\\'ll need a wallet to mint ALGOBULL. '),\n\t\t\t\t\t\t\t\t\t\t\t$rtfeldman$elm_css$Html$Styled$text(' Download '),\n\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t$rtfeldman$elm_css$Html$Styled$a,\n\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t$rtfeldman$elm_css$Html$Styled$Attributes$href('https://metamask.io/download/')\n\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t$rtfeldman$elm_css$Html$Styled$text('MetaMask.')\n\t\t\t\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t\t]));\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tvar err = _v0.a;\n\t\t\t\t\t\treturn A2($author$project$Main$connectAccountUX, model, err);\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tvar err = _v0.a;\n\t\t\t\t\t\treturn A2($author$project$Main$formUX, err, model);\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tvar str = _v0.a;\n\t\t\t\t\t\treturn A2($author$project$Main$loadingUX, model, str);\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn $author$project$Main$submittedUX(model);\n\t\t\t\t}\n\t\t\t}()\n\t\t\t]));\n};\nvar $author$project$Main$main = $elm$browser$Browser$element(\n\t{\n\t\tcx: $author$project$Main$init,\n\t\tcJ: function (model) {\n\t\t\treturn $elm$core$Platform$Sub$batch(\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$author$project$Main$accountSucceeded($author$project$Main$AccountSucceeded),\n\t\t\t\t\t\t$author$project$Main$accountFailed($author$project$Main$AccountFailed),\n\t\t\t\t\t\t$author$project$Main$mintSucceeded($author$project$Main$MintSucceeded),\n\t\t\t\t\t\t$author$project$Main$mintFailed($author$project$Main$MintFailed),\n\t\t\t\t\t\t$author$project$Main$approveSucceeded($author$project$Main$ApproveSucceeded),\n\t\t\t\t\t\t$author$project$Main$approveFailed($author$project$Main$ApproveFailed)\n\t\t\t\t\t]));\n\t\t},\n\t\tcL: $author$project$Main$update,\n\t\tcN: A2($elm$core$Basics$composeR, $author$project$Main$view, $rtfeldman$elm_css$Html$Styled$toUnstyled)\n\t});\n_Platform_export({'Main':{'init':$author$project$Main$main($elm$json$Json$Decode$bool)(0)}});}(this));","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export default {\n  abi: [\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"_royaltyReceiver\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint96\",\n          name: \"_royaltyFeeNumerator\",\n          type: \"uint96\",\n        },\n        {\n          internalType: \"address\",\n          name: \"_stablecoinAddress\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"_mintFee\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"_maxSupply\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"address\",\n          name: \"_devWallet\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"_devMaxMint\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"nonpayable\",\n      type: \"constructor\",\n    },\n    {\n      anonymous: false,\n      inputs: [\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"approved\",\n          type: \"address\",\n        },\n        {\n          indexed: true,\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"Approval\",\n      type: \"event\",\n    },\n    {\n      anonymous: false,\n      inputs: [\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"operator\",\n          type: \"address\",\n        },\n        {\n          indexed: false,\n          internalType: \"bool\",\n          name: \"approved\",\n          type: \"bool\",\n        },\n      ],\n      name: \"ApprovalForAll\",\n      type: \"event\",\n    },\n    {\n      anonymous: false,\n      inputs: [\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"previousOwner\",\n          type: \"address\",\n        },\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"newOwner\",\n          type: \"address\",\n        },\n      ],\n      name: \"OwnershipTransferred\",\n      type: \"event\",\n    },\n    {\n      anonymous: false,\n      inputs: [\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"from\",\n          type: \"address\",\n        },\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          indexed: true,\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"Transfer\",\n      type: \"event\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"approve\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n      ],\n      name: \"balanceOf\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"devMaxMint\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"devWallet\",\n      outputs: [\n        {\n          internalType: \"address\",\n          name: \"\",\n          type: \"address\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"getApproved\",\n      outputs: [\n        {\n          internalType: \"address\",\n          name: \"\",\n          type: \"address\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"operator\",\n          type: \"address\",\n        },\n      ],\n      name: \"isApprovedForAll\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"maxSupply\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"mintFee\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"_recipient\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"quantity\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"mintMultiple\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"name\",\n      outputs: [\n        {\n          internalType: \"string\",\n          name: \"\",\n          type: \"string\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"owner\",\n      outputs: [\n        {\n          internalType: \"address\",\n          name: \"\",\n          type: \"address\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"ownerOf\",\n      outputs: [\n        {\n          internalType: \"address\",\n          name: \"\",\n          type: \"address\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"renounceOwnership\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"salePrice\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"royaltyInfo\",\n      outputs: [\n        {\n          internalType: \"address\",\n          name: \"\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"from\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"safeTransferFrom\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"from\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"bytes\",\n          name: \"data\",\n          type: \"bytes\",\n        },\n      ],\n      name: \"safeTransferFrom\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"operator\",\n          type: \"address\",\n        },\n        {\n          internalType: \"bool\",\n          name: \"approved\",\n          type: \"bool\",\n        },\n      ],\n      name: \"setApprovalForAll\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"_devWallet\",\n          type: \"address\",\n        },\n      ],\n      name: \"setDevWallet\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"bytes4\",\n          name: \"interfaceId\",\n          type: \"bytes4\",\n        },\n      ],\n      name: \"supportsInterface\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"symbol\",\n      outputs: [\n        {\n          internalType: \"string\",\n          name: \"\",\n          type: \"string\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"tokenURI\",\n      outputs: [\n        {\n          internalType: \"string\",\n          name: \"\",\n          type: \"string\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"from\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"transferFrom\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"newOwner\",\n          type: \"address\",\n        },\n      ],\n      name: \"transferOwnership\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"unclaimed\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n  ],\n  bytecode: {\n    object:\n      \"0x60806040523480156200001157600080fd5b5060405162001f5138038062001f5183398101604081905262000034916200027d565b60405180604001604052806008815260200167105b19dbd09d5b1b60c21b81525060405180604001604052806008815260200167105311d3d095531360c21b8152508160029081620000879190620003aa565b506003620000968282620003aa565b505050620000b3620000ad6200010560201b60201c565b62000109565b620000bf87876200015b565b600a80546001600160a01b03199081166001600160a01b0397881617909155600994909455600b92909255600c80549093169316929092179055600d5550620004769050565b3390565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6127106001600160601b0382161115620001cf5760405162461bcd60e51b815260206004820152602a60248201527f455243323938313a20726f79616c7479206665652077696c6c206578636565646044820152692073616c65507269636560b01b60648201526084015b60405180910390fd5b6001600160a01b038216620002275760405162461bcd60e51b815260206004820152601960248201527f455243323938313a20696e76616c6964207265636569766572000000000000006044820152606401620001c6565b604080518082019091526001600160a01b039092168083526001600160601b039091166020909201829052600160a01b90910217600055565b80516001600160a01b03811681146200027857600080fd5b919050565b600080600080600080600060e0888a0312156200029957600080fd5b620002a48862000260565b60208901519097506001600160601b0381168114620002c257600080fd5b9550620002d26040890162000260565b94506060880151935060808801519250620002f060a0890162000260565b915060c0880151905092959891949750929550565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200033057607f821691505b6020821081036200035157634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620003a557600081815260208120601f850160051c81016020861015620003805750805b601f850160051c820191505b81811015620003a1578281556001016200038c565b5050505b505050565b81516001600160401b03811115620003c657620003c662000305565b620003de81620003d784546200031b565b8462000357565b602080601f831160018114620004165760008415620003fd5750858301515b600019600386901b1c1916600185901b178555620003a1565b600085815260208120601f198616915b82811015620004475788860151825594840194600190910190840162000426565b5085821015620004665787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611acb80620004866000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c8063715018a6116100c3578063b88d4fde1161007c578063b88d4fde146102e4578063c87b56dd146102f7578063d5abeb011461030a578063e985e9c514610313578063f2fde38b1461034f578063fcb786991461036257600080fd5b8063715018a61461028a5780638da5cb5b146102925780638ea5220f146102a357806395d89b41146102b6578063a22cb465146102be578063b3fa4a4c146102d157600080fd5b806323b872dd1161011557806323b872dd146102045780632a55205a1461021757806342842e0e146102495780636352211e1461025c578063669416b81461026f57806370a082311461027757600080fd5b806301ffc9a71461015d57806306fdde0314610185578063081812fc1461019a578063095ea7b3146101c557806313966db5146101da5780631f53ac02146101f1575b600080fd5b61017061016b366004611568565b61036b565b60405190151581526020015b60405180910390f35b61018d61037c565b60405161017c91906115d5565b6101ad6101a83660046115e8565b61040e565b6040516001600160a01b03909116815260200161017c565b6101d86101d336600461161d565b610435565b005b6101e360095481565b60405190815260200161017c565b6101d86101ff366004611647565b61054f565b6101d8610212366004611662565b610579565b61022a61022536600461169e565b6105aa565b604080516001600160a01b03909316835260208301919091520161017c565b6101d8610257366004611662565b610656565b6101ad61026a3660046115e8565b610671565b6101e36106d1565b6101e3610285366004611647565b6106ee565b6101d8610774565b6008546001600160a01b03166101ad565b600c546101ad906001600160a01b031681565b61018d610788565b6101d86102cc3660046116ce565b610797565b6101e36102df36600461161d565b6107a6565b6101d86102f236600461171b565b610b3e565b61018d6103053660046115e8565b610b76565b6101e3600b5481565b6101706103213660046117f7565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b6101d861035d366004611647565b610bea565b6101e3600d5481565b600061037682610c63565b92915050565b60606002805461038b9061182a565b80601f01602080910402602001604051908101604052809291908181526020018280546103b79061182a565b80156104045780601f106103d957610100808354040283529160200191610404565b820191906000526020600020905b8154815290600101906020018083116103e757829003601f168201915b5050505050905090565b600061041982610ca3565b506000908152600660205260409020546001600160a01b031690565b600061044082610671565b9050806001600160a01b0316836001600160a01b0316036104b25760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806104ce57506104ce8133610321565b6105405760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060648201526084016104a9565b61054a8383610d02565b505050565b610557610d70565b600c80546001600160a01b0319166001600160a01b0392909216919091179055565b6105833382610dca565b61059f5760405162461bcd60e51b81526004016104a990611864565b61054a838383610e49565b60008281526001602090815260408083208151808301909252546001600160a01b038116808352600160a01b9091046001600160601b031692820192909252829161061f5750604080518082019091526000546001600160a01b0381168252600160a01b90046001600160601b031660208201525b60208101516000906127109061063e906001600160601b0316876118c7565b61064891906118de565b915196919550909350505050565b61054a83838360405180602001604052806000815250610b3e565b6000818152600460205260408120546001600160a01b0316806103765760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016104a9565b60006106dc600e5490565b600b546106e99190611900565b905090565b60006001600160a01b0382166107585760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016104a9565b506001600160a01b031660009081526005602052604090205490565b61077c610d70565b6107866000610fad565b565b60606003805461038b9061182a565b6107a2338383610fff565b5050565b60006107b06106d1565b826107ba600e5490565b6107c49190611913565b111561081e5760405162461bcd60e51b815260206004820152602360248201527f43616e6e6f74206d696e74206265796f6e642072656d61696e696e6720737570604482015262706c7960e81b60648201526084016104a9565b600c54600d54336001600160a01b03909216821491600091908590610842906106ee565b61084c9190611913565b1115905081801561085a5750805b1561088c5760005b8481101561088657610873866110cd565b508061087e81611926565b915050610862565b50610b35565b60008460095461089c91906118c7565b600a54604051636eb1769f60e11b815233600482015230602482015291925082916001600160a01b039091169063dd62ed3e90604401602060405180830381865afa1580156108ef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610913919061193f565b10156109875760405162461bcd60e51b815260206004820152603a60248201527f53656e646572206e6565647320746f20617070726f766520636f6e747261637460448201527f20746f207370656e6420746f74616c2066656520616d6f756e7400000000000060648201526084016104a9565b8460095461099591906118c7565b600a546040516370a0823160e01b81523360048201526001600160a01b03909116906370a0823190602401602060405180830381865afa1580156109dd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a01919061193f565b1015610a6e5760405162461bcd60e51b815260206004820152603660248201527f53656e64657220646f6573206e6f74206861766520656e6f75676820737461626044820152756c65636f696e20666f72206d696e74696e672066656560501b60648201526084016104a9565b60005b85811015610a9557610a82876110cd565b5080610a8d81611926565b915050610a71565b50600a546001600160a01b03166323b872dd33610aba6008546001600160a01b031690565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604481018490526064016020604051808303816000875af1158015610b0e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b329190611958565b50505b50919392505050565b610b483383610dca565b610b645760405162461bcd60e51b81526004016104a990611864565b610b70848484846110f3565b50505050565b6060610b8182610ca3565b6000610b9860408051602081019091526000815290565b90506000815111610bb85760405180602001604052806000815250610be3565b80610bc284611126565b604051602001610bd3929190611975565b6040516020818303038152906040525b9392505050565b610bf2610d70565b6001600160a01b038116610c575760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104a9565b610c6081610fad565b50565b60006001600160e01b031982166380ac58cd60e01b1480610c9457506001600160e01b03198216635b5e139f60e01b145b806103765750610376826111b9565b6000818152600460205260409020546001600160a01b0316610c605760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016104a9565b600081815260066020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610d3782610671565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6008546001600160a01b031633146107865760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104a9565b600080610dd683610671565b9050806001600160a01b0316846001600160a01b03161480610e1d57506001600160a01b0380821660009081526007602090815260408083209388168352929052205460ff165b80610e415750836001600160a01b0316610e368461040e565b6001600160a01b0316145b949350505050565b826001600160a01b0316610e5c82610671565b6001600160a01b031614610e825760405162461bcd60e51b81526004016104a9906119a4565b6001600160a01b038216610ee45760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016104a9565b826001600160a01b0316610ef782610671565b6001600160a01b031614610f1d5760405162461bcd60e51b81526004016104a9906119a4565b600081815260066020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260058552838620805460001901905590871680865283862080546001019055868652600490945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b0316036110605760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016104a9565b6001600160a01b03838116600081815260076020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6000806110d9600e5490565b90506110e583826111ee565b610376600e80546001019055565b6110fe848484610e49565b61110a84848484611379565b610b705760405162461bcd60e51b81526004016104a9906119e9565b606060006111338361147a565b600101905060008167ffffffffffffffff81111561115357611153611705565b6040519080825280601f01601f19166020018201604052801561117d576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461118757509392505050565b60006001600160e01b0319821663152a902d60e11b148061037657506301ffc9a760e01b6001600160e01b0319831614610376565b6001600160a01b0382166112445760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016104a9565b6000818152600460205260409020546001600160a01b0316156112a95760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016104a9565b6000818152600460205260409020546001600160a01b03161561130e5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016104a9565b6001600160a01b038216600081815260056020908152604080832080546001019055848352600490915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006001600160a01b0384163b1561146f57604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906113bd903390899088908890600401611a3b565b6020604051808303816000875af19250505080156113f8575060408051601f3d908101601f191682019092526113f591810190611a78565b60015b611455573d808015611426576040519150601f19603f3d011682016040523d82523d6000602084013e61142b565b606091505b50805160000361144d5760405162461bcd60e51b81526004016104a9906119e9565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610e41565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106114b95772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106114e5576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061150357662386f26fc10000830492506010015b6305f5e100831061151b576305f5e100830492506008015b612710831061152f57612710830492506004015b60648310611541576064830492506002015b600a83106103765760010192915050565b6001600160e01b031981168114610c6057600080fd5b60006020828403121561157a57600080fd5b8135610be381611552565b60005b838110156115a0578181015183820152602001611588565b50506000910152565b600081518084526115c1816020860160208601611585565b601f01601f19169290920160200192915050565b602081526000610be360208301846115a9565b6000602082840312156115fa57600080fd5b5035919050565b80356001600160a01b038116811461161857600080fd5b919050565b6000806040838503121561163057600080fd5b61163983611601565b946020939093013593505050565b60006020828403121561165957600080fd5b610be382611601565b60008060006060848603121561167757600080fd5b61168084611601565b925061168e60208501611601565b9150604084013590509250925092565b600080604083850312156116b157600080fd5b50508035926020909101359150565b8015158114610c6057600080fd5b600080604083850312156116e157600080fd5b6116ea83611601565b915060208301356116fa816116c0565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561173157600080fd5b61173a85611601565b935061174860208601611601565b925060408501359150606085013567ffffffffffffffff8082111561176c57600080fd5b818701915087601f83011261178057600080fd5b81358181111561179257611792611705565b604051601f8201601f19908116603f011681019083821181831017156117ba576117ba611705565b816040528281528a60208487010111156117d357600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561180a57600080fd5b61181383611601565b915061182160208401611601565b90509250929050565b600181811c9082168061183e57607f821691505b60208210810361185e57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610376576103766118b1565b6000826118fb57634e487b7160e01b600052601260045260246000fd5b500490565b81810381811115610376576103766118b1565b80820180821115610376576103766118b1565b600060018201611938576119386118b1565b5060010190565b60006020828403121561195157600080fd5b5051919050565b60006020828403121561196a57600080fd5b8151610be3816116c0565b60008351611987818460208801611585565b83519083019061199b818360208801611585565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611a6e908301846115a9565b9695505050505050565b600060208284031215611a8a57600080fd5b8151610be38161155256fea26469706673582212209a96e4e1825412a66852a5db32875e07cd31135e5e973c62fe4e50a15cbb3e5664736f6c63430008110033\",\n    sourceMap:\n      \"598:3770:37:-:0;;;1516:526;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1390:113:23;;;;;;;;;;;;;-1:-1:-1;;;1390:113:23;;;;;;;;;;;;;;;;-1:-1:-1;;;1390:113:23;;;1464:5;1456;:13;;;;;;:::i;:::-;-1:-1:-1;1479:7:23;:17;1489:7;1479;:17;:::i;:::-;;1390:113;;936:32:18;955:12;:10;;;:12;;:::i;:::-;936:18;:32::i;:::-;1803:58:37::2;1822:16:::0;1840:20;1803:18:::2;:58::i;:::-;1871:10;:38:::0;;-1:-1:-1;;;;;;1871:38:37;;::::2;-1:-1:-1::0;;;;;1871:38:37;;::::2;;::::0;;;1919:7:::2;:18:::0;;;;1947:9:::2;:22:::0;;;;1979:9:::2;:22:::0;;;;::::2;::::0;::::2;::::0;;;::::2;::::0;;2011:10:::2;:24:::0;-1:-1:-1;598:3770:37;;-1:-1:-1;598:3770:37;640:96:30;719:10;;640:96::o;2426:187:18:-;2518:6;;;-1:-1:-1;;;;;2534:17:18;;;-1:-1:-1;;;;;;2534:17:18;;;;;;;2566:40;;2518:6;;;2534:17;2518:6;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;2730:327:28:-;2457:5;-1:-1:-1;;;;;2832:33:28;;;;2824:88;;;;-1:-1:-1;;;2824:88:28;;3854:2:39;2824:88:28;;;3836:21:39;3893:2;3873:18;;;3866:30;3932:34;3912:18;;;3905:62;-1:-1:-1;;;3983:18:39;;;3976:40;4033:19;;2824:88:28;;;;;;;;;-1:-1:-1;;;;;2930:22:28;;2922:60;;;;-1:-1:-1;;;2922:60:28;;4265:2:39;2922:60:28;;;4247:21:39;4304:2;4284:18;;;4277:30;4343:27;4323:18;;;4316:55;4388:18;;2922:60:28;4063:349:39;2922:60:28;3015:35;;;;;;;;;-1:-1:-1;;;;;3015:35:28;;;;;;-1:-1:-1;;;;;3015:35:28;;;;;;;;;;-1:-1:-1;;;2993:57:28;;;;-1:-1:-1;2993:57:28;2730:327::o;14:177:39:-;93:13;;-1:-1:-1;;;;;135:31:39;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:730::-;319:6;327;335;343;351;359;367;420:3;408:9;399:7;395:23;391:33;388:53;;;437:1;434;427:12;388:53;460:40;490:9;460:40;:::i;:::-;543:2;528:18;;522:25;450:50;;-1:-1:-1;;;;;;576:30:39;;566:41;;556:69;;621:1;618;611:12;556:69;644:5;-1:-1:-1;668:49:39;713:2;698:18;;668:49;:::i;:::-;658:59;;757:2;746:9;742:18;736:25;726:35;;801:3;790:9;786:19;780:26;770:36;;825:50;870:3;859:9;855:19;825:50;:::i;:::-;815:60;;915:3;904:9;900:19;894:26;884:36;;196:730;;;;;;;;;;:::o;931:127::-;992:10;987:3;983:20;980:1;973:31;1023:4;1020:1;1013:15;1047:4;1044:1;1037:15;1063:380;1142:1;1138:12;;;;1185;;;1206:61;;1260:4;1252:6;1248:17;1238:27;;1206:61;1313:2;1305:6;1302:14;1282:18;1279:38;1276:161;;1359:10;1354:3;1350:20;1347:1;1340:31;1394:4;1391:1;1384:15;1422:4;1419:1;1412:15;1276:161;;1063:380;;;:::o;1574:545::-;1676:2;1671:3;1668:11;1665:448;;;1712:1;1737:5;1733:2;1726:17;1782:4;1778:2;1768:19;1852:2;1840:10;1836:19;1833:1;1829:27;1823:4;1819:38;1888:4;1876:10;1873:20;1870:47;;;-1:-1:-1;1911:4:39;1870:47;1966:2;1961:3;1957:12;1954:1;1950:20;1944:4;1940:31;1930:41;;2021:82;2039:2;2032:5;2029:13;2021:82;;;2084:17;;;2065:1;2054:13;2021:82;;;2025:3;;;1665:448;1574:545;;;:::o;2295:1352::-;2415:10;;-1:-1:-1;;;;;2437:30:39;;2434:56;;;2470:18;;:::i;:::-;2499:97;2589:6;2549:38;2581:4;2575:11;2549:38;:::i;:::-;2543:4;2499:97;:::i;:::-;2651:4;;2715:2;2704:14;;2732:1;2727:663;;;;3434:1;3451:6;3448:89;;;-1:-1:-1;3503:19:39;;;3497:26;3448:89;-1:-1:-1;;2252:1:39;2248:11;;;2244:24;2240:29;2230:40;2276:1;2272:11;;;2227:57;3550:81;;2697:944;;2727:663;1521:1;1514:14;;;1558:4;1545:18;;-1:-1:-1;;2763:20:39;;;2881:236;2895:7;2892:1;2889:14;2881:236;;;2984:19;;;2978:26;2963:42;;3076:27;;;;3044:1;3032:14;;;;2911:19;;2881:236;;;2885:3;3145:6;3136:7;3133:19;3130:201;;;3206:19;;;3200:26;-1:-1:-1;;3289:1:39;3285:14;;;3301:3;3281:24;3277:37;3273:42;3258:58;3243:74;;3130:201;-1:-1:-1;;;;;3377:1:39;3361:14;;;3357:22;3344:36;;-1:-1:-1;2295:1352:39:o;4063:349::-;598:3770:37;;;;;;\",\n    linkReferences: {},\n  },\n  deployedBytecode: {\n    object:\n      \"\",\n    sourceMap:\n      \"598:3770:37:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1115:168:26;;;;;;:::i;:::-;;:::i;:::-;;;565:14:39;;558:22;540:41;;528:2;513:18;1115:168:26;;;;;;;;2471:98:23;;;:::i;:::-;;;;;;;:::i;3935:167::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1697:32:39;;;1679:51;;1667:2;1652:18;3935:167:23;1533:203:39;3468:406:23;;;;;;:::i;:::-;;:::i;:::-;;690:22:37;;;;;;;;;2324:25:39;;;2312:2;2297:18;690:22:37;2178:177:39;2207:100:37;;;;;;:::i;:::-;;:::i;4612:296:23:-;;;;;;:::i;:::-;;:::i;1671:428:28:-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;3329:32:39;;;3311:51;;3393:2;3378:18;;3371:34;;;;3284:18;1671:428:28;3137:274:39;4974:149:23;;;;;;:::i;:::-;;:::i;2190:219::-;;;;;;:::i;:::-;;:::i;4260:106:37:-;;;:::i;1929:204:23:-;;;;;;:::i;:::-;;:::i;1824:101:18:-;;;:::i;1201:85::-;1273:6;;-1:-1:-1;;;;;1273:6:18;1201:85;;778:24:37;;;;;-1:-1:-1;;;;;778:24:37;;;2633:102:23;;;:::i;4169:153::-;;;;;;:::i;:::-;;:::i;3070:1113:37:-;;;;;;:::i;:::-;;:::i;5189:276:23:-;;;;;;:::i;:::-;;:::i;2801:::-;;;;;;:::i;:::-;;:::i;748:24:37:-;;;;;;4388:162:23;;;;;;:::i;:::-;-1:-1:-1;;;;;4508:25:23;;;4485:4;4508:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4388:162;2074:198:18;;;;;;:::i;:::-;;:::i;808:25:37:-;;;;;;1115:168:26;1217:4;1240:36;1264:11;1240:23;:36::i;:::-;1233:43;1115:168;-1:-1:-1;;1115:168:26:o;2471:98:23:-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;-1:-1:-1;4071:24:23;;;;:15;:24;;;;;;-1:-1:-1;;;;;4071:24:23;;3935:167::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;-1:-1:-1;;;;;3605:11:23;:2;-1:-1:-1;;;;;3605:11:23;;3597:57;;;;-1:-1:-1;;;3597:57:23;;5986:2:39;3597:57:23;;;5968:21:39;6025:2;6005:18;;;5998:30;6064:34;6044:18;;;6037:62;-1:-1:-1;;;6115:18:39;;;6108:31;6156:19;;3597:57:23;;;;;;;;;719:10:30;-1:-1:-1;;;;;3686:21:23;;;;:62;;-1:-1:-1;3711:37:23;3728:5;719:10:30;4388:162:23;:::i;3711:37::-;3665:170;;;;-1:-1:-1;;;3665:170:23;;6388:2:39;3665:170:23;;;6370:21:39;6427:2;6407:18;;;6400:30;6466:34;6446:18;;;6439:62;6537:31;6517:18;;;6510:59;6586:19;;3665:170:23;6186:425:39;3665:170:23;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3538:336;3468:406;;:::o;2207:100:37:-;1094:13:18;:11;:13::i;:::-;2278:9:37::1;:22:::0;;-1:-1:-1;;;;;;2278:22:37::1;-1:-1:-1::0;;;;;2278:22:37;;;::::1;::::0;;;::::1;::::0;;2207:100::o;4612:296:23:-;4771:41;719:10:30;4804:7:23;4771:18;:41::i;:::-;4763:99;;;;-1:-1:-1;;;4763:99:23;;;;;;;:::i;:::-;4873:28;4883:4;4889:2;4893:7;4873:9;:28::i;1671:428:28:-;1766:7;1823:26;;;:17;:26;;;;;;;;1794:55;;;;;;;;;-1:-1:-1;;;;;1794:55:28;;;;;-1:-1:-1;;;1794:55:28;;;-1:-1:-1;;;;;1794:55:28;;;;;;;;1766:7;;1860:90;;-1:-1:-1;1910:29:28;;;;;;;;;-1:-1:-1;1910:29:28;-1:-1:-1;;;;;1910:29:28;;;;-1:-1:-1;;;1910:29:28;;-1:-1:-1;;;;;1910:29:28;;;;;1860:90;1997:23;;;;1960:21;;2457:5;;1985:35;;-1:-1:-1;;;;;1985:35:28;:9;:35;:::i;:::-;1984:57;;;;:::i;:::-;2060:16;;;;;-1:-1:-1;1671:428:28;;-1:-1:-1;;;;1671:428:28:o;4974:149:23:-;5077:39;5094:4;5100:2;5104:7;5077:39;;;;;;;;;;;;:16;:39::i;2190:219::-;2262:7;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:23;;2324:56;;;;-1:-1:-1;;;2324:56:23;;7891:2:39;2324:56:23;;;7873:21:39;7930:2;7910:18;;;7903:30;-1:-1:-1;;;7949:18:39;;;7942:54;8013:18;;2324:56:23;7689:348:39;4260:106:37;4302:7;4340:19;:9;918:14:31;;827:112;4340:19:37;4328:9;;:31;;;;:::i;:::-;4321:38;;4260:106;:::o;1929:204:23:-;2001:7;-1:-1:-1;;;;;2028:19:23;;2020:73;;;;-1:-1:-1;;;2020:73:23;;8377:2:39;2020:73:23;;;8359:21:39;8416:2;8396:18;;;8389:30;8455:34;8435:18;;;8428:62;-1:-1:-1;;;8506:18:39;;;8499:39;8555:19;;2020:73:23;8175:405:39;2020:73:23;-1:-1:-1;;;;;;2110:16:23;;;;;:9;:16;;;;;;;1929:204::o;1824:101:18:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;2633:102:23:-;2689:13;2721:7;2714:14;;;;;:::i;4169:153::-;4263:52;719:10:30;4296:8:23;4306;4263:18;:52::i;:::-;4169:153;;:::o;3070:1113:37:-;3148:7;3211:11;:9;:11::i;:::-;3198:8;3176:19;:9;918:14:31;;827:112;3176:19:37;:30;;;;:::i;:::-;3175:47;;3167:95;;;;-1:-1:-1;;;3167:95:37;;8917:2:39;3167:95:37;;;8899:21:39;8956:2;8936:18;;;8929:30;8995:34;8975:18;;;8968:62;-1:-1:-1;;;9046:18:39;;;9039:33;9089:19;;3167:95:37;8715:399:39;3167:95:37;3300:9;;3379:10;;3286;-1:-1:-1;;;;;3300:9:37;;;3286:23;;;3273:10;;3379;3366:8;;3342:21;;:9;:21::i;:::-;:32;;;;:::i;:::-;3341:48;;3319:70;;3404:5;:23;;;;;3413:14;3404:23;3400:751;;;3448:9;3443:88;3467:8;3463:1;:12;3443:88;;;3500:16;3505:10;3500:4;:16::i;:::-;-1:-1:-1;3477:3:37;;;;:::i;:::-;;;;3443:88;;;;3400:751;;;3561:16;3590:8;3580:7;;:18;;;;:::i;:::-;3637:10;;:47;;-1:-1:-1;;;3637:47:37;;3658:10;3637:47;;;9471:34:39;3678:4:37;9521:18:39;;;9514:43;3561:37:37;;-1:-1:-1;3561:37:37;;-1:-1:-1;;;;;3637:10:37;;;;:20;;9406:18:39;;3637:47:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:59;;3612:176;;;;-1:-1:-1;;;3612:176:37;;9959:2:39;3612:176:37;;;9941:21:39;9998:2;9978:18;;;9971:30;10037:34;10017:18;;;10010:62;10108:28;10088:18;;;10081:56;10154:19;;3612:176:37;9757:422:39;3612:176:37;3874:8;3864:7;;:18;;;;:::i;:::-;3827:10;;:32;;-1:-1:-1;;;3827:32:37;;3848:10;3827:32;;;1679:51:39;-1:-1:-1;;;;;3827:10:37;;;;:20;;1652:18:39;;3827:32:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:56;;3802:169;;;;-1:-1:-1;;;3802:169:37;;10386:2:39;3802:169:37;;;10368:21:39;10425:2;10405:18;;;10398:30;10464:34;10444:18;;;10437:62;-1:-1:-1;;;10515:18:39;;;10508:52;10577:19;;3802:169:37;10184:418:39;3802:169:37;3990:9;3985:88;4009:8;4005:1;:12;3985:88;;;4042:16;4047:10;4042:4;:16::i;:::-;-1:-1:-1;4019:3:37;;;;:::i;:::-;;;;3985:88;;;-1:-1:-1;4086:10:37;;-1:-1:-1;;;;;4086:10:37;:23;4110:10;4122:7;1273:6:18;;-1:-1:-1;;;;;1273:6:18;;1201:85;4122:7:37;4086:54;;-1:-1:-1;;;;;;4086:54:37;;;;;;;-1:-1:-1;;;;;10865:15:39;;;4086:54:37;;;10847:34:39;10917:15;;10897:18;;;10890:43;10949:18;;;10942:34;;;10782:18;;4086:54:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3547:604;3400:751;-1:-1:-1;4168:8:37;;3070:1113;-1:-1:-1;;;3070:1113:37:o;5189:276:23:-;5319:41;719:10:30;5352:7:23;5319:18;:41::i;:::-;5311:99;;;;-1:-1:-1;;;5311:99:23;;;;;;;:::i;:::-;5420:38;5434:4;5440:2;5444:7;5453:4;5420:13;:38::i;:::-;5189:276;;;;:::o;2801:::-;2874:13;2899:23;2914:7;2899:14;:23::i;:::-;2933:21;2957:10;3395:9;;;;;;;;;-1:-1:-1;3395:9:23;;;3319:92;2957:10;2933:34;;3008:1;2990:7;2984:21;:25;:86;;;;;;;;;;;;;;;;;3036:7;3045:18;:7;:16;:18::i;:::-;3019:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2984:86;2977:93;2801:276;-1:-1:-1;;;2801:276:23:o;2074:198:18:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:18;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:18;;11940:2:39;2154:73:18::1;::::0;::::1;11922:21:39::0;11979:2;11959:18;;;11952:30;12018:34;11998:18;;;11991:62;-1:-1:-1;;;12069:18:39;;;12062:36;12115:19;;2154:73:18::1;11738:402:39::0;2154:73:18::1;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;1570:300:23:-;1672:4;-1:-1:-1;;;;;;1707:40:23;;-1:-1:-1;;;1707:40:23;;:104;;-1:-1:-1;;;;;;;1763:48:23;;-1:-1:-1;;;1763:48:23;1707:104;:156;;;;1827:36;1851:11;1827:23;:36::i;13240:133::-;7185:4;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:23;13313:53;;;;-1:-1:-1;;;13313:53:23;;7891:2:39;13313:53:23;;;7873:21:39;7930:2;7910:18;;;7903:30;-1:-1:-1;;;7949:18:39;;;7942:54;8013:18;;13313:53:23;7689:348:39;12572:171:23;12646:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;12646:29:23;-1:-1:-1;;;;;12646:29:23;;;;;;;;:24;;12699:23;12646:24;12699:14;:23::i;:::-;-1:-1:-1;;;;;12690:46:23;;;;;;;;;;;12572:171;;:::o;1359:130:18:-;1273:6;;-1:-1:-1;;;;;1273:6:18;719:10:30;1422:23:18;1414:68;;;;-1:-1:-1;;;1414:68:18;;12347:2:39;1414:68:18;;;12329:21:39;;;12366:18;;;12359:30;12425:34;12405:18;;;12398:62;12477:18;;1414:68:18;12145:356:39;7404:261:23;7497:4;7513:13;7529:23;7544:7;7529:14;:23::i;:::-;7513:39;;7581:5;-1:-1:-1;;;;;7570:16:23;:7;-1:-1:-1;;;;;7570:16:23;;:52;;;-1:-1:-1;;;;;;4508:25:23;;;4485:4;4508:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;7590:32;7570:87;;;;7650:7;-1:-1:-1;;;;;7626:31:23;:20;7638:7;7626:11;:20::i;:::-;-1:-1:-1;;;;;7626:31:23;;7570:87;7562:96;7404:261;-1:-1:-1;;;;7404:261:23:o;11257:1203::-;11381:4;-1:-1:-1;;;;;11354:31:23;:23;11369:7;11354:14;:23::i;:::-;-1:-1:-1;;;;;11354:31:23;;11346:81;;;;-1:-1:-1;;;11346:81:23;;;;;;;:::i;:::-;-1:-1:-1;;;;;11445:16:23;;11437:65;;;;-1:-1:-1;;;11437:65:23;;13114:2:39;11437:65:23;;;13096:21:39;13153:2;13133:18;;;13126:30;13192:34;13172:18;;;13165:62;-1:-1:-1;;;13243:18:39;;;13236:34;13287:19;;11437:65:23;12912:400:39;11437:65:23;11682:4;-1:-1:-1;;;;;11655:31:23;:23;11670:7;11655:14;:23::i;:::-;-1:-1:-1;;;;;11655:31:23;;11647:81;;;;-1:-1:-1;;;11647:81:23;;;;;;;:::i;:::-;11797:24;;;;:15;:24;;;;;;;;11790:31;;-1:-1:-1;;;;;;11790:31:23;;;;;;-1:-1:-1;;;;;12265:15:23;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;12265:20:23;;;12299:13;;;;;;;;;:18;;11790:31;12299:18;;;12337:16;;;:7;:16;;;;;;:21;;;;;;;;;;12374:27;;11813:7;;12374:27;;;3538:336;3468:406;;:::o;2426:187:18:-;2518:6;;;-1:-1:-1;;;;;2534:17:18;;;-1:-1:-1;;;;;;2534:17:18;;;;;;;2566:40;;2518:6;;;2534:17;2518:6;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;12879:277:23:-;12999:8;-1:-1:-1;;;;;12990:17:23;:5;-1:-1:-1;;;;;12990:17:23;;12982:55;;;;-1:-1:-1;;;12982:55:23;;13519:2:39;12982:55:23;;;13501:21:39;13558:2;13538:18;;;13531:30;13597:27;13577:18;;;13570:55;13642:18;;12982:55:23;13317:349:39;12982:55:23;-1:-1:-1;;;;;13047:25:23;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;13047:46:23;;;;;;;;;;13108:41;;540::39;;;13108::23;;513:18:39;13108:41:23;;;;;;;12879:277;;;:::o;2537:199:37:-;2588:7;2607:13;2623:19;:9;918:14:31;;827:112;2623:19:37;2607:35;;2652:24;2658:10;2670:5;2652;:24::i;:::-;2686:21;:9;1032:19:31;;1050:1;1032:19;;;945:123;6326:267:23;6438:28;6448:4;6454:2;6458:7;6438:9;:28::i;:::-;6484:47;6507:4;6513:2;6517:7;6526:4;6484:22;:47::i;:::-;6476:110;;;;-1:-1:-1;;;6476:110:23;;;;;;;:::i;447:696:32:-;503:13;552:14;569:17;580:5;569:10;:17::i;:::-;589:1;569:21;552:38;;604:20;638:6;627:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;627:18:32;-1:-1:-1;604:41:32;-1:-1:-1;765:28:32;;;781:2;765:28;820:280;-1:-1:-1;;851:5:32;-1:-1:-1;;;985:2:32;974:14;;969:30;851:5;956:44;1044:2;1035:11;;;-1:-1:-1;1064:21:32;820:280;1064:21;-1:-1:-1;1120:6:32;447:696;-1:-1:-1;;;447:696:32:o;1408:213:28:-;1510:4;-1:-1:-1;;;;;;1533:41:28;;-1:-1:-1;;;1533:41:28;;:81;;-1:-1:-1;;;;;;;;;;937:40:33;;;1578:36:28;829:155:33;8925:920:23;-1:-1:-1;;;;;9004:16:23;;8996:61;;;;-1:-1:-1;;;8996:61:23;;14292:2:39;8996:61:23;;;14274:21:39;;;14311:18;;;14304:30;14370:34;14350:18;;;14343:62;14422:18;;8996:61:23;14090:356:39;8996:61:23;7185:4;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:23;7208:31;9067:58;;;;-1:-1:-1;;;9067:58:23;;14653:2:39;9067:58:23;;;14635:21:39;14692:2;14672:18;;;14665:30;14731;14711:18;;;14704:58;14779:18;;9067:58:23;14451:352:39;9067:58:23;7185:4;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:23;7208:31;9271:58;;;;-1:-1:-1;;;9271:58:23;;14653:2:39;9271:58:23;;;14635:21:39;14692:2;14672:18;;;14665:30;14731;14711:18;;;14704:58;14779:18;;9271:58:23;14451:352:39;9271:58:23;-1:-1:-1;;;;;9671:13:23;;;;;;:9;:13;;;;;;;;:18;;9688:1;9671:18;;;9710:16;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9710:21:23;;;;;9747:33;9718:7;;9671:13;;9747:33;;9671:13;;9747:33;4169:153;;:::o;13925:831::-;14074:4;-1:-1:-1;;;;;14094:13:23;;1702:19:29;:23;14090:660:23;;14129:71;;-1:-1:-1;;;14129:71:23;;-1:-1:-1;;;;;14129:36:23;;;;;:71;;719:10:30;;14180:4:23;;14186:7;;14195:4;;14129:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14129:71:23;;;;;;;;-1:-1:-1;;14129:71:23;;;;;;;;;;;;:::i;:::-;;;14125:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14367:6;:13;14384:1;14367:18;14363:321;;14409:60;;-1:-1:-1;;;14409:60:23;;;;;;;:::i;14363:321::-;14636:6;14630:13;14621:6;14617:2;14613:15;14606:38;14125:573;-1:-1:-1;;;;;;14250:51:23;-1:-1:-1;;;14250:51:23;;-1:-1:-1;14243:58:23;;14090:660;-1:-1:-1;14735:4:23;13925:831;;;;;;:::o;10139:916:35:-;10192:7;;-1:-1:-1;;;10267:17:35;;10263:103;;-1:-1:-1;;;10304:17:35;;;-1:-1:-1;10349:2:35;10339:12;10263:103;10392:8;10383:5;:17;10379:103;;10429:8;10420:17;;;-1:-1:-1;10465:2:35;10455:12;10379:103;10508:8;10499:5;:17;10495:103;;10545:8;10536:17;;;-1:-1:-1;10581:2:35;10571:12;10495:103;10624:7;10615:5;:16;10611:100;;10660:7;10651:16;;;-1:-1:-1;10695:1:35;10685:11;10611:100;10737:7;10728:5;:16;10724:100;;10773:7;10764:16;;;-1:-1:-1;10808:1:35;10798:11;10724:100;10850:7;10841:5;:16;10837:100;;10886:7;10877:16;;;-1:-1:-1;10921:1:35;10911:11;10837:100;10963:7;10954:5;:16;10950:66;;11000:1;10990:11;11042:6;10139:916;-1:-1:-1;;10139:916:35:o;14:131:39:-;-1:-1:-1;;;;;;88:32:39;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:39;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:39;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:39:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:180::-;1407:6;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;-1:-1:-1;1499:23:39;;1348:180;-1:-1:-1;1348:180:39:o;1741:173::-;1809:20;;-1:-1:-1;;;;;1858:31:39;;1848:42;;1838:70;;1904:1;1901;1894:12;1838:70;1741:173;;;:::o;1919:254::-;1987:6;1995;2048:2;2036:9;2027:7;2023:23;2019:32;2016:52;;;2064:1;2061;2054:12;2016:52;2087:29;2106:9;2087:29;:::i;:::-;2077:39;2163:2;2148:18;;;;2135:32;;-1:-1:-1;;;1919:254:39:o;2360:186::-;2419:6;2472:2;2460:9;2451:7;2447:23;2443:32;2440:52;;;2488:1;2485;2478:12;2440:52;2511:29;2530:9;2511:29;:::i;2551:328::-;2628:6;2636;2644;2697:2;2685:9;2676:7;2672:23;2668:32;2665:52;;;2713:1;2710;2703:12;2665:52;2736:29;2755:9;2736:29;:::i;:::-;2726:39;;2784:38;2818:2;2807:9;2803:18;2784:38;:::i;:::-;2774:48;;2869:2;2858:9;2854:18;2841:32;2831:42;;2551:328;;;;;:::o;2884:248::-;2952:6;2960;3013:2;3001:9;2992:7;2988:23;2984:32;2981:52;;;3029:1;3026;3019:12;2981:52;-1:-1:-1;;3052:23:39;;;3122:2;3107:18;;;3094:32;;-1:-1:-1;2884:248:39:o;3416:118::-;3502:5;3495:13;3488:21;3481:5;3478:32;3468:60;;3524:1;3521;3514:12;3539:315;3604:6;3612;3665:2;3653:9;3644:7;3640:23;3636:32;3633:52;;;3681:1;3678;3671:12;3633:52;3704:29;3723:9;3704:29;:::i;:::-;3694:39;;3783:2;3772:9;3768:18;3755:32;3796:28;3818:5;3796:28;:::i;:::-;3843:5;3833:15;;;3539:315;;;;;:::o;3859:127::-;3920:10;3915:3;3911:20;3908:1;3901:31;3951:4;3948:1;3941:15;3975:4;3972:1;3965:15;3991:1138;4086:6;4094;4102;4110;4163:3;4151:9;4142:7;4138:23;4134:33;4131:53;;;4180:1;4177;4170:12;4131:53;4203:29;4222:9;4203:29;:::i;:::-;4193:39;;4251:38;4285:2;4274:9;4270:18;4251:38;:::i;:::-;4241:48;;4336:2;4325:9;4321:18;4308:32;4298:42;;4391:2;4380:9;4376:18;4363:32;4414:18;4455:2;4447:6;4444:14;4441:34;;;4471:1;4468;4461:12;4441:34;4509:6;4498:9;4494:22;4484:32;;4554:7;4547:4;4543:2;4539:13;4535:27;4525:55;;4576:1;4573;4566:12;4525:55;4612:2;4599:16;4634:2;4630;4627:10;4624:36;;;4640:18;;:::i;:::-;4715:2;4709:9;4683:2;4769:13;;-1:-1:-1;;4765:22:39;;;4789:2;4761:31;4757:40;4745:53;;;4813:18;;;4833:22;;;4810:46;4807:72;;;4859:18;;:::i;:::-;4899:10;4895:2;4888:22;4934:2;4926:6;4919:18;4974:7;4969:2;4964;4960;4956:11;4952:20;4949:33;4946:53;;;4995:1;4992;4985:12;4946:53;5051:2;5046;5042;5038:11;5033:2;5025:6;5021:15;5008:46;5096:1;5091:2;5086;5078:6;5074:15;5070:24;5063:35;5117:6;5107:16;;;;;;;3991:1138;;;;;;;:::o;5134:260::-;5202:6;5210;5263:2;5251:9;5242:7;5238:23;5234:32;5231:52;;;5279:1;5276;5269:12;5231:52;5302:29;5321:9;5302:29;:::i;:::-;5292:39;;5350:38;5384:2;5373:9;5369:18;5350:38;:::i;:::-;5340:48;;5134:260;;;;;:::o;5399:380::-;5478:1;5474:12;;;;5521;;;5542:61;;5596:4;5588:6;5584:17;5574:27;;5542:61;5649:2;5641:6;5638:14;5618:18;5615:38;5612:161;;5695:10;5690:3;5686:20;5683:1;5676:31;5730:4;5727:1;5720:15;5758:4;5755:1;5748:15;5612:161;;5399:380;;;:::o;6616:409::-;6818:2;6800:21;;;6857:2;6837:18;;;6830:30;6896:34;6891:2;6876:18;;6869:62;-1:-1:-1;;;6962:2:39;6947:18;;6940:43;7015:3;7000:19;;6616:409::o;7030:127::-;7091:10;7086:3;7082:20;7079:1;7072:31;7122:4;7119:1;7112:15;7146:4;7143:1;7136:15;7162:168;7235:9;;;7266;;7283:15;;;7277:22;;7263:37;7253:71;;7304:18;;:::i;7467:217::-;7507:1;7533;7523:132;;7577:10;7572:3;7568:20;7565:1;7558:31;7612:4;7609:1;7602:15;7640:4;7637:1;7630:15;7523:132;-1:-1:-1;7669:9:39;;7467:217::o;8042:128::-;8109:9;;;8130:11;;;8127:37;;;8144:18;;:::i;8585:125::-;8650:9;;;8671:10;;;8668:36;;;8684:18;;:::i;9119:135::-;9158:3;9179:17;;;9176:43;;9199:18;;:::i;:::-;-1:-1:-1;9246:1:39;9235:13;;9119:135::o;9568:184::-;9638:6;9691:2;9679:9;9670:7;9666:23;9662:32;9659:52;;;9707:1;9704;9697:12;9659:52;-1:-1:-1;9730:16:39;;9568:184;-1:-1:-1;9568:184:39:o;10987:245::-;11054:6;11107:2;11095:9;11086:7;11082:23;11078:32;11075:52;;;11123:1;11120;11113:12;11075:52;11155:9;11149:16;11174:28;11196:5;11174:28;:::i;11237:496::-;11416:3;11454:6;11448:13;11470:66;11529:6;11524:3;11517:4;11509:6;11505:17;11470:66;:::i;:::-;11599:13;;11558:16;;;;11621:70;11599:13;11558:16;11668:4;11656:17;;11621:70;:::i;:::-;11707:20;;11237:496;-1:-1:-1;;;;11237:496:39:o;12506:401::-;12708:2;12690:21;;;12747:2;12727:18;;;12720:30;12786:34;12781:2;12766:18;;12759:62;-1:-1:-1;;;12852:2:39;12837:18;;12830:35;12897:3;12882:19;;12506:401::o;13671:414::-;13873:2;13855:21;;;13912:2;13892:18;;;13885:30;13951:34;13946:2;13931:18;;13924:62;-1:-1:-1;;;14017:2:39;14002:18;;13995:48;14075:3;14060:19;;13671:414::o;14808:489::-;-1:-1:-1;;;;;15077:15:39;;;15059:34;;15129:15;;15124:2;15109:18;;15102:43;15176:2;15161:18;;15154:34;;;15224:3;15219:2;15204:18;;15197:31;;;15002:4;;15245:46;;15271:19;;15263:6;15245:46;:::i;:::-;15237:54;14808:489;-1:-1:-1;;;;;;14808:489:39:o;15302:249::-;15371:6;15424:2;15412:9;15403:7;15399:23;15395:32;15392:52;;;15440:1;15437;15430:12;15392:52;15472:9;15466:16;15491:30;15515:5;15491:30;:::i\",\n    linkReferences: {},\n  },\n  methodIdentifiers: {\n    \"approve(address,uint256)\": \"095ea7b3\",\n    \"balanceOf(address)\": \"70a08231\",\n    \"devMaxMint()\": \"fcb78699\",\n    \"devWallet()\": \"8ea5220f\",\n    \"getApproved(uint256)\": \"081812fc\",\n    \"isApprovedForAll(address,address)\": \"e985e9c5\",\n    \"maxSupply()\": \"d5abeb01\",\n    \"mintFee()\": \"13966db5\",\n    \"mintMultiple(address,uint256)\": \"b3fa4a4c\",\n    \"name()\": \"06fdde03\",\n    \"owner()\": \"8da5cb5b\",\n    \"ownerOf(uint256)\": \"6352211e\",\n    \"renounceOwnership()\": \"715018a6\",\n    \"royaltyInfo(uint256,uint256)\": \"2a55205a\",\n    \"safeTransferFrom(address,address,uint256)\": \"42842e0e\",\n    \"safeTransferFrom(address,address,uint256,bytes)\": \"b88d4fde\",\n    \"setApprovalForAll(address,bool)\": \"a22cb465\",\n    \"setDevWallet(address)\": \"1f53ac02\",\n    \"supportsInterface(bytes4)\": \"01ffc9a7\",\n    \"symbol()\": \"95d89b41\",\n    \"tokenURI(uint256)\": \"c87b56dd\",\n    \"transferFrom(address,address,uint256)\": \"23b872dd\",\n    \"transferOwnership(address)\": \"f2fde38b\",\n    \"unclaimed()\": \"669416b8\",\n  },\n  rawMetadata:\n    '{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_royaltyReceiver\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"_royaltyFeeNumerator\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"_stablecoinAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_mintFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_devWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_devMaxMint\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devMaxMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"mintMultiple\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devWallet\",\"type\":\"address\"}],\"name\":\"setDevWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unclaimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"AlgoBull NFT Minting Contract that implements the following properties: - Fixed Stablecoin fee per 1 mint. - Fixed Supply. - Mint multiple NFTs. - Apply royalties via ERC2981. - Support a dev wallet\\'s ability to waive minting fees up to a set amount.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the AlgoBull NFT minting contract.\",\"params\":{\"_devMaxMint\":\"The limit for how many free mints the dev wallet can perform.\",\"_devWallet\":\"The dev wallet address which is allow to mint for free up to a limit.\",\"_maxSupply\":\"The capped supply of the mintable NFTs.\",\"_mintFee\":\"The stablecoin quantity fee charged per minting 1 NFT.\",\"_royaltyFeeNumerator\":\"The royalty fee in basis points.\",\"_royaltyReceiver\":\"The account that will receive royalties.\",\"_stablecoinAddress\":\"The address of stablecoin that will be used for paying fees.\"}},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"mintMultiple(address,uint256)\":{\"details\":\"Mints multiple tokens and sends fee amount to owner. The sender must have an adequate balance of stablecoin to pay the fee. minting should not push the total tokens minted above the max token supply.\",\"params\":{\"_recipient\":\"The address of the account that will receive the minted NFT.\"}},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"setDevWallet(address)\":{\"details\":\"Allows owner to set a dev wallet.\",\"params\":{\"_devWallet\":\"the wallet that will be able to mint without fees up to the devMaxMint.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unclaimed()\":{\"details\":\"Get remaining unclaimed NFTs left to mint.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/AlgoBull.sol\":\"AlgoBull\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0x3976825a61df20457730b79ad0ac9c8908e3c7978ed9bf090c67137c91256b5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f3fe369b6d0e101844b425f1d08e35bf512962d0590b1f80decb8130c9a6890\",\"dweb:/ipfs/QmXCan6wX4qwJkdR1VvsYLeq8JTB2YxRHLucpuXpsKAvzQ\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005\",\"dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Royalty.sol\":{\"keccak256\":\"0x93d24eea4e6ddbed53ef161567ae62bfd0c3aebb7b48f37e4dbeb7a937108866\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d2ed35e16e296fcc3d2311d584e5006ddc188d7d76198e8e750193750b65f9c4\",\"dweb:/ipfs/QmYzLcEgZ4TSBJNPBxhq9BdLQC89w3zyWH88rw3DBy4MxY\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"lib/openzeppelin-contracts/contracts/token/common/ERC2981.sol\":{\"keccak256\":\"0x990a4133f88b07f92724903f42bb25cdaeca0cf255fb48df26568c40e7c919c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d37620d637eabaa4f4a5deca2d81ee9af18d3c7818acf9091cf15658932a1233\",\"dweb:/ipfs/QmVc3jtXfYFoFyeUwvSo55ZbRt6sVjYfJWafJBPZoAsFvF\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"src/AlgoBull.sol\":{\"keccak256\":\"0x1ee386a2fa13ddb7af7cab2f773c77f88cc01169f1e11d83e8c595f2f33ba5a8\",\"urls\":[\"bzz-raw://3df103365cfaed5f8eb009ec9257fd6d654b826bac48111eb7e058c226307e37\",\"dweb:/ipfs/QmYqBhVJxUyr5DkG4fdxpyHP9TvxMpqTbNMbsxK6pDh7XG\"]}},\"version\":1}',\n  metadata: {\n    compiler: {\n      version: \"0.8.17+commit.8df45f5f\",\n    },\n    language: \"Solidity\",\n    output: {\n      abi: [\n        {\n          inputs: [\n            {\n              internalType: \"address\",\n              name: \"_royaltyReceiver\",\n              type: \"address\",\n            },\n            {\n              internalType: \"uint96\",\n              name: \"_royaltyFeeNumerator\",\n              type: \"uint96\",\n            },\n            {\n              internalType: \"address\",\n              name: \"_stablecoinAddress\",\n              type: \"address\",\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_mintFee\",\n              type: \"uint256\",\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_maxSupply\",\n              type: \"uint256\",\n            },\n            {\n              internalType: \"address\",\n              name: \"_devWallet\",\n              type: \"address\",\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_devMaxMint\",\n              type: \"uint256\",\n            },\n          ],\n          stateMutability: \"nonpayable\",\n          type: \"constructor\",\n        },\n        {\n          inputs: [\n            {\n              internalType: \"address\",\n              name: \"owner\",\n              type: \"address\",\n              indexed: true,\n            },\n            {\n              internalType: \"address\",\n              name: \"approved\",\n              type: \"address\",\n              indexed: true,\n            },\n            {\n              internalType: \"uint256\",\n              name: \"tokenId\",\n              type: \"uint256\",\n              indexed: true,\n            },\n          ],\n          type: \"event\",\n          name: \"Approval\",\n          anonymous: false,\n        },\n        {\n          inputs: [\n            {\n              internalType: \"address\",\n              name: \"owner\",\n              type: \"address\",\n              indexed: true,\n            },\n            {\n              internalType: \"address\",\n              name: \"operator\",\n              type: \"address\",\n              indexed: true,\n            },\n            {\n              internalType: \"bool\",\n              name: \"approved\",\n              type: \"bool\",\n              indexed: false,\n            },\n          ],\n          type: \"event\",\n          name: \"ApprovalForAll\",\n          anonymous: false,\n        },\n        {\n          inputs: [\n            {\n              internalType: \"address\",\n              name: \"previousOwner\",\n              type: \"address\",\n              indexed: true,\n            },\n            {\n              internalType: \"address\",\n              name: \"newOwner\",\n              type: \"address\",\n              indexed: true,\n            },\n          ],\n          type: \"event\",\n          name: \"OwnershipTransferred\",\n          anonymous: false,\n        },\n        {\n          inputs: [\n            {\n              internalType: \"address\",\n              name: \"from\",\n              type: \"address\",\n              indexed: true,\n            },\n            {\n              internalType: \"address\",\n              name: \"to\",\n              type: \"address\",\n              indexed: true,\n            },\n            {\n              internalType: \"uint256\",\n              name: \"tokenId\",\n              type: \"uint256\",\n              indexed: true,\n            },\n          ],\n          type: \"event\",\n          name: \"Transfer\",\n          anonymous: false,\n        },\n        {\n          inputs: [\n            {\n              internalType: \"address\",\n              name: \"to\",\n              type: \"address\",\n            },\n            {\n              internalType: \"uint256\",\n              name: \"tokenId\",\n              type: \"uint256\",\n            },\n          ],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n          name: \"approve\",\n        },\n        {\n          inputs: [\n            {\n              internalType: \"address\",\n              name: \"owner\",\n              type: \"address\",\n            },\n          ],\n          stateMutability: \"view\",\n          type: \"function\",\n          name: \"balanceOf\",\n          outputs: [\n            {\n              internalType: \"uint256\",\n              name: \"\",\n              type: \"uint256\",\n            },\n          ],\n        },\n        {\n          inputs: [],\n          stateMutability: \"view\",\n          type: \"function\",\n          name: \"devMaxMint\",\n          outputs: [\n            {\n              internalType: \"uint256\",\n              name: \"\",\n              type: \"uint256\",\n            },\n          ],\n        },\n        {\n          inputs: [],\n          stateMutability: \"view\",\n          type: \"function\",\n          name: \"devWallet\",\n          outputs: [\n            {\n              internalType: \"address\",\n              name: \"\",\n              type: \"address\",\n            },\n          ],\n        },\n        {\n          inputs: [\n            {\n              internalType: \"uint256\",\n              name: \"tokenId\",\n              type: \"uint256\",\n            },\n          ],\n          stateMutability: \"view\",\n          type: \"function\",\n          name: \"getApproved\",\n          outputs: [\n            {\n              internalType: \"address\",\n              name: \"\",\n              type: \"address\",\n            },\n          ],\n        },\n        {\n          inputs: [\n            {\n              internalType: \"address\",\n              name: \"owner\",\n              type: \"address\",\n            },\n            {\n              internalType: \"address\",\n              name: \"operator\",\n              type: \"address\",\n            },\n          ],\n          stateMutability: \"view\",\n          type: \"function\",\n          name: \"isApprovedForAll\",\n          outputs: [\n            {\n              internalType: \"bool\",\n              name: \"\",\n              type: \"bool\",\n            },\n          ],\n        },\n        {\n          inputs: [],\n          stateMutability: \"view\",\n          type: \"function\",\n          name: \"maxSupply\",\n          outputs: [\n            {\n              internalType: \"uint256\",\n              name: \"\",\n              type: \"uint256\",\n            },\n          ],\n        },\n        {\n          inputs: [],\n          stateMutability: \"view\",\n          type: \"function\",\n          name: \"mintFee\",\n          outputs: [\n            {\n              internalType: \"uint256\",\n              name: \"\",\n              type: \"uint256\",\n            },\n          ],\n        },\n        {\n          inputs: [\n            {\n              internalType: \"address\",\n              name: \"_recipient\",\n              type: \"address\",\n            },\n            {\n              internalType: \"uint256\",\n              name: \"quantity\",\n              type: \"uint256\",\n            },\n          ],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n          name: \"mintMultiple\",\n          outputs: [\n            {\n              internalType: \"uint256\",\n              name: \"\",\n              type: \"uint256\",\n            },\n          ],\n        },\n        {\n          inputs: [],\n          stateMutability: \"view\",\n          type: \"function\",\n          name: \"name\",\n          outputs: [\n            {\n              internalType: \"string\",\n              name: \"\",\n              type: \"string\",\n            },\n          ],\n        },\n        {\n          inputs: [],\n          stateMutability: \"view\",\n          type: \"function\",\n          name: \"owner\",\n          outputs: [\n            {\n              internalType: \"address\",\n              name: \"\",\n              type: \"address\",\n            },\n          ],\n        },\n        {\n          inputs: [\n            {\n              internalType: \"uint256\",\n              name: \"tokenId\",\n              type: \"uint256\",\n            },\n          ],\n          stateMutability: \"view\",\n          type: \"function\",\n          name: \"ownerOf\",\n          outputs: [\n            {\n              internalType: \"address\",\n              name: \"\",\n              type: \"address\",\n            },\n          ],\n        },\n        {\n          inputs: [],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n          name: \"renounceOwnership\",\n        },\n        {\n          inputs: [\n            {\n              internalType: \"uint256\",\n              name: \"tokenId\",\n              type: \"uint256\",\n            },\n            {\n              internalType: \"uint256\",\n              name: \"salePrice\",\n              type: \"uint256\",\n            },\n          ],\n          stateMutability: \"view\",\n          type: \"function\",\n          name: \"royaltyInfo\",\n          outputs: [\n            {\n              internalType: \"address\",\n              name: \"\",\n              type: \"address\",\n            },\n            {\n              internalType: \"uint256\",\n              name: \"\",\n              type: \"uint256\",\n            },\n          ],\n        },\n        {\n          inputs: [\n            {\n              internalType: \"address\",\n              name: \"from\",\n              type: \"address\",\n            },\n            {\n              internalType: \"address\",\n              name: \"to\",\n              type: \"address\",\n            },\n            {\n              internalType: \"uint256\",\n              name: \"tokenId\",\n              type: \"uint256\",\n            },\n          ],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n          name: \"safeTransferFrom\",\n        },\n        {\n          inputs: [\n            {\n              internalType: \"address\",\n              name: \"from\",\n              type: \"address\",\n            },\n            {\n              internalType: \"address\",\n              name: \"to\",\n              type: \"address\",\n            },\n            {\n              internalType: \"uint256\",\n              name: \"tokenId\",\n              type: \"uint256\",\n            },\n            {\n              internalType: \"bytes\",\n              name: \"data\",\n              type: \"bytes\",\n            },\n          ],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n          name: \"safeTransferFrom\",\n        },\n        {\n          inputs: [\n            {\n              internalType: \"address\",\n              name: \"operator\",\n              type: \"address\",\n            },\n            {\n              internalType: \"bool\",\n              name: \"approved\",\n              type: \"bool\",\n            },\n          ],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n          name: \"setApprovalForAll\",\n        },\n        {\n          inputs: [\n            {\n              internalType: \"address\",\n              name: \"_devWallet\",\n              type: \"address\",\n            },\n          ],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n          name: \"setDevWallet\",\n        },\n        {\n          inputs: [\n            {\n              internalType: \"bytes4\",\n              name: \"interfaceId\",\n              type: \"bytes4\",\n            },\n          ],\n          stateMutability: \"view\",\n          type: \"function\",\n          name: \"supportsInterface\",\n          outputs: [\n            {\n              internalType: \"bool\",\n              name: \"\",\n              type: \"bool\",\n            },\n          ],\n        },\n        {\n          inputs: [],\n          stateMutability: \"view\",\n          type: \"function\",\n          name: \"symbol\",\n          outputs: [\n            {\n              internalType: \"string\",\n              name: \"\",\n              type: \"string\",\n            },\n          ],\n        },\n        {\n          inputs: [\n            {\n              internalType: \"uint256\",\n              name: \"tokenId\",\n              type: \"uint256\",\n            },\n          ],\n          stateMutability: \"view\",\n          type: \"function\",\n          name: \"tokenURI\",\n          outputs: [\n            {\n              internalType: \"string\",\n              name: \"\",\n              type: \"string\",\n            },\n          ],\n        },\n        {\n          inputs: [\n            {\n              internalType: \"address\",\n              name: \"from\",\n              type: \"address\",\n            },\n            {\n              internalType: \"address\",\n              name: \"to\",\n              type: \"address\",\n            },\n            {\n              internalType: \"uint256\",\n              name: \"tokenId\",\n              type: \"uint256\",\n            },\n          ],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n          name: \"transferFrom\",\n        },\n        {\n          inputs: [\n            {\n              internalType: \"address\",\n              name: \"newOwner\",\n              type: \"address\",\n            },\n          ],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n          name: \"transferOwnership\",\n        },\n        {\n          inputs: [],\n          stateMutability: \"view\",\n          type: \"function\",\n          name: \"unclaimed\",\n          outputs: [\n            {\n              internalType: \"uint256\",\n              name: \"\",\n              type: \"uint256\",\n            },\n          ],\n        },\n      ],\n      devdoc: {\n        kind: \"dev\",\n        methods: {\n          \"approve(address,uint256)\": {\n            details: \"See {IERC721-approve}.\",\n          },\n          \"balanceOf(address)\": {\n            details: \"See {IERC721-balanceOf}.\",\n          },\n          constructor: {\n            details: \"Initializes the AlgoBull NFT minting contract.\",\n            params: {\n              _devMaxMint:\n                \"The limit for how many free mints the dev wallet can perform.\",\n              _devWallet:\n                \"The dev wallet address which is allow to mint for free up to a limit.\",\n              _maxSupply: \"The capped supply of the mintable NFTs.\",\n              _mintFee:\n                \"The stablecoin quantity fee charged per minting 1 NFT.\",\n              _royaltyFeeNumerator: \"The royalty fee in basis points.\",\n              _royaltyReceiver: \"The account that will receive royalties.\",\n              _stablecoinAddress:\n                \"The address of stablecoin that will be used for paying fees.\",\n            },\n          },\n          \"getApproved(uint256)\": {\n            details: \"See {IERC721-getApproved}.\",\n          },\n          \"isApprovedForAll(address,address)\": {\n            details: \"See {IERC721-isApprovedForAll}.\",\n          },\n          \"mintMultiple(address,uint256)\": {\n            details:\n              \"Mints multiple tokens and sends fee amount to owner. The sender must have an adequate balance of stablecoin to pay the fee. minting should not push the total tokens minted above the max token supply.\",\n            params: {\n              _recipient:\n                \"The address of the account that will receive the minted NFT.\",\n            },\n          },\n          \"name()\": {\n            details: \"See {IERC721Metadata-name}.\",\n          },\n          \"owner()\": {\n            details: \"Returns the address of the current owner.\",\n          },\n          \"ownerOf(uint256)\": {\n            details: \"See {IERC721-ownerOf}.\",\n          },\n          \"renounceOwnership()\": {\n            details:\n              \"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\",\n          },\n          \"royaltyInfo(uint256,uint256)\": {\n            details:\n              \"Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\",\n          },\n          \"safeTransferFrom(address,address,uint256)\": {\n            details: \"See {IERC721-safeTransferFrom}.\",\n          },\n          \"safeTransferFrom(address,address,uint256,bytes)\": {\n            details: \"See {IERC721-safeTransferFrom}.\",\n          },\n          \"setApprovalForAll(address,bool)\": {\n            details: \"See {IERC721-setApprovalForAll}.\",\n          },\n          \"setDevWallet(address)\": {\n            details: \"Allows owner to set a dev wallet.\",\n            params: {\n              _devWallet:\n                \"the wallet that will be able to mint without fees up to the devMaxMint.\",\n            },\n          },\n          \"supportsInterface(bytes4)\": {\n            details: \"See {IERC165-supportsInterface}.\",\n          },\n          \"symbol()\": {\n            details: \"See {IERC721Metadata-symbol}.\",\n          },\n          \"tokenURI(uint256)\": {\n            details: \"See {IERC721Metadata-tokenURI}.\",\n          },\n          \"transferFrom(address,address,uint256)\": {\n            details: \"See {IERC721-transferFrom}.\",\n          },\n          \"transferOwnership(address)\": {\n            details:\n              \"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\",\n          },\n          \"unclaimed()\": {\n            details: \"Get remaining unclaimed NFTs left to mint.\",\n          },\n        },\n        version: 1,\n      },\n      userdoc: {\n        kind: \"user\",\n        methods: {},\n        version: 1,\n      },\n    },\n    settings: {\n      remappings: [\n        \":ds-test/=lib/forge-std/lib/ds-test/src/\",\n        \":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\n        \":forge-std/=lib/forge-std/src/\",\n        \":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\n        \":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\n      ],\n      optimizer: {\n        enabled: true,\n        runs: 200,\n      },\n      metadata: {\n        bytecodeHash: \"ipfs\",\n      },\n      compilationTarget: {\n        \"src/AlgoBull.sol\": \"AlgoBull\",\n      },\n      libraries: {},\n    },\n    sources: {\n      \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\": {\n        keccak256:\n          \"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\n        urls: [\n          \"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\n          \"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\",\n        ],\n        license: \"MIT\",\n      },\n      \"lib/openzeppelin-contracts/contracts/interfaces/IERC2981.sol\": {\n        keccak256:\n          \"0x3976825a61df20457730b79ad0ac9c8908e3c7978ed9bf090c67137c91256b5c\",\n        urls: [\n          \"bzz-raw://0f3fe369b6d0e101844b425f1d08e35bf512962d0590b1f80decb8130c9a6890\",\n          \"dweb:/ipfs/QmXCan6wX4qwJkdR1VvsYLeq8JTB2YxRHLucpuXpsKAvzQ\",\n        ],\n        license: \"MIT\",\n      },\n      \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\": {\n        keccak256:\n          \"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\n        urls: [\n          \"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\n          \"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\",\n        ],\n        license: \"MIT\",\n      },\n      \"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\": {\n        keccak256:\n          \"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\n        urls: [\n          \"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\n          \"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\",\n        ],\n        license: \"MIT\",\n      },\n      \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\n        {\n          keccak256:\n            \"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\n          urls: [\n            \"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\n            \"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\",\n          ],\n          license: \"MIT\",\n        },\n      \"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\": {\n        keccak256:\n          \"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\n        urls: [\n          \"bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005\",\n          \"dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE\",\n        ],\n        license: \"MIT\",\n      },\n      \"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\": {\n        keccak256:\n          \"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\n        urls: [\n          \"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\n          \"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\",\n        ],\n        license: \"MIT\",\n      },\n      \"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\": {\n        keccak256:\n          \"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\n        urls: [\n          \"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\n          \"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\",\n        ],\n        license: \"MIT\",\n      },\n      \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Royalty.sol\":\n        {\n          keccak256:\n            \"0x93d24eea4e6ddbed53ef161567ae62bfd0c3aebb7b48f37e4dbeb7a937108866\",\n          urls: [\n            \"bzz-raw://d2ed35e16e296fcc3d2311d584e5006ddc188d7d76198e8e750193750b65f9c4\",\n            \"dweb:/ipfs/QmYzLcEgZ4TSBJNPBxhq9BdLQC89w3zyWH88rw3DBy4MxY\",\n          ],\n          license: \"MIT\",\n        },\n      \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\n        {\n          keccak256:\n            \"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\n          urls: [\n            \"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\n            \"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\",\n          ],\n          license: \"MIT\",\n        },\n      \"lib/openzeppelin-contracts/contracts/token/common/ERC2981.sol\": {\n        keccak256:\n          \"0x990a4133f88b07f92724903f42bb25cdaeca0cf255fb48df26568c40e7c919c6\",\n        urls: [\n          \"bzz-raw://d37620d637eabaa4f4a5deca2d81ee9af18d3c7818acf9091cf15658932a1233\",\n          \"dweb:/ipfs/QmVc3jtXfYFoFyeUwvSo55ZbRt6sVjYfJWafJBPZoAsFvF\",\n        ],\n        license: \"MIT\",\n      },\n      \"lib/openzeppelin-contracts/contracts/utils/Address.sol\": {\n        keccak256:\n          \"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\n        urls: [\n          \"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\n          \"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\",\n        ],\n        license: \"MIT\",\n      },\n      \"lib/openzeppelin-contracts/contracts/utils/Context.sol\": {\n        keccak256:\n          \"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\n        urls: [\n          \"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\n          \"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\",\n        ],\n        license: \"MIT\",\n      },\n      \"lib/openzeppelin-contracts/contracts/utils/Counters.sol\": {\n        keccak256:\n          \"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\n        urls: [\n          \"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\n          \"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\",\n        ],\n        license: \"MIT\",\n      },\n      \"lib/openzeppelin-contracts/contracts/utils/Strings.sol\": {\n        keccak256:\n          \"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\n        urls: [\n          \"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\n          \"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\",\n        ],\n        license: \"MIT\",\n      },\n      \"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\": {\n        keccak256:\n          \"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\n        urls: [\n          \"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\n          \"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\",\n        ],\n        license: \"MIT\",\n      },\n      \"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\": {\n        keccak256:\n          \"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\n        urls: [\n          \"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\n          \"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\",\n        ],\n        license: \"MIT\",\n      },\n      \"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\": {\n        keccak256:\n          \"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\n        urls: [\n          \"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\n          \"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\",\n        ],\n        license: \"MIT\",\n      },\n      \"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\": {\n        keccak256:\n          \"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\n        urls: [\n          \"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\n          \"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\",\n        ],\n        license: \"MIT\",\n      },\n      \"src/AlgoBull.sol\": {\n        keccak256:\n          \"0x1ee386a2fa13ddb7af7cab2f773c77f88cc01169f1e11d83e8c595f2f33ba5a8\",\n        urls: [\n          \"bzz-raw://3df103365cfaed5f8eb009ec9257fd6d654b826bac48111eb7e058c226307e37\",\n          \"dweb:/ipfs/QmYqBhVJxUyr5DkG4fdxpyHP9TvxMpqTbNMbsxK6pDh7XG\",\n        ],\n        license: null,\n      },\n    },\n    version: 1,\n  },\n  ast: {\n    absolutePath: \"src/AlgoBull.sol\",\n    id: 46932,\n    exportedSymbols: {\n      Address: [45336],\n      AlgoBull: [46931],\n      Context: [45358],\n      Counters: [45432],\n      ERC165: [45685],\n      ERC20: [43571],\n      ERC2981: [45006],\n      ERC721: [44601],\n      ERC721Royalty: [44781],\n      IERC165: [45697],\n      IERC20: [43649],\n      IERC20Metadata: [43674],\n      IERC2981: [42984],\n      IERC721: [44717],\n      IERC721Metadata: [44808],\n      IERC721Receiver: [44735],\n      Math: [46563],\n      Ownable: [42965],\n      SignedMath: [46668],\n      Strings: [45661],\n    },\n    nodeType: \"SourceUnit\",\n    src: \"0:4369:37\",\n    nodes: [\n      {\n        id: 46670,\n        nodeType: \"PragmaDirective\",\n        src: \"0:23:37\",\n        nodes: [],\n        literals: [\"solidity\", \"^\", \"0.8\", \".0\"],\n      },\n      {\n        id: 46671,\n        nodeType: \"ImportDirective\",\n        src: \"25:65:37\",\n        nodes: [],\n        absolutePath: \"lib/openzeppelin-contracts/contracts/utils/Counters.sol\",\n        file: \"lib/openzeppelin-contracts/contracts/utils/Counters.sol\",\n        nameLocation: \"-1:-1:-1\",\n        scope: 46932,\n        sourceUnit: 45433,\n        symbolAliases: [],\n        unitAlias: \"\",\n      },\n      {\n        id: 46672,\n        nodeType: \"ImportDirective\",\n        src: \"91:88:37\",\n        nodes: [],\n        absolutePath:\n          \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Royalty.sol\",\n        file: \"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721Royalty.sol\",\n        nameLocation: \"-1:-1:-1\",\n        scope: 46932,\n        sourceUnit: 44782,\n        symbolAliases: [],\n        unitAlias: \"\",\n      },\n      {\n        id: 46673,\n        nodeType: \"ImportDirective\",\n        src: \"180:68:37\",\n        nodes: [],\n        absolutePath:\n          \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\",\n        file: \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\",\n        nameLocation: \"-1:-1:-1\",\n        scope: 46932,\n        sourceUnit: 43572,\n        symbolAliases: [],\n        unitAlias: \"\",\n      },\n      {\n        id: 46674,\n        nodeType: \"ImportDirective\",\n        src: \"249:65:37\",\n        nodes: [],\n        absolutePath: \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\",\n        file: \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\",\n        nameLocation: \"-1:-1:-1\",\n        scope: 46932,\n        sourceUnit: 42966,\n        symbolAliases: [],\n        unitAlias: \"\",\n      },\n      {\n        id: 46931,\n        nodeType: \"ContractDefinition\",\n        src: \"598:3770:37\",\n        nodes: [\n          {\n            id: 46683,\n            nodeType: \"UsingForDirective\",\n            src: \"648:36:37\",\n            nodes: [],\n            global: false,\n            libraryName: {\n              id: 46680,\n              name: \"Counters\",\n              nameLocations: [\"654:8:37\"],\n              nodeType: \"IdentifierPath\",\n              referencedDeclaration: 45432,\n              src: \"654:8:37\",\n            },\n            typeName: {\n              id: 46682,\n              nodeType: \"UserDefinedTypeName\",\n              pathNode: {\n                id: 46681,\n                name: \"Counters.Counter\",\n                nameLocations: [\"667:8:37\", \"676:7:37\"],\n                nodeType: \"IdentifierPath\",\n                referencedDeclaration: 45364,\n                src: \"667:16:37\",\n              },\n              referencedDeclaration: 45364,\n              src: \"667:16:37\",\n              typeDescriptions: {\n                typeIdentifier: \"t_struct$_Counter_$45364_storage_ptr\",\n                typeString: \"struct Counters.Counter\",\n              },\n            },\n          },\n          {\n            id: 46685,\n            nodeType: \"VariableDeclaration\",\n            src: \"690:22:37\",\n            nodes: [],\n            constant: false,\n            functionSelector: \"13966db5\",\n            mutability: \"mutable\",\n            name: \"mintFee\",\n            nameLocation: \"705:7:37\",\n            scope: 46931,\n            stateVariable: true,\n            storageLocation: \"default\",\n            typeDescriptions: {\n              typeIdentifier: \"t_uint256\",\n              typeString: \"uint256\",\n            },\n            typeName: {\n              id: 46684,\n              name: \"uint256\",\n              nodeType: \"ElementaryTypeName\",\n              src: \"690:7:37\",\n              typeDescriptions: {\n                typeIdentifier: \"t_uint256\",\n                typeString: \"uint256\",\n              },\n            },\n            visibility: \"public\",\n          },\n          {\n            id: 46688,\n            nodeType: \"VariableDeclaration\",\n            src: \"718:24:37\",\n            nodes: [],\n            constant: false,\n            mutability: \"mutable\",\n            name: \"stablecoin\",\n            nameLocation: \"732:10:37\",\n            scope: 46931,\n            stateVariable: true,\n            storageLocation: \"default\",\n            typeDescriptions: {\n              typeIdentifier: \"t_contract$_ERC20_$43571\",\n              typeString: \"contract ERC20\",\n            },\n            typeName: {\n              id: 46687,\n              nodeType: \"UserDefinedTypeName\",\n              pathNode: {\n                id: 46686,\n                name: \"ERC20\",\n                nameLocations: [\"718:5:37\"],\n                nodeType: \"IdentifierPath\",\n                referencedDeclaration: 43571,\n                src: \"718:5:37\",\n              },\n              referencedDeclaration: 43571,\n              src: \"718:5:37\",\n              typeDescriptions: {\n                typeIdentifier: \"t_contract$_ERC20_$43571\",\n                typeString: \"contract ERC20\",\n              },\n            },\n            visibility: \"private\",\n          },\n          {\n            id: 46690,\n            nodeType: \"VariableDeclaration\",\n            src: \"748:24:37\",\n            nodes: [],\n            constant: false,\n            functionSelector: \"d5abeb01\",\n            mutability: \"mutable\",\n            name: \"maxSupply\",\n            nameLocation: \"763:9:37\",\n            scope: 46931,\n            stateVariable: true,\n            storageLocation: \"default\",\n            typeDescriptions: {\n              typeIdentifier: \"t_uint256\",\n              typeString: \"uint256\",\n            },\n            typeName: {\n              id: 46689,\n              name: \"uint256\",\n              nodeType: \"ElementaryTypeName\",\n              src: \"748:7:37\",\n              typeDescriptions: {\n                typeIdentifier: \"t_uint256\",\n                typeString: \"uint256\",\n              },\n            },\n            visibility: \"public\",\n          },\n          {\n            id: 46692,\n            nodeType: \"VariableDeclaration\",\n            src: \"778:24:37\",\n            nodes: [],\n            constant: false,\n            functionSelector: \"8ea5220f\",\n            mutability: \"mutable\",\n            name: \"devWallet\",\n            nameLocation: \"793:9:37\",\n            scope: 46931,\n            stateVariable: true,\n            storageLocation: \"default\",\n            typeDescriptions: {\n              typeIdentifier: \"t_address\",\n              typeString: \"address\",\n            },\n            typeName: {\n              id: 46691,\n              name: \"address\",\n              nodeType: \"ElementaryTypeName\",\n              src: \"778:7:37\",\n              stateMutability: \"nonpayable\",\n              typeDescriptions: {\n                typeIdentifier: \"t_address\",\n                typeString: \"address\",\n              },\n            },\n            visibility: \"public\",\n          },\n          {\n            id: 46694,\n            nodeType: \"VariableDeclaration\",\n            src: \"808:25:37\",\n            nodes: [],\n            constant: false,\n            functionSelector: \"fcb78699\",\n            mutability: \"mutable\",\n            name: \"devMaxMint\",\n            nameLocation: \"823:10:37\",\n            scope: 46931,\n            stateVariable: true,\n            storageLocation: \"default\",\n            typeDescriptions: {\n              typeIdentifier: \"t_uint256\",\n              typeString: \"uint256\",\n            },\n            typeName: {\n              id: 46693,\n              name: \"uint256\",\n              nodeType: \"ElementaryTypeName\",\n              src: \"808:7:37\",\n              typeDescriptions: {\n                typeIdentifier: \"t_uint256\",\n                typeString: \"uint256\",\n              },\n            },\n            visibility: \"public\",\n          },\n          {\n            id: 46697,\n            nodeType: \"VariableDeclaration\",\n            src: \"840:34:37\",\n            nodes: [],\n            constant: false,\n            mutability: \"mutable\",\n            name: \"_tokenIds\",\n            nameLocation: \"865:9:37\",\n            scope: 46931,\n            stateVariable: true,\n            storageLocation: \"default\",\n            typeDescriptions: {\n              typeIdentifier: \"t_struct$_Counter_$45364_storage\",\n              typeString: \"struct Counters.Counter\",\n            },\n            typeName: {\n              id: 46696,\n              nodeType: \"UserDefinedTypeName\",\n              pathNode: {\n                id: 46695,\n                name: \"Counters.Counter\",\n                nameLocations: [\"840:8:37\", \"849:7:37\"],\n                nodeType: \"IdentifierPath\",\n                referencedDeclaration: 45364,\n                src: \"840:16:37\",\n              },\n              referencedDeclaration: 45364,\n              src: \"840:16:37\",\n              typeDescriptions: {\n                typeIdentifier: \"t_struct$_Counter_$45364_storage_ptr\",\n                typeString: \"struct Counters.Counter\",\n              },\n            },\n            visibility: \"private\",\n          },\n          {\n            id: 46749,\n            nodeType: \"FunctionDefinition\",\n            src: \"1516:526:37\",\n            nodes: [],\n            body: {\n              id: 46748,\n              nodeType: \"Block\",\n              src: \"1793:249:37\",\n              nodes: [],\n              statements: [\n                {\n                  expression: {\n                    arguments: [\n                      {\n                        id: 46722,\n                        name: \"_royaltyReceiver\",\n                        nodeType: \"Identifier\",\n                        overloadedDeclarations: [],\n                        referencedDeclaration: 46700,\n                        src: \"1822:16:37\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                      },\n                      {\n                        id: 46723,\n                        name: \"_royaltyFeeNumerator\",\n                        nodeType: \"Identifier\",\n                        overloadedDeclarations: [],\n                        referencedDeclaration: 46702,\n                        src: \"1840:20:37\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_uint96\",\n                          typeString: \"uint96\",\n                        },\n                      },\n                    ],\n                    expression: {\n                      argumentTypes: [\n                        {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                        {\n                          typeIdentifier: \"t_uint96\",\n                          typeString: \"uint96\",\n                        },\n                      ],\n                      id: 46721,\n                      name: \"_setDefaultRoyalty\",\n                      nodeType: \"Identifier\",\n                      overloadedDeclarations: [],\n                      referencedDeclaration: 44947,\n                      src: \"1803:18:37\",\n                      typeDescriptions: {\n                        typeIdentifier:\n                          \"t_function_internal_nonpayable$_t_address_$_t_uint96_$returns$__$\",\n                        typeString: \"function (address,uint96)\",\n                      },\n                    },\n                    id: 46724,\n                    isConstant: false,\n                    isLValue: false,\n                    isPure: false,\n                    kind: \"functionCall\",\n                    lValueRequested: false,\n                    nameLocations: [],\n                    names: [],\n                    nodeType: \"FunctionCall\",\n                    src: \"1803:58:37\",\n                    tryCall: false,\n                    typeDescriptions: {\n                      typeIdentifier: \"t_tuple$__$\",\n                      typeString: \"tuple()\",\n                    },\n                  },\n                  id: 46725,\n                  nodeType: \"ExpressionStatement\",\n                  src: \"1803:58:37\",\n                },\n                {\n                  expression: {\n                    id: 46730,\n                    isConstant: false,\n                    isLValue: false,\n                    isPure: false,\n                    lValueRequested: false,\n                    leftHandSide: {\n                      id: 46726,\n                      name: \"stablecoin\",\n                      nodeType: \"Identifier\",\n                      overloadedDeclarations: [],\n                      referencedDeclaration: 46688,\n                      src: \"1871:10:37\",\n                      typeDescriptions: {\n                        typeIdentifier: \"t_contract$_ERC20_$43571\",\n                        typeString: \"contract ERC20\",\n                      },\n                    },\n                    nodeType: \"Assignment\",\n                    operator: \"=\",\n                    rightHandSide: {\n                      arguments: [\n                        {\n                          id: 46728,\n                          name: \"_stablecoinAddress\",\n                          nodeType: \"Identifier\",\n                          overloadedDeclarations: [],\n                          referencedDeclaration: 46704,\n                          src: \"1890:18:37\",\n                          typeDescriptions: {\n                            typeIdentifier: \"t_address\",\n                            typeString: \"address\",\n                          },\n                        },\n                      ],\n                      expression: {\n                        argumentTypes: [\n                          {\n                            typeIdentifier: \"t_address\",\n                            typeString: \"address\",\n                          },\n                        ],\n                        id: 46727,\n                        name: \"ERC20\",\n                        nodeType: \"Identifier\",\n                        overloadedDeclarations: [],\n                        referencedDeclaration: 43571,\n                        src: \"1884:5:37\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_type$_t_contract$_ERC20_$43571_$\",\n                          typeString: \"type(contract ERC20)\",\n                        },\n                      },\n                      id: 46729,\n                      isConstant: false,\n                      isLValue: false,\n                      isPure: false,\n                      kind: \"typeConversion\",\n                      lValueRequested: false,\n                      nameLocations: [],\n                      names: [],\n                      nodeType: \"FunctionCall\",\n                      src: \"1884:25:37\",\n                      tryCall: false,\n                      typeDescriptions: {\n                        typeIdentifier: \"t_contract$_ERC20_$43571\",\n                        typeString: \"contract ERC20\",\n                      },\n                    },\n                    src: \"1871:38:37\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_contract$_ERC20_$43571\",\n                      typeString: \"contract ERC20\",\n                    },\n                  },\n                  id: 46731,\n                  nodeType: \"ExpressionStatement\",\n                  src: \"1871:38:37\",\n                },\n                {\n                  expression: {\n                    id: 46734,\n                    isConstant: false,\n                    isLValue: false,\n                    isPure: false,\n                    lValueRequested: false,\n                    leftHandSide: {\n                      id: 46732,\n                      name: \"mintFee\",\n                      nodeType: \"Identifier\",\n                      overloadedDeclarations: [],\n                      referencedDeclaration: 46685,\n                      src: \"1919:7:37\",\n                      typeDescriptions: {\n                        typeIdentifier: \"t_uint256\",\n                        typeString: \"uint256\",\n                      },\n                    },\n                    nodeType: \"Assignment\",\n                    operator: \"=\",\n                    rightHandSide: {\n                      id: 46733,\n                      name: \"_mintFee\",\n                      nodeType: \"Identifier\",\n                      overloadedDeclarations: [],\n                      referencedDeclaration: 46706,\n                      src: \"1929:8:37\",\n                      typeDescriptions: {\n                        typeIdentifier: \"t_uint256\",\n                        typeString: \"uint256\",\n                      },\n                    },\n                    src: \"1919:18:37\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_uint256\",\n                      typeString: \"uint256\",\n                    },\n                  },\n                  id: 46735,\n                  nodeType: \"ExpressionStatement\",\n                  src: \"1919:18:37\",\n                },\n                {\n                  expression: {\n                    id: 46738,\n                    isConstant: false,\n                    isLValue: false,\n                    isPure: false,\n                    lValueRequested: false,\n                    leftHandSide: {\n                      id: 46736,\n                      name: \"maxSupply\",\n                      nodeType: \"Identifier\",\n                      overloadedDeclarations: [],\n                      referencedDeclaration: 46690,\n                      src: \"1947:9:37\",\n                      typeDescriptions: {\n                        typeIdentifier: \"t_uint256\",\n                        typeString: \"uint256\",\n                      },\n                    },\n                    nodeType: \"Assignment\",\n                    operator: \"=\",\n                    rightHandSide: {\n                      id: 46737,\n                      name: \"_maxSupply\",\n                      nodeType: \"Identifier\",\n                      overloadedDeclarations: [],\n                      referencedDeclaration: 46708,\n                      src: \"1959:10:37\",\n                      typeDescriptions: {\n                        typeIdentifier: \"t_uint256\",\n                        typeString: \"uint256\",\n                      },\n                    },\n                    src: \"1947:22:37\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_uint256\",\n                      typeString: \"uint256\",\n                    },\n                  },\n                  id: 46739,\n                  nodeType: \"ExpressionStatement\",\n                  src: \"1947:22:37\",\n                },\n                {\n                  expression: {\n                    id: 46742,\n                    isConstant: false,\n                    isLValue: false,\n                    isPure: false,\n                    lValueRequested: false,\n                    leftHandSide: {\n                      id: 46740,\n                      name: \"devWallet\",\n                      nodeType: \"Identifier\",\n                      overloadedDeclarations: [],\n                      referencedDeclaration: 46692,\n                      src: \"1979:9:37\",\n                      typeDescriptions: {\n                        typeIdentifier: \"t_address\",\n                        typeString: \"address\",\n                      },\n                    },\n                    nodeType: \"Assignment\",\n                    operator: \"=\",\n                    rightHandSide: {\n                      id: 46741,\n                      name: \"_devWallet\",\n                      nodeType: \"Identifier\",\n                      overloadedDeclarations: [],\n                      referencedDeclaration: 46710,\n                      src: \"1991:10:37\",\n                      typeDescriptions: {\n                        typeIdentifier: \"t_address\",\n                        typeString: \"address\",\n                      },\n                    },\n                    src: \"1979:22:37\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_address\",\n                      typeString: \"address\",\n                    },\n                  },\n                  id: 46743,\n                  nodeType: \"ExpressionStatement\",\n                  src: \"1979:22:37\",\n                },\n                {\n                  expression: {\n                    id: 46746,\n                    isConstant: false,\n                    isLValue: false,\n                    isPure: false,\n                    lValueRequested: false,\n                    leftHandSide: {\n                      id: 46744,\n                      name: \"devMaxMint\",\n                      nodeType: \"Identifier\",\n                      overloadedDeclarations: [],\n                      referencedDeclaration: 46694,\n                      src: \"2011:10:37\",\n                      typeDescriptions: {\n                        typeIdentifier: \"t_uint256\",\n                        typeString: \"uint256\",\n                      },\n                    },\n                    nodeType: \"Assignment\",\n                    operator: \"=\",\n                    rightHandSide: {\n                      id: 46745,\n                      name: \"_devMaxMint\",\n                      nodeType: \"Identifier\",\n                      overloadedDeclarations: [],\n                      referencedDeclaration: 46712,\n                      src: \"2024:11:37\",\n                      typeDescriptions: {\n                        typeIdentifier: \"t_uint256\",\n                        typeString: \"uint256\",\n                      },\n                    },\n                    src: \"2011:24:37\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_uint256\",\n                      typeString: \"uint256\",\n                    },\n                  },\n                  id: 46747,\n                  nodeType: \"ExpressionStatement\",\n                  src: \"2011:24:37\",\n                },\n              ],\n            },\n            documentation: {\n              id: 46698,\n              nodeType: \"StructuredDocumentation\",\n              src: \"881:630:37\",\n              text: \" @dev Initializes the AlgoBull NFT minting contract.\\n @param _royaltyReceiver The account that will receive royalties.\\n @param _royaltyFeeNumerator The royalty fee in basis points.\\n @param _stablecoinAddress The address of stablecoin that will be used for paying fees.\\n @param _mintFee The stablecoin quantity fee charged per minting 1 NFT.\\n @param _maxSupply The capped supply of the mintable NFTs.\\n @param _devWallet The dev wallet address which is allow to mint for free up to a limit.\\n @param _devMaxMint The limit for how many free mints the dev wallet can perform.\",\n            },\n            implemented: true,\n            kind: \"constructor\",\n            modifiers: [\n              {\n                arguments: [\n                  {\n                    hexValue: \"416c676f42756c6c\",\n                    id: 46715,\n                    isConstant: false,\n                    isLValue: false,\n                    isPure: true,\n                    kind: \"string\",\n                    lValueRequested: false,\n                    nodeType: \"Literal\",\n                    src: \"1759:10:37\",\n                    typeDescriptions: {\n                      typeIdentifier:\n                        \"t_stringliteral_60b931a6aef7541a4966590dd65a5ad9f046e6816fd0927d0ebdb84a692a6fce\",\n                      typeString: 'literal_string \"AlgoBull\"',\n                    },\n                    value: \"AlgoBull\",\n                  },\n                  {\n                    hexValue: \"414c474f42554c4c\",\n                    id: 46716,\n                    isConstant: false,\n                    isLValue: false,\n                    isPure: true,\n                    kind: \"string\",\n                    lValueRequested: false,\n                    nodeType: \"Literal\",\n                    src: \"1771:10:37\",\n                    typeDescriptions: {\n                      typeIdentifier:\n                        \"t_stringliteral_56971c297e1f7d57da8afb7eccce2cf7a818645f1bc723e48a5736c5919f3238\",\n                      typeString: 'literal_string \"ALGOBULL\"',\n                    },\n                    value: \"ALGOBULL\",\n                  },\n                ],\n                id: 46717,\n                kind: \"baseConstructorSpecifier\",\n                modifierName: {\n                  id: 46714,\n                  name: \"ERC721\",\n                  nameLocations: [\"1752:6:37\"],\n                  nodeType: \"IdentifierPath\",\n                  referencedDeclaration: 44601,\n                  src: \"1752:6:37\",\n                },\n                nodeType: \"ModifierInvocation\",\n                src: \"1752:30:37\",\n              },\n              {\n                arguments: [],\n                id: 46719,\n                kind: \"baseConstructorSpecifier\",\n                modifierName: {\n                  id: 46718,\n                  name: \"Ownable\",\n                  nameLocations: [\"1783:7:37\"],\n                  nodeType: \"IdentifierPath\",\n                  referencedDeclaration: 42965,\n                  src: \"1783:7:37\",\n                },\n                nodeType: \"ModifierInvocation\",\n                src: \"1783:9:37\",\n              },\n            ],\n            name: \"\",\n            nameLocation: \"-1:-1:-1\",\n            parameters: {\n              id: 46713,\n              nodeType: \"ParameterList\",\n              parameters: [\n                {\n                  constant: false,\n                  id: 46700,\n                  mutability: \"mutable\",\n                  name: \"_royaltyReceiver\",\n                  nameLocation: \"1545:16:37\",\n                  nodeType: \"VariableDeclaration\",\n                  scope: 46749,\n                  src: \"1537:24:37\",\n                  stateVariable: false,\n                  storageLocation: \"default\",\n                  typeDescriptions: {\n                    typeIdentifier: \"t_address\",\n                    typeString: \"address\",\n                  },\n                  typeName: {\n                    id: 46699,\n                    name: \"address\",\n                    nodeType: \"ElementaryTypeName\",\n                    src: \"1537:7:37\",\n                    stateMutability: \"nonpayable\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_address\",\n                      typeString: \"address\",\n                    },\n                  },\n                  visibility: \"internal\",\n                },\n                {\n                  constant: false,\n                  id: 46702,\n                  mutability: \"mutable\",\n                  name: \"_royaltyFeeNumerator\",\n                  nameLocation: \"1578:20:37\",\n                  nodeType: \"VariableDeclaration\",\n                  scope: 46749,\n                  src: \"1571:27:37\",\n                  stateVariable: false,\n                  storageLocation: \"default\",\n                  typeDescriptions: {\n                    typeIdentifier: \"t_uint96\",\n                    typeString: \"uint96\",\n                  },\n                  typeName: {\n                    id: 46701,\n                    name: \"uint96\",\n                    nodeType: \"ElementaryTypeName\",\n                    src: \"1571:6:37\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_uint96\",\n                      typeString: \"uint96\",\n                    },\n                  },\n                  visibility: \"internal\",\n                },\n                {\n                  constant: false,\n                  id: 46704,\n                  mutability: \"mutable\",\n                  name: \"_stablecoinAddress\",\n                  nameLocation: \"1616:18:37\",\n                  nodeType: \"VariableDeclaration\",\n                  scope: 46749,\n                  src: \"1608:26:37\",\n                  stateVariable: false,\n                  storageLocation: \"default\",\n                  typeDescriptions: {\n                    typeIdentifier: \"t_address\",\n                    typeString: \"address\",\n                  },\n                  typeName: {\n                    id: 46703,\n                    name: \"address\",\n                    nodeType: \"ElementaryTypeName\",\n                    src: \"1608:7:37\",\n                    stateMutability: \"nonpayable\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_address\",\n                      typeString: \"address\",\n                    },\n                  },\n                  visibility: \"internal\",\n                },\n                {\n                  constant: false,\n                  id: 46706,\n                  mutability: \"mutable\",\n                  name: \"_mintFee\",\n                  nameLocation: \"1652:8:37\",\n                  nodeType: \"VariableDeclaration\",\n                  scope: 46749,\n                  src: \"1644:16:37\",\n                  stateVariable: false,\n                  storageLocation: \"default\",\n                  typeDescriptions: {\n                    typeIdentifier: \"t_uint256\",\n                    typeString: \"uint256\",\n                  },\n                  typeName: {\n                    id: 46705,\n                    name: \"uint256\",\n                    nodeType: \"ElementaryTypeName\",\n                    src: \"1644:7:37\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_uint256\",\n                      typeString: \"uint256\",\n                    },\n                  },\n                  visibility: \"internal\",\n                },\n                {\n                  constant: false,\n                  id: 46708,\n                  mutability: \"mutable\",\n                  name: \"_maxSupply\",\n                  nameLocation: \"1678:10:37\",\n                  nodeType: \"VariableDeclaration\",\n                  scope: 46749,\n                  src: \"1670:18:37\",\n                  stateVariable: false,\n                  storageLocation: \"default\",\n                  typeDescriptions: {\n                    typeIdentifier: \"t_uint256\",\n                    typeString: \"uint256\",\n                  },\n                  typeName: {\n                    id: 46707,\n                    name: \"uint256\",\n                    nodeType: \"ElementaryTypeName\",\n                    src: \"1670:7:37\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_uint256\",\n                      typeString: \"uint256\",\n                    },\n                  },\n                  visibility: \"internal\",\n                },\n                {\n                  constant: false,\n                  id: 46710,\n                  mutability: \"mutable\",\n                  name: \"_devWallet\",\n                  nameLocation: \"1706:10:37\",\n                  nodeType: \"VariableDeclaration\",\n                  scope: 46749,\n                  src: \"1698:18:37\",\n                  stateVariable: false,\n                  storageLocation: \"default\",\n                  typeDescriptions: {\n                    typeIdentifier: \"t_address\",\n                    typeString: \"address\",\n                  },\n                  typeName: {\n                    id: 46709,\n                    name: \"address\",\n                    nodeType: \"ElementaryTypeName\",\n                    src: \"1698:7:37\",\n                    stateMutability: \"nonpayable\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_address\",\n                      typeString: \"address\",\n                    },\n                  },\n                  visibility: \"internal\",\n                },\n                {\n                  constant: false,\n                  id: 46712,\n                  mutability: \"mutable\",\n                  name: \"_devMaxMint\",\n                  nameLocation: \"1734:11:37\",\n                  nodeType: \"VariableDeclaration\",\n                  scope: 46749,\n                  src: \"1726:19:37\",\n                  stateVariable: false,\n                  storageLocation: \"default\",\n                  typeDescriptions: {\n                    typeIdentifier: \"t_uint256\",\n                    typeString: \"uint256\",\n                  },\n                  typeName: {\n                    id: 46711,\n                    name: \"uint256\",\n                    nodeType: \"ElementaryTypeName\",\n                    src: \"1726:7:37\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_uint256\",\n                      typeString: \"uint256\",\n                    },\n                  },\n                  visibility: \"internal\",\n                },\n              ],\n              src: \"1527:224:37\",\n            },\n            returnParameters: {\n              id: 46720,\n              nodeType: \"ParameterList\",\n              parameters: [],\n              src: \"1793:0:37\",\n            },\n            scope: 46931,\n            stateMutability: \"nonpayable\",\n            virtual: false,\n            visibility: \"public\",\n          },\n          {\n            id: 46762,\n            nodeType: \"FunctionDefinition\",\n            src: \"2207:100:37\",\n            nodes: [],\n            body: {\n              id: 46761,\n              nodeType: \"Block\",\n              src: \"2268:39:37\",\n              nodes: [],\n              statements: [\n                {\n                  expression: {\n                    id: 46759,\n                    isConstant: false,\n                    isLValue: false,\n                    isPure: false,\n                    lValueRequested: false,\n                    leftHandSide: {\n                      id: 46757,\n                      name: \"devWallet\",\n                      nodeType: \"Identifier\",\n                      overloadedDeclarations: [],\n                      referencedDeclaration: 46692,\n                      src: \"2278:9:37\",\n                      typeDescriptions: {\n                        typeIdentifier: \"t_address\",\n                        typeString: \"address\",\n                      },\n                    },\n                    nodeType: \"Assignment\",\n                    operator: \"=\",\n                    rightHandSide: {\n                      id: 46758,\n                      name: \"_devWallet\",\n                      nodeType: \"Identifier\",\n                      overloadedDeclarations: [],\n                      referencedDeclaration: 46752,\n                      src: \"2290:10:37\",\n                      typeDescriptions: {\n                        typeIdentifier: \"t_address\",\n                        typeString: \"address\",\n                      },\n                    },\n                    src: \"2278:22:37\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_address\",\n                      typeString: \"address\",\n                    },\n                  },\n                  id: 46760,\n                  nodeType: \"ExpressionStatement\",\n                  src: \"2278:22:37\",\n                },\n              ],\n            },\n            documentation: {\n              id: 46750,\n              nodeType: \"StructuredDocumentation\",\n              src: \"2048:154:37\",\n              text: \" @dev Allows owner to set a dev wallet.\\n @param _devWallet the wallet that will be able to mint without fees up to the devMaxMint.\",\n            },\n            functionSelector: \"1f53ac02\",\n            implemented: true,\n            kind: \"function\",\n            modifiers: [\n              {\n                id: 46755,\n                kind: \"modifierInvocation\",\n                modifierName: {\n                  id: 46754,\n                  name: \"onlyOwner\",\n                  nameLocations: [\"2258:9:37\"],\n                  nodeType: \"IdentifierPath\",\n                  referencedDeclaration: 42884,\n                  src: \"2258:9:37\",\n                },\n                nodeType: \"ModifierInvocation\",\n                src: \"2258:9:37\",\n              },\n            ],\n            name: \"setDevWallet\",\n            nameLocation: \"2216:12:37\",\n            parameters: {\n              id: 46753,\n              nodeType: \"ParameterList\",\n              parameters: [\n                {\n                  constant: false,\n                  id: 46752,\n                  mutability: \"mutable\",\n                  name: \"_devWallet\",\n                  nameLocation: \"2237:10:37\",\n                  nodeType: \"VariableDeclaration\",\n                  scope: 46762,\n                  src: \"2229:18:37\",\n                  stateVariable: false,\n                  storageLocation: \"default\",\n                  typeDescriptions: {\n                    typeIdentifier: \"t_address\",\n                    typeString: \"address\",\n                  },\n                  typeName: {\n                    id: 46751,\n                    name: \"address\",\n                    nodeType: \"ElementaryTypeName\",\n                    src: \"2229:7:37\",\n                    stateMutability: \"nonpayable\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_address\",\n                      typeString: \"address\",\n                    },\n                  },\n                  visibility: \"internal\",\n                },\n              ],\n              src: \"2228:20:37\",\n            },\n            returnParameters: {\n              id: 46756,\n              nodeType: \"ParameterList\",\n              parameters: [],\n              src: \"2268:0:37\",\n            },\n            scope: 46931,\n            stateMutability: \"nonpayable\",\n            virtual: false,\n            visibility: \"external\",\n          },\n          {\n            id: 46789,\n            nodeType: \"FunctionDefinition\",\n            src: \"2537:199:37\",\n            nodes: [],\n            body: {\n              id: 46788,\n              nodeType: \"Block\",\n              src: \"2597:139:37\",\n              nodes: [],\n              statements: [\n                {\n                  assignments: [46771],\n                  declarations: [\n                    {\n                      constant: false,\n                      id: 46771,\n                      mutability: \"mutable\",\n                      name: \"newID\",\n                      nameLocation: \"2615:5:37\",\n                      nodeType: \"VariableDeclaration\",\n                      scope: 46788,\n                      src: \"2607:13:37\",\n                      stateVariable: false,\n                      storageLocation: \"default\",\n                      typeDescriptions: {\n                        typeIdentifier: \"t_uint256\",\n                        typeString: \"uint256\",\n                      },\n                      typeName: {\n                        id: 46770,\n                        name: \"uint256\",\n                        nodeType: \"ElementaryTypeName\",\n                        src: \"2607:7:37\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_uint256\",\n                          typeString: \"uint256\",\n                        },\n                      },\n                      visibility: \"internal\",\n                    },\n                  ],\n                  id: 46775,\n                  initialValue: {\n                    arguments: [],\n                    expression: {\n                      argumentTypes: [],\n                      expression: {\n                        id: 46772,\n                        name: \"_tokenIds\",\n                        nodeType: \"Identifier\",\n                        overloadedDeclarations: [],\n                        referencedDeclaration: 46697,\n                        src: \"2623:9:37\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_struct$_Counter_$45364_storage\",\n                          typeString: \"struct Counters.Counter storage ref\",\n                        },\n                      },\n                      id: 46773,\n                      isConstant: false,\n                      isLValue: true,\n                      isPure: false,\n                      lValueRequested: false,\n                      memberLocation: \"2633:7:37\",\n                      memberName: \"current\",\n                      nodeType: \"MemberAccess\",\n                      referencedDeclaration: 45376,\n                      src: \"2623:17:37\",\n                      typeDescriptions: {\n                        typeIdentifier:\n                          \"t_function_internal_view$_t_struct$_Counter_$45364_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$45364_storage_ptr_$\",\n                        typeString:\n                          \"function (struct Counters.Counter storage pointer) view returns (uint256)\",\n                      },\n                    },\n                    id: 46774,\n                    isConstant: false,\n                    isLValue: false,\n                    isPure: false,\n                    kind: \"functionCall\",\n                    lValueRequested: false,\n                    nameLocations: [],\n                    names: [],\n                    nodeType: \"FunctionCall\",\n                    src: \"2623:19:37\",\n                    tryCall: false,\n                    typeDescriptions: {\n                      typeIdentifier: \"t_uint256\",\n                      typeString: \"uint256\",\n                    },\n                  },\n                  nodeType: \"VariableDeclarationStatement\",\n                  src: \"2607:35:37\",\n                },\n                {\n                  expression: {\n                    arguments: [\n                      {\n                        id: 46777,\n                        name: \"_recipient\",\n                        nodeType: \"Identifier\",\n                        overloadedDeclarations: [],\n                        referencedDeclaration: 46765,\n                        src: \"2658:10:37\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                      },\n                      {\n                        id: 46778,\n                        name: \"newID\",\n                        nodeType: \"Identifier\",\n                        overloadedDeclarations: [],\n                        referencedDeclaration: 46771,\n                        src: \"2670:5:37\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_uint256\",\n                          typeString: \"uint256\",\n                        },\n                      },\n                    ],\n                    expression: {\n                      argumentTypes: [\n                        {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                        {\n                          typeIdentifier: \"t_uint256\",\n                          typeString: \"uint256\",\n                        },\n                      ],\n                      id: 46776,\n                      name: \"_mint\",\n                      nodeType: \"Identifier\",\n                      overloadedDeclarations: [],\n                      referencedDeclaration: 44275,\n                      src: \"2652:5:37\",\n                      typeDescriptions: {\n                        typeIdentifier:\n                          \"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$\",\n                        typeString: \"function (address,uint256)\",\n                      },\n                    },\n                    id: 46779,\n                    isConstant: false,\n                    isLValue: false,\n                    isPure: false,\n                    kind: \"functionCall\",\n                    lValueRequested: false,\n                    nameLocations: [],\n                    names: [],\n                    nodeType: \"FunctionCall\",\n                    src: \"2652:24:37\",\n                    tryCall: false,\n                    typeDescriptions: {\n                      typeIdentifier: \"t_tuple$__$\",\n                      typeString: \"tuple()\",\n                    },\n                  },\n                  id: 46780,\n                  nodeType: \"ExpressionStatement\",\n                  src: \"2652:24:37\",\n                },\n                {\n                  expression: {\n                    arguments: [],\n                    expression: {\n                      argumentTypes: [],\n                      expression: {\n                        id: 46781,\n                        name: \"_tokenIds\",\n                        nodeType: \"Identifier\",\n                        overloadedDeclarations: [],\n                        referencedDeclaration: 46697,\n                        src: \"2686:9:37\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_struct$_Counter_$45364_storage\",\n                          typeString: \"struct Counters.Counter storage ref\",\n                        },\n                      },\n                      id: 46783,\n                      isConstant: false,\n                      isLValue: true,\n                      isPure: false,\n                      lValueRequested: false,\n                      memberLocation: \"2696:9:37\",\n                      memberName: \"increment\",\n                      nodeType: \"MemberAccess\",\n                      referencedDeclaration: 45390,\n                      src: \"2686:19:37\",\n                      typeDescriptions: {\n                        typeIdentifier:\n                          \"t_function_internal_nonpayable$_t_struct$_Counter_$45364_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$45364_storage_ptr_$\",\n                        typeString:\n                          \"function (struct Counters.Counter storage pointer)\",\n                      },\n                    },\n                    id: 46784,\n                    isConstant: false,\n                    isLValue: false,\n                    isPure: false,\n                    kind: \"functionCall\",\n                    lValueRequested: false,\n                    nameLocations: [],\n                    names: [],\n                    nodeType: \"FunctionCall\",\n                    src: \"2686:21:37\",\n                    tryCall: false,\n                    typeDescriptions: {\n                      typeIdentifier: \"t_tuple$__$\",\n                      typeString: \"tuple()\",\n                    },\n                  },\n                  id: 46785,\n                  nodeType: \"ExpressionStatement\",\n                  src: \"2686:21:37\",\n                },\n                {\n                  expression: {\n                    id: 46786,\n                    name: \"newID\",\n                    nodeType: \"Identifier\",\n                    overloadedDeclarations: [],\n                    referencedDeclaration: 46771,\n                    src: \"2724:5:37\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_uint256\",\n                      typeString: \"uint256\",\n                    },\n                  },\n                  functionReturnParameters: 46769,\n                  id: 46787,\n                  nodeType: \"Return\",\n                  src: \"2717:12:37\",\n                },\n              ],\n            },\n            documentation: {\n              id: 46763,\n              nodeType: \"StructuredDocumentation\",\n              src: \"2313:219:37\",\n              text: \" @dev Mints a token.\\n This function is designed to only be used by contract level functions.\\n @param _recipient The address of the account that will receives the minted NFT and pay the fee.\",\n            },\n            implemented: true,\n            kind: \"function\",\n            modifiers: [],\n            name: \"mint\",\n            nameLocation: \"2546:4:37\",\n            parameters: {\n              id: 46766,\n              nodeType: \"ParameterList\",\n              parameters: [\n                {\n                  constant: false,\n                  id: 46765,\n                  mutability: \"mutable\",\n                  name: \"_recipient\",\n                  nameLocation: \"2559:10:37\",\n                  nodeType: \"VariableDeclaration\",\n                  scope: 46789,\n                  src: \"2551:18:37\",\n                  stateVariable: false,\n                  storageLocation: \"default\",\n                  typeDescriptions: {\n                    typeIdentifier: \"t_address\",\n                    typeString: \"address\",\n                  },\n                  typeName: {\n                    id: 46764,\n                    name: \"address\",\n                    nodeType: \"ElementaryTypeName\",\n                    src: \"2551:7:37\",\n                    stateMutability: \"nonpayable\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_address\",\n                      typeString: \"address\",\n                    },\n                  },\n                  visibility: \"internal\",\n                },\n              ],\n              src: \"2550:20:37\",\n            },\n            returnParameters: {\n              id: 46769,\n              nodeType: \"ParameterList\",\n              parameters: [\n                {\n                  constant: false,\n                  id: 46768,\n                  mutability: \"mutable\",\n                  name: \"\",\n                  nameLocation: \"-1:-1:-1\",\n                  nodeType: \"VariableDeclaration\",\n                  scope: 46789,\n                  src: \"2588:7:37\",\n                  stateVariable: false,\n                  storageLocation: \"default\",\n                  typeDescriptions: {\n                    typeIdentifier: \"t_uint256\",\n                    typeString: \"uint256\",\n                  },\n                  typeName: {\n                    id: 46767,\n                    name: \"uint256\",\n                    nodeType: \"ElementaryTypeName\",\n                    src: \"2588:7:37\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_uint256\",\n                      typeString: \"uint256\",\n                    },\n                  },\n                  visibility: \"internal\",\n                },\n              ],\n              src: \"2587:9:37\",\n            },\n            scope: 46931,\n            stateMutability: \"nonpayable\",\n            virtual: false,\n            visibility: \"private\",\n          },\n          {\n            id: 46917,\n            nodeType: \"FunctionDefinition\",\n            src: \"3070:1113:37\",\n            nodes: [],\n            body: {\n              id: 46916,\n              nodeType: \"Block\",\n              src: \"3157:1026:37\",\n              nodes: [],\n              statements: [\n                {\n                  expression: {\n                    arguments: [\n                      {\n                        commonType: {\n                          typeIdentifier: \"t_uint256\",\n                          typeString: \"uint256\",\n                        },\n                        id: 46808,\n                        isConstant: false,\n                        isLValue: false,\n                        isPure: false,\n                        lValueRequested: false,\n                        leftExpression: {\n                          components: [\n                            {\n                              commonType: {\n                                typeIdentifier: \"t_uint256\",\n                                typeString: \"uint256\",\n                              },\n                              id: 46804,\n                              isConstant: false,\n                              isLValue: false,\n                              isPure: false,\n                              lValueRequested: false,\n                              leftExpression: {\n                                arguments: [],\n                                expression: {\n                                  argumentTypes: [],\n                                  expression: {\n                                    id: 46800,\n                                    name: \"_tokenIds\",\n                                    nodeType: \"Identifier\",\n                                    overloadedDeclarations: [],\n                                    referencedDeclaration: 46697,\n                                    src: \"3176:9:37\",\n                                    typeDescriptions: {\n                                      typeIdentifier:\n                                        \"t_struct$_Counter_$45364_storage\",\n                                      typeString:\n                                        \"struct Counters.Counter storage ref\",\n                                    },\n                                  },\n                                  id: 46801,\n                                  isConstant: false,\n                                  isLValue: true,\n                                  isPure: false,\n                                  lValueRequested: false,\n                                  memberLocation: \"3186:7:37\",\n                                  memberName: \"current\",\n                                  nodeType: \"MemberAccess\",\n                                  referencedDeclaration: 45376,\n                                  src: \"3176:17:37\",\n                                  typeDescriptions: {\n                                    typeIdentifier:\n                                      \"t_function_internal_view$_t_struct$_Counter_$45364_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$45364_storage_ptr_$\",\n                                    typeString:\n                                      \"function (struct Counters.Counter storage pointer) view returns (uint256)\",\n                                  },\n                                },\n                                id: 46802,\n                                isConstant: false,\n                                isLValue: false,\n                                isPure: false,\n                                kind: \"functionCall\",\n                                lValueRequested: false,\n                                nameLocations: [],\n                                names: [],\n                                nodeType: \"FunctionCall\",\n                                src: \"3176:19:37\",\n                                tryCall: false,\n                                typeDescriptions: {\n                                  typeIdentifier: \"t_uint256\",\n                                  typeString: \"uint256\",\n                                },\n                              },\n                              nodeType: \"BinaryOperation\",\n                              operator: \"+\",\n                              rightExpression: {\n                                id: 46803,\n                                name: \"quantity\",\n                                nodeType: \"Identifier\",\n                                overloadedDeclarations: [],\n                                referencedDeclaration: 46794,\n                                src: \"3198:8:37\",\n                                typeDescriptions: {\n                                  typeIdentifier: \"t_uint256\",\n                                  typeString: \"uint256\",\n                                },\n                              },\n                              src: \"3176:30:37\",\n                              typeDescriptions: {\n                                typeIdentifier: \"t_uint256\",\n                                typeString: \"uint256\",\n                              },\n                            },\n                          ],\n                          id: 46805,\n                          isConstant: false,\n                          isInlineArray: false,\n                          isLValue: false,\n                          isPure: false,\n                          lValueRequested: false,\n                          nodeType: \"TupleExpression\",\n                          src: \"3175:32:37\",\n                          typeDescriptions: {\n                            typeIdentifier: \"t_uint256\",\n                            typeString: \"uint256\",\n                          },\n                        },\n                        nodeType: \"BinaryOperation\",\n                        operator: \"<=\",\n                        rightExpression: {\n                          arguments: [],\n                          expression: {\n                            argumentTypes: [],\n                            id: 46806,\n                            name: \"unclaimed\",\n                            nodeType: \"Identifier\",\n                            overloadedDeclarations: [],\n                            referencedDeclaration: 46930,\n                            src: \"3211:9:37\",\n                            typeDescriptions: {\n                              typeIdentifier:\n                                \"t_function_internal_view$__$returns$_t_uint256_$\",\n                              typeString: \"function () view returns (uint256)\",\n                            },\n                          },\n                          id: 46807,\n                          isConstant: false,\n                          isLValue: false,\n                          isPure: false,\n                          kind: \"functionCall\",\n                          lValueRequested: false,\n                          nameLocations: [],\n                          names: [],\n                          nodeType: \"FunctionCall\",\n                          src: \"3211:11:37\",\n                          tryCall: false,\n                          typeDescriptions: {\n                            typeIdentifier: \"t_uint256\",\n                            typeString: \"uint256\",\n                          },\n                        },\n                        src: \"3175:47:37\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_bool\",\n                          typeString: \"bool\",\n                        },\n                      },\n                      {\n                        hexValue:\n                          \"43616e6e6f74206d696e74206265796f6e642072656d61696e696e6720737570706c79\",\n                        id: 46809,\n                        isConstant: false,\n                        isLValue: false,\n                        isPure: true,\n                        kind: \"string\",\n                        lValueRequested: false,\n                        nodeType: \"Literal\",\n                        src: \"3224:37:37\",\n                        typeDescriptions: {\n                          typeIdentifier:\n                            \"t_stringliteral_126409ad6c97b72d10a72840135140542ad62c3339c4a02601e56fc11c2a1c06\",\n                          typeString:\n                            'literal_string \"Cannot mint beyond remaining supply\"',\n                        },\n                        value: \"Cannot mint beyond remaining supply\",\n                      },\n                    ],\n                    expression: {\n                      argumentTypes: [\n                        {\n                          typeIdentifier: \"t_bool\",\n                          typeString: \"bool\",\n                        },\n                        {\n                          typeIdentifier:\n                            \"t_stringliteral_126409ad6c97b72d10a72840135140542ad62c3339c4a02601e56fc11c2a1c06\",\n                          typeString:\n                            'literal_string \"Cannot mint beyond remaining supply\"',\n                        },\n                      ],\n                      id: 46799,\n                      name: \"require\",\n                      nodeType: \"Identifier\",\n                      overloadedDeclarations: [-18, -18],\n                      referencedDeclaration: -18,\n                      src: \"3167:7:37\",\n                      typeDescriptions: {\n                        typeIdentifier:\n                          \"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$\",\n                        typeString: \"function (bool,string memory) pure\",\n                      },\n                    },\n                    id: 46810,\n                    isConstant: false,\n                    isLValue: false,\n                    isPure: false,\n                    kind: \"functionCall\",\n                    lValueRequested: false,\n                    nameLocations: [],\n                    names: [],\n                    nodeType: \"FunctionCall\",\n                    src: \"3167:95:37\",\n                    tryCall: false,\n                    typeDescriptions: {\n                      typeIdentifier: \"t_tuple$__$\",\n                      typeString: \"tuple()\",\n                    },\n                  },\n                  id: 46811,\n                  nodeType: \"ExpressionStatement\",\n                  src: \"3167:95:37\",\n                },\n                {\n                  assignments: [46813],\n                  declarations: [\n                    {\n                      constant: false,\n                      id: 46813,\n                      mutability: \"mutable\",\n                      name: \"isDev\",\n                      nameLocation: \"3278:5:37\",\n                      nodeType: \"VariableDeclaration\",\n                      scope: 46916,\n                      src: \"3273:10:37\",\n                      stateVariable: false,\n                      storageLocation: \"default\",\n                      typeDescriptions: {\n                        typeIdentifier: \"t_bool\",\n                        typeString: \"bool\",\n                      },\n                      typeName: {\n                        id: 46812,\n                        name: \"bool\",\n                        nodeType: \"ElementaryTypeName\",\n                        src: \"3273:4:37\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_bool\",\n                          typeString: \"bool\",\n                        },\n                      },\n                      visibility: \"internal\",\n                    },\n                  ],\n                  id: 46818,\n                  initialValue: {\n                    commonType: {\n                      typeIdentifier: \"t_address\",\n                      typeString: \"address\",\n                    },\n                    id: 46817,\n                    isConstant: false,\n                    isLValue: false,\n                    isPure: false,\n                    lValueRequested: false,\n                    leftExpression: {\n                      expression: {\n                        id: 46814,\n                        name: \"msg\",\n                        nodeType: \"Identifier\",\n                        overloadedDeclarations: [],\n                        referencedDeclaration: -15,\n                        src: \"3286:3:37\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_magic_message\",\n                          typeString: \"msg\",\n                        },\n                      },\n                      id: 46815,\n                      isConstant: false,\n                      isLValue: false,\n                      isPure: false,\n                      lValueRequested: false,\n                      memberLocation: \"3290:6:37\",\n                      memberName: \"sender\",\n                      nodeType: \"MemberAccess\",\n                      src: \"3286:10:37\",\n                      typeDescriptions: {\n                        typeIdentifier: \"t_address\",\n                        typeString: \"address\",\n                      },\n                    },\n                    nodeType: \"BinaryOperation\",\n                    operator: \"==\",\n                    rightExpression: {\n                      id: 46816,\n                      name: \"devWallet\",\n                      nodeType: \"Identifier\",\n                      overloadedDeclarations: [],\n                      referencedDeclaration: 46692,\n                      src: \"3300:9:37\",\n                      typeDescriptions: {\n                        typeIdentifier: \"t_address\",\n                        typeString: \"address\",\n                      },\n                    },\n                    src: \"3286:23:37\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_bool\",\n                      typeString: \"bool\",\n                    },\n                  },\n                  nodeType: \"VariableDeclarationStatement\",\n                  src: \"3273:36:37\",\n                },\n                {\n                  assignments: [46820],\n                  declarations: [\n                    {\n                      constant: false,\n                      id: 46820,\n                      mutability: \"mutable\",\n                      name: \"devCanMintFree\",\n                      nameLocation: \"3324:14:37\",\n                      nodeType: \"VariableDeclaration\",\n                      scope: 46916,\n                      src: \"3319:19:37\",\n                      stateVariable: false,\n                      storageLocation: \"default\",\n                      typeDescriptions: {\n                        typeIdentifier: \"t_bool\",\n                        typeString: \"bool\",\n                      },\n                      typeName: {\n                        id: 46819,\n                        name: \"bool\",\n                        nodeType: \"ElementaryTypeName\",\n                        src: \"3319:4:37\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_bool\",\n                          typeString: \"bool\",\n                        },\n                      },\n                      visibility: \"internal\",\n                    },\n                  ],\n                  id: 46830,\n                  initialValue: {\n                    commonType: {\n                      typeIdentifier: \"t_uint256\",\n                      typeString: \"uint256\",\n                    },\n                    id: 46829,\n                    isConstant: false,\n                    isLValue: false,\n                    isPure: false,\n                    lValueRequested: false,\n                    leftExpression: {\n                      components: [\n                        {\n                          commonType: {\n                            typeIdentifier: \"t_uint256\",\n                            typeString: \"uint256\",\n                          },\n                          id: 46826,\n                          isConstant: false,\n                          isLValue: false,\n                          isPure: false,\n                          lValueRequested: false,\n                          leftExpression: {\n                            arguments: [\n                              {\n                                expression: {\n                                  id: 46822,\n                                  name: \"msg\",\n                                  nodeType: \"Identifier\",\n                                  overloadedDeclarations: [],\n                                  referencedDeclaration: -15,\n                                  src: \"3352:3:37\",\n                                  typeDescriptions: {\n                                    typeIdentifier: \"t_magic_message\",\n                                    typeString: \"msg\",\n                                  },\n                                },\n                                id: 46823,\n                                isConstant: false,\n                                isLValue: false,\n                                isPure: false,\n                                lValueRequested: false,\n                                memberLocation: \"3356:6:37\",\n                                memberName: \"sender\",\n                                nodeType: \"MemberAccess\",\n                                src: \"3352:10:37\",\n                                typeDescriptions: {\n                                  typeIdentifier: \"t_address\",\n                                  typeString: \"address\",\n                                },\n                              },\n                            ],\n                            expression: {\n                              argumentTypes: [\n                                {\n                                  typeIdentifier: \"t_address\",\n                                  typeString: \"address\",\n                                },\n                              ],\n                              id: 46821,\n                              name: \"balanceOf\",\n                              nodeType: \"Identifier\",\n                              overloadedDeclarations: [],\n                              referencedDeclaration: 43792,\n                              src: \"3342:9:37\",\n                              typeDescriptions: {\n                                typeIdentifier:\n                                  \"t_function_internal_view$_t_address_$returns$_t_uint256_$\",\n                                typeString:\n                                  \"function (address) view returns (uint256)\",\n                              },\n                            },\n                            id: 46824,\n                            isConstant: false,\n                            isLValue: false,\n                            isPure: false,\n                            kind: \"functionCall\",\n                            lValueRequested: false,\n                            nameLocations: [],\n                            names: [],\n                            nodeType: \"FunctionCall\",\n                            src: \"3342:21:37\",\n                            tryCall: false,\n                            typeDescriptions: {\n                              typeIdentifier: \"t_uint256\",\n                              typeString: \"uint256\",\n                            },\n                          },\n                          nodeType: \"BinaryOperation\",\n                          operator: \"+\",\n                          rightExpression: {\n                            id: 46825,\n                            name: \"quantity\",\n                            nodeType: \"Identifier\",\n                            overloadedDeclarations: [],\n                            referencedDeclaration: 46794,\n                            src: \"3366:8:37\",\n                            typeDescriptions: {\n                              typeIdentifier: \"t_uint256\",\n                              typeString: \"uint256\",\n                            },\n                          },\n                          src: \"3342:32:37\",\n                          typeDescriptions: {\n                            typeIdentifier: \"t_uint256\",\n                            typeString: \"uint256\",\n                          },\n                        },\n                      ],\n                      id: 46827,\n                      isConstant: false,\n                      isInlineArray: false,\n                      isLValue: false,\n                      isPure: false,\n                      lValueRequested: false,\n                      nodeType: \"TupleExpression\",\n                      src: \"3341:34:37\",\n                      typeDescriptions: {\n                        typeIdentifier: \"t_uint256\",\n                        typeString: \"uint256\",\n                      },\n                    },\n                    nodeType: \"BinaryOperation\",\n                    operator: \"<=\",\n                    rightExpression: {\n                      id: 46828,\n                      name: \"devMaxMint\",\n                      nodeType: \"Identifier\",\n                      overloadedDeclarations: [],\n                      referencedDeclaration: 46694,\n                      src: \"3379:10:37\",\n                      typeDescriptions: {\n                        typeIdentifier: \"t_uint256\",\n                        typeString: \"uint256\",\n                      },\n                    },\n                    src: \"3341:48:37\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_bool\",\n                      typeString: \"bool\",\n                    },\n                  },\n                  nodeType: \"VariableDeclarationStatement\",\n                  src: \"3319:70:37\",\n                },\n                {\n                  condition: {\n                    commonType: {\n                      typeIdentifier: \"t_bool\",\n                      typeString: \"bool\",\n                    },\n                    id: 46833,\n                    isConstant: false,\n                    isLValue: false,\n                    isPure: false,\n                    lValueRequested: false,\n                    leftExpression: {\n                      id: 46831,\n                      name: \"isDev\",\n                      nodeType: \"Identifier\",\n                      overloadedDeclarations: [],\n                      referencedDeclaration: 46813,\n                      src: \"3404:5:37\",\n                      typeDescriptions: {\n                        typeIdentifier: \"t_bool\",\n                        typeString: \"bool\",\n                      },\n                    },\n                    nodeType: \"BinaryOperation\",\n                    operator: \"&&\",\n                    rightExpression: {\n                      id: 46832,\n                      name: \"devCanMintFree\",\n                      nodeType: \"Identifier\",\n                      overloadedDeclarations: [],\n                      referencedDeclaration: 46820,\n                      src: \"3413:14:37\",\n                      typeDescriptions: {\n                        typeIdentifier: \"t_bool\",\n                        typeString: \"bool\",\n                      },\n                    },\n                    src: \"3404:23:37\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_bool\",\n                      typeString: \"bool\",\n                    },\n                  },\n                  falseBody: {\n                    id: 46912,\n                    nodeType: \"Block\",\n                    src: \"3547:604:37\",\n                    statements: [\n                      {\n                        assignments: [46852],\n                        declarations: [\n                          {\n                            constant: false,\n                            id: 46852,\n                            mutability: \"mutable\",\n                            name: \"totalFee\",\n                            nameLocation: \"3569:8:37\",\n                            nodeType: \"VariableDeclaration\",\n                            scope: 46912,\n                            src: \"3561:16:37\",\n                            stateVariable: false,\n                            storageLocation: \"default\",\n                            typeDescriptions: {\n                              typeIdentifier: \"t_uint256\",\n                              typeString: \"uint256\",\n                            },\n                            typeName: {\n                              id: 46851,\n                              name: \"uint256\",\n                              nodeType: \"ElementaryTypeName\",\n                              src: \"3561:7:37\",\n                              typeDescriptions: {\n                                typeIdentifier: \"t_uint256\",\n                                typeString: \"uint256\",\n                              },\n                            },\n                            visibility: \"internal\",\n                          },\n                        ],\n                        id: 46856,\n                        initialValue: {\n                          commonType: {\n                            typeIdentifier: \"t_uint256\",\n                            typeString: \"uint256\",\n                          },\n                          id: 46855,\n                          isConstant: false,\n                          isLValue: false,\n                          isPure: false,\n                          lValueRequested: false,\n                          leftExpression: {\n                            id: 46853,\n                            name: \"mintFee\",\n                            nodeType: \"Identifier\",\n                            overloadedDeclarations: [],\n                            referencedDeclaration: 46685,\n                            src: \"3580:7:37\",\n                            typeDescriptions: {\n                              typeIdentifier: \"t_uint256\",\n                              typeString: \"uint256\",\n                            },\n                          },\n                          nodeType: \"BinaryOperation\",\n                          operator: \"*\",\n                          rightExpression: {\n                            id: 46854,\n                            name: \"quantity\",\n                            nodeType: \"Identifier\",\n                            overloadedDeclarations: [],\n                            referencedDeclaration: 46794,\n                            src: \"3590:8:37\",\n                            typeDescriptions: {\n                              typeIdentifier: \"t_uint256\",\n                              typeString: \"uint256\",\n                            },\n                          },\n                          src: \"3580:18:37\",\n                          typeDescriptions: {\n                            typeIdentifier: \"t_uint256\",\n                            typeString: \"uint256\",\n                          },\n                        },\n                        nodeType: \"VariableDeclarationStatement\",\n                        src: \"3561:37:37\",\n                      },\n                      {\n                        expression: {\n                          arguments: [\n                            {\n                              commonType: {\n                                typeIdentifier: \"t_uint256\",\n                                typeString: \"uint256\",\n                              },\n                              id: 46868,\n                              isConstant: false,\n                              isLValue: false,\n                              isPure: false,\n                              lValueRequested: false,\n                              leftExpression: {\n                                arguments: [\n                                  {\n                                    expression: {\n                                      id: 46860,\n                                      name: \"msg\",\n                                      nodeType: \"Identifier\",\n                                      overloadedDeclarations: [],\n                                      referencedDeclaration: -15,\n                                      src: \"3658:3:37\",\n                                      typeDescriptions: {\n                                        typeIdentifier: \"t_magic_message\",\n                                        typeString: \"msg\",\n                                      },\n                                    },\n                                    id: 46861,\n                                    isConstant: false,\n                                    isLValue: false,\n                                    isPure: false,\n                                    lValueRequested: false,\n                                    memberLocation: \"3662:6:37\",\n                                    memberName: \"sender\",\n                                    nodeType: \"MemberAccess\",\n                                    src: \"3658:10:37\",\n                                    typeDescriptions: {\n                                      typeIdentifier: \"t_address\",\n                                      typeString: \"address\",\n                                    },\n                                  },\n                                  {\n                                    arguments: [\n                                      {\n                                        id: 46864,\n                                        name: \"this\",\n                                        nodeType: \"Identifier\",\n                                        overloadedDeclarations: [],\n                                        referencedDeclaration: -28,\n                                        src: \"3678:4:37\",\n                                        typeDescriptions: {\n                                          typeIdentifier:\n                                            \"t_contract$_AlgoBull_$46931\",\n                                          typeString: \"contract AlgoBull\",\n                                        },\n                                      },\n                                    ],\n                                    expression: {\n                                      argumentTypes: [\n                                        {\n                                          typeIdentifier:\n                                            \"t_contract$_AlgoBull_$46931\",\n                                          typeString: \"contract AlgoBull\",\n                                        },\n                                      ],\n                                      id: 46863,\n                                      isConstant: false,\n                                      isLValue: false,\n                                      isPure: true,\n                                      lValueRequested: false,\n                                      nodeType: \"ElementaryTypeNameExpression\",\n                                      src: \"3670:7:37\",\n                                      typeDescriptions: {\n                                        typeIdentifier: \"t_type$_t_address_$\",\n                                        typeString: \"type(address)\",\n                                      },\n                                      typeName: {\n                                        id: 46862,\n                                        name: \"address\",\n                                        nodeType: \"ElementaryTypeName\",\n                                        src: \"3670:7:37\",\n                                        typeDescriptions: {},\n                                      },\n                                    },\n                                    id: 46865,\n                                    isConstant: false,\n                                    isLValue: false,\n                                    isPure: false,\n                                    kind: \"typeConversion\",\n                                    lValueRequested: false,\n                                    nameLocations: [],\n                                    names: [],\n                                    nodeType: \"FunctionCall\",\n                                    src: \"3670:13:37\",\n                                    tryCall: false,\n                                    typeDescriptions: {\n                                      typeIdentifier: \"t_address\",\n                                      typeString: \"address\",\n                                    },\n                                  },\n                                ],\n                                expression: {\n                                  argumentTypes: [\n                                    {\n                                      typeIdentifier: \"t_address\",\n                                      typeString: \"address\",\n                                    },\n                                    {\n                                      typeIdentifier: \"t_address\",\n                                      typeString: \"address\",\n                                    },\n                                  ],\n                                  expression: {\n                                    id: 46858,\n                                    name: \"stablecoin\",\n                                    nodeType: \"Identifier\",\n                                    overloadedDeclarations: [],\n                                    referencedDeclaration: 46688,\n                                    src: \"3637:10:37\",\n                                    typeDescriptions: {\n                                      typeIdentifier:\n                                        \"t_contract$_ERC20_$43571\",\n                                      typeString: \"contract ERC20\",\n                                    },\n                                  },\n                                  id: 46859,\n                                  isConstant: false,\n                                  isLValue: false,\n                                  isPure: false,\n                                  lValueRequested: false,\n                                  memberLocation: \"3648:9:37\",\n                                  memberName: \"allowance\",\n                                  nodeType: \"MemberAccess\",\n                                  referencedDeclaration: 43126,\n                                  src: \"3637:20:37\",\n                                  typeDescriptions: {\n                                    typeIdentifier:\n                                      \"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$\",\n                                    typeString:\n                                      \"function (address,address) view external returns (uint256)\",\n                                  },\n                                },\n                                id: 46866,\n                                isConstant: false,\n                                isLValue: false,\n                                isPure: false,\n                                kind: \"functionCall\",\n                                lValueRequested: false,\n                                nameLocations: [],\n                                names: [],\n                                nodeType: \"FunctionCall\",\n                                src: \"3637:47:37\",\n                                tryCall: false,\n                                typeDescriptions: {\n                                  typeIdentifier: \"t_uint256\",\n                                  typeString: \"uint256\",\n                                },\n                              },\n                              nodeType: \"BinaryOperation\",\n                              operator: \">=\",\n                              rightExpression: {\n                                id: 46867,\n                                name: \"totalFee\",\n                                nodeType: \"Identifier\",\n                                overloadedDeclarations: [],\n                                referencedDeclaration: 46852,\n                                src: \"3688:8:37\",\n                                typeDescriptions: {\n                                  typeIdentifier: \"t_uint256\",\n                                  typeString: \"uint256\",\n                                },\n                              },\n                              src: \"3637:59:37\",\n                              typeDescriptions: {\n                                typeIdentifier: \"t_bool\",\n                                typeString: \"bool\",\n                              },\n                            },\n                            {\n                              hexValue:\n                                \"53656e646572206e6565647320746f20617070726f766520636f6e747261637420746f207370656e6420746f74616c2066656520616d6f756e74\",\n                              id: 46869,\n                              isConstant: false,\n                              isLValue: false,\n                              isPure: true,\n                              kind: \"string\",\n                              lValueRequested: false,\n                              nodeType: \"Literal\",\n                              src: \"3714:60:37\",\n                              typeDescriptions: {\n                                typeIdentifier:\n                                  \"t_stringliteral_729265ece94b10297071027836f56b3eefca0c7eb7936122ba20aa74f31d7361\",\n                                typeString:\n                                  'literal_string \"Sender needs to approve contract to spend total fee amount\"',\n                              },\n                              value:\n                                \"Sender needs to approve contract to spend total fee amount\",\n                            },\n                          ],\n                          expression: {\n                            argumentTypes: [\n                              {\n                                typeIdentifier: \"t_bool\",\n                                typeString: \"bool\",\n                              },\n                              {\n                                typeIdentifier:\n                                  \"t_stringliteral_729265ece94b10297071027836f56b3eefca0c7eb7936122ba20aa74f31d7361\",\n                                typeString:\n                                  'literal_string \"Sender needs to approve contract to spend total fee amount\"',\n                              },\n                            ],\n                            id: 46857,\n                            name: \"require\",\n                            nodeType: \"Identifier\",\n                            overloadedDeclarations: [-18, -18],\n                            referencedDeclaration: -18,\n                            src: \"3612:7:37\",\n                            typeDescriptions: {\n                              typeIdentifier:\n                                \"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$\",\n                              typeString: \"function (bool,string memory) pure\",\n                            },\n                          },\n                          id: 46870,\n                          isConstant: false,\n                          isLValue: false,\n                          isPure: false,\n                          kind: \"functionCall\",\n                          lValueRequested: false,\n                          nameLocations: [],\n                          names: [],\n                          nodeType: \"FunctionCall\",\n                          src: \"3612:176:37\",\n                          tryCall: false,\n                          typeDescriptions: {\n                            typeIdentifier: \"t_tuple$__$\",\n                            typeString: \"tuple()\",\n                          },\n                        },\n                        id: 46871,\n                        nodeType: \"ExpressionStatement\",\n                        src: \"3612:176:37\",\n                      },\n                      {\n                        expression: {\n                          arguments: [\n                            {\n                              commonType: {\n                                typeIdentifier: \"t_uint256\",\n                                typeString: \"uint256\",\n                              },\n                              id: 46882,\n                              isConstant: false,\n                              isLValue: false,\n                              isPure: false,\n                              lValueRequested: false,\n                              leftExpression: {\n                                arguments: [\n                                  {\n                                    expression: {\n                                      id: 46875,\n                                      name: \"msg\",\n                                      nodeType: \"Identifier\",\n                                      overloadedDeclarations: [],\n                                      referencedDeclaration: -15,\n                                      src: \"3848:3:37\",\n                                      typeDescriptions: {\n                                        typeIdentifier: \"t_magic_message\",\n                                        typeString: \"msg\",\n                                      },\n                                    },\n                                    id: 46876,\n                                    isConstant: false,\n                                    isLValue: false,\n                                    isPure: false,\n                                    lValueRequested: false,\n                                    memberLocation: \"3852:6:37\",\n                                    memberName: \"sender\",\n                                    nodeType: \"MemberAccess\",\n                                    src: \"3848:10:37\",\n                                    typeDescriptions: {\n                                      typeIdentifier: \"t_address\",\n                                      typeString: \"address\",\n                                    },\n                                  },\n                                ],\n                                expression: {\n                                  argumentTypes: [\n                                    {\n                                      typeIdentifier: \"t_address\",\n                                      typeString: \"address\",\n                                    },\n                                  ],\n                                  expression: {\n                                    id: 46873,\n                                    name: \"stablecoin\",\n                                    nodeType: \"Identifier\",\n                                    overloadedDeclarations: [],\n                                    referencedDeclaration: 46688,\n                                    src: \"3827:10:37\",\n                                    typeDescriptions: {\n                                      typeIdentifier:\n                                        \"t_contract$_ERC20_$43571\",\n                                      typeString: \"contract ERC20\",\n                                    },\n                                  },\n                                  id: 46874,\n                                  isConstant: false,\n                                  isLValue: false,\n                                  isPure: false,\n                                  lValueRequested: false,\n                                  memberLocation: \"3838:9:37\",\n                                  memberName: \"balanceOf\",\n                                  nodeType: \"MemberAccess\",\n                                  referencedDeclaration: 43083,\n                                  src: \"3827:20:37\",\n                                  typeDescriptions: {\n                                    typeIdentifier:\n                                      \"t_function_external_view$_t_address_$returns$_t_uint256_$\",\n                                    typeString:\n                                      \"function (address) view external returns (uint256)\",\n                                  },\n                                },\n                                id: 46877,\n                                isConstant: false,\n                                isLValue: false,\n                                isPure: false,\n                                kind: \"functionCall\",\n                                lValueRequested: false,\n                                nameLocations: [],\n                                names: [],\n                                nodeType: \"FunctionCall\",\n                                src: \"3827:32:37\",\n                                tryCall: false,\n                                typeDescriptions: {\n                                  typeIdentifier: \"t_uint256\",\n                                  typeString: \"uint256\",\n                                },\n                              },\n                              nodeType: \"BinaryOperation\",\n                              operator: \">=\",\n                              rightExpression: {\n                                components: [\n                                  {\n                                    commonType: {\n                                      typeIdentifier: \"t_uint256\",\n                                      typeString: \"uint256\",\n                                    },\n                                    id: 46880,\n                                    isConstant: false,\n                                    isLValue: false,\n                                    isPure: false,\n                                    lValueRequested: false,\n                                    leftExpression: {\n                                      id: 46878,\n                                      name: \"mintFee\",\n                                      nodeType: \"Identifier\",\n                                      overloadedDeclarations: [],\n                                      referencedDeclaration: 46685,\n                                      src: \"3864:7:37\",\n                                      typeDescriptions: {\n                                        typeIdentifier: \"t_uint256\",\n                                        typeString: \"uint256\",\n                                      },\n                                    },\n                                    nodeType: \"BinaryOperation\",\n                                    operator: \"*\",\n                                    rightExpression: {\n                                      id: 46879,\n                                      name: \"quantity\",\n                                      nodeType: \"Identifier\",\n                                      overloadedDeclarations: [],\n                                      referencedDeclaration: 46794,\n                                      src: \"3874:8:37\",\n                                      typeDescriptions: {\n                                        typeIdentifier: \"t_uint256\",\n                                        typeString: \"uint256\",\n                                      },\n                                    },\n                                    src: \"3864:18:37\",\n                                    typeDescriptions: {\n                                      typeIdentifier: \"t_uint256\",\n                                      typeString: \"uint256\",\n                                    },\n                                  },\n                                ],\n                                id: 46881,\n                                isConstant: false,\n                                isInlineArray: false,\n                                isLValue: false,\n                                isPure: false,\n                                lValueRequested: false,\n                                nodeType: \"TupleExpression\",\n                                src: \"3863:20:37\",\n                                typeDescriptions: {\n                                  typeIdentifier: \"t_uint256\",\n                                  typeString: \"uint256\",\n                                },\n                              },\n                              src: \"3827:56:37\",\n                              typeDescriptions: {\n                                typeIdentifier: \"t_bool\",\n                                typeString: \"bool\",\n                              },\n                            },\n                            {\n                              hexValue:\n                                \"53656e64657220646f6573206e6f74206861766520656e6f75676820737461626c65636f696e20666f72206d696e74696e6720666565\",\n                              id: 46883,\n                              isConstant: false,\n                              isLValue: false,\n                              isPure: true,\n                              kind: \"string\",\n                              lValueRequested: false,\n                              nodeType: \"Literal\",\n                              src: \"3901:56:37\",\n                              typeDescriptions: {\n                                typeIdentifier:\n                                  \"t_stringliteral_2c854a8f84888137a87c26fa92e48306bac2bb727d38f054619debbbd7404982\",\n                                typeString:\n                                  'literal_string \"Sender does not have enough stablecoin for minting fee\"',\n                              },\n                              value:\n                                \"Sender does not have enough stablecoin for minting fee\",\n                            },\n                          ],\n                          expression: {\n                            argumentTypes: [\n                              {\n                                typeIdentifier: \"t_bool\",\n                                typeString: \"bool\",\n                              },\n                              {\n                                typeIdentifier:\n                                  \"t_stringliteral_2c854a8f84888137a87c26fa92e48306bac2bb727d38f054619debbbd7404982\",\n                                typeString:\n                                  'literal_string \"Sender does not have enough stablecoin for minting fee\"',\n                              },\n                            ],\n                            id: 46872,\n                            name: \"require\",\n                            nodeType: \"Identifier\",\n                            overloadedDeclarations: [-18, -18],\n                            referencedDeclaration: -18,\n                            src: \"3802:7:37\",\n                            typeDescriptions: {\n                              typeIdentifier:\n                                \"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$\",\n                              typeString: \"function (bool,string memory) pure\",\n                            },\n                          },\n                          id: 46884,\n                          isConstant: false,\n                          isLValue: false,\n                          isPure: false,\n                          kind: \"functionCall\",\n                          lValueRequested: false,\n                          nameLocations: [],\n                          names: [],\n                          nodeType: \"FunctionCall\",\n                          src: \"3802:169:37\",\n                          tryCall: false,\n                          typeDescriptions: {\n                            typeIdentifier: \"t_tuple$__$\",\n                            typeString: \"tuple()\",\n                          },\n                        },\n                        id: 46885,\n                        nodeType: \"ExpressionStatement\",\n                        src: \"3802:169:37\",\n                      },\n                      {\n                        body: {\n                          id: 46900,\n                          nodeType: \"Block\",\n                          src: \"4024:49:37\",\n                          statements: [\n                            {\n                              expression: {\n                                arguments: [\n                                  {\n                                    id: 46897,\n                                    name: \"_recipient\",\n                                    nodeType: \"Identifier\",\n                                    overloadedDeclarations: [],\n                                    referencedDeclaration: 46792,\n                                    src: \"4047:10:37\",\n                                    typeDescriptions: {\n                                      typeIdentifier: \"t_address\",\n                                      typeString: \"address\",\n                                    },\n                                  },\n                                ],\n                                expression: {\n                                  argumentTypes: [\n                                    {\n                                      typeIdentifier: \"t_address\",\n                                      typeString: \"address\",\n                                    },\n                                  ],\n                                  id: 46896,\n                                  name: \"mint\",\n                                  nodeType: \"Identifier\",\n                                  overloadedDeclarations: [],\n                                  referencedDeclaration: 46789,\n                                  src: \"4042:4:37\",\n                                  typeDescriptions: {\n                                    typeIdentifier:\n                                      \"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$\",\n                                    typeString:\n                                      \"function (address) returns (uint256)\",\n                                  },\n                                },\n                                id: 46898,\n                                isConstant: false,\n                                isLValue: false,\n                                isPure: false,\n                                kind: \"functionCall\",\n                                lValueRequested: false,\n                                nameLocations: [],\n                                names: [],\n                                nodeType: \"FunctionCall\",\n                                src: \"4042:16:37\",\n                                tryCall: false,\n                                typeDescriptions: {\n                                  typeIdentifier: \"t_uint256\",\n                                  typeString: \"uint256\",\n                                },\n                              },\n                              id: 46899,\n                              nodeType: \"ExpressionStatement\",\n                              src: \"4042:16:37\",\n                            },\n                          ],\n                        },\n                        condition: {\n                          commonType: {\n                            typeIdentifier: \"t_uint256\",\n                            typeString: \"uint256\",\n                          },\n                          id: 46892,\n                          isConstant: false,\n                          isLValue: false,\n                          isPure: false,\n                          lValueRequested: false,\n                          leftExpression: {\n                            id: 46890,\n                            name: \"i\",\n                            nodeType: \"Identifier\",\n                            overloadedDeclarations: [],\n                            referencedDeclaration: 46887,\n                            src: \"4005:1:37\",\n                            typeDescriptions: {\n                              typeIdentifier: \"t_uint256\",\n                              typeString: \"uint256\",\n                            },\n                          },\n                          nodeType: \"BinaryOperation\",\n                          operator: \"<\",\n                          rightExpression: {\n                            id: 46891,\n                            name: \"quantity\",\n                            nodeType: \"Identifier\",\n                            overloadedDeclarations: [],\n                            referencedDeclaration: 46794,\n                            src: \"4009:8:37\",\n                            typeDescriptions: {\n                              typeIdentifier: \"t_uint256\",\n                              typeString: \"uint256\",\n                            },\n                          },\n                          src: \"4005:12:37\",\n                          typeDescriptions: {\n                            typeIdentifier: \"t_bool\",\n                            typeString: \"bool\",\n                          },\n                        },\n                        id: 46901,\n                        initializationExpression: {\n                          assignments: [46887],\n                          declarations: [\n                            {\n                              constant: false,\n                              id: 46887,\n                              mutability: \"mutable\",\n                              name: \"i\",\n                              nameLocation: \"3998:1:37\",\n                              nodeType: \"VariableDeclaration\",\n                              scope: 46901,\n                              src: \"3990:9:37\",\n                              stateVariable: false,\n                              storageLocation: \"default\",\n                              typeDescriptions: {\n                                typeIdentifier: \"t_uint256\",\n                                typeString: \"uint256\",\n                              },\n                              typeName: {\n                                id: 46886,\n                                name: \"uint256\",\n                                nodeType: \"ElementaryTypeName\",\n                                src: \"3990:7:37\",\n                                typeDescriptions: {\n                                  typeIdentifier: \"t_uint256\",\n                                  typeString: \"uint256\",\n                                },\n                              },\n                              visibility: \"internal\",\n                            },\n                          ],\n                          id: 46889,\n                          initialValue: {\n                            hexValue: \"30\",\n                            id: 46888,\n                            isConstant: false,\n                            isLValue: false,\n                            isPure: true,\n                            kind: \"number\",\n                            lValueRequested: false,\n                            nodeType: \"Literal\",\n                            src: \"4002:1:37\",\n                            typeDescriptions: {\n                              typeIdentifier: \"t_rational_0_by_1\",\n                              typeString: \"int_const 0\",\n                            },\n                            value: \"0\",\n                          },\n                          nodeType: \"VariableDeclarationStatement\",\n                          src: \"3990:13:37\",\n                        },\n                        loopExpression: {\n                          expression: {\n                            id: 46894,\n                            isConstant: false,\n                            isLValue: false,\n                            isPure: false,\n                            lValueRequested: false,\n                            nodeType: \"UnaryOperation\",\n                            operator: \"++\",\n                            prefix: false,\n                            src: \"4019:3:37\",\n                            subExpression: {\n                              id: 46893,\n                              name: \"i\",\n                              nodeType: \"Identifier\",\n                              overloadedDeclarations: [],\n                              referencedDeclaration: 46887,\n                              src: \"4019:1:37\",\n                              typeDescriptions: {\n                                typeIdentifier: \"t_uint256\",\n                                typeString: \"uint256\",\n                              },\n                            },\n                            typeDescriptions: {\n                              typeIdentifier: \"t_uint256\",\n                              typeString: \"uint256\",\n                            },\n                          },\n                          id: 46895,\n                          nodeType: \"ExpressionStatement\",\n                          src: \"4019:3:37\",\n                        },\n                        nodeType: \"ForStatement\",\n                        src: \"3985:88:37\",\n                      },\n                      {\n                        expression: {\n                          arguments: [\n                            {\n                              expression: {\n                                id: 46905,\n                                name: \"msg\",\n                                nodeType: \"Identifier\",\n                                overloadedDeclarations: [],\n                                referencedDeclaration: -15,\n                                src: \"4110:3:37\",\n                                typeDescriptions: {\n                                  typeIdentifier: \"t_magic_message\",\n                                  typeString: \"msg\",\n                                },\n                              },\n                              id: 46906,\n                              isConstant: false,\n                              isLValue: false,\n                              isPure: false,\n                              lValueRequested: false,\n                              memberLocation: \"4114:6:37\",\n                              memberName: \"sender\",\n                              nodeType: \"MemberAccess\",\n                              src: \"4110:10:37\",\n                              typeDescriptions: {\n                                typeIdentifier: \"t_address\",\n                                typeString: \"address\",\n                              },\n                            },\n                            {\n                              arguments: [],\n                              expression: {\n                                argumentTypes: [],\n                                id: 46907,\n                                name: \"owner\",\n                                nodeType: \"Identifier\",\n                                overloadedDeclarations: [],\n                                referencedDeclaration: 42893,\n                                src: \"4122:5:37\",\n                                typeDescriptions: {\n                                  typeIdentifier:\n                                    \"t_function_internal_view$__$returns$_t_address_$\",\n                                  typeString:\n                                    \"function () view returns (address)\",\n                                },\n                              },\n                              id: 46908,\n                              isConstant: false,\n                              isLValue: false,\n                              isPure: false,\n                              kind: \"functionCall\",\n                              lValueRequested: false,\n                              nameLocations: [],\n                              names: [],\n                              nodeType: \"FunctionCall\",\n                              src: \"4122:7:37\",\n                              tryCall: false,\n                              typeDescriptions: {\n                                typeIdentifier: \"t_address\",\n                                typeString: \"address\",\n                              },\n                            },\n                            {\n                              id: 46909,\n                              name: \"totalFee\",\n                              nodeType: \"Identifier\",\n                              overloadedDeclarations: [],\n                              referencedDeclaration: 46852,\n                              src: \"4131:8:37\",\n                              typeDescriptions: {\n                                typeIdentifier: \"t_uint256\",\n                                typeString: \"uint256\",\n                              },\n                            },\n                          ],\n                          expression: {\n                            argumentTypes: [\n                              {\n                                typeIdentifier: \"t_address\",\n                                typeString: \"address\",\n                              },\n                              {\n                                typeIdentifier: \"t_address\",\n                                typeString: \"address\",\n                              },\n                              {\n                                typeIdentifier: \"t_uint256\",\n                                typeString: \"uint256\",\n                              },\n                            ],\n                            expression: {\n                              id: 46902,\n                              name: \"stablecoin\",\n                              nodeType: \"Identifier\",\n                              overloadedDeclarations: [],\n                              referencedDeclaration: 46688,\n                              src: \"4086:10:37\",\n                              typeDescriptions: {\n                                typeIdentifier: \"t_contract$_ERC20_$43571\",\n                                typeString: \"contract ERC20\",\n                              },\n                            },\n                            id: 46904,\n                            isConstant: false,\n                            isLValue: false,\n                            isPure: false,\n                            lValueRequested: false,\n                            memberLocation: \"4097:12:37\",\n                            memberName: \"transferFrom\",\n                            nodeType: \"MemberAccess\",\n                            referencedDeclaration: 43184,\n                            src: \"4086:23:37\",\n                            typeDescriptions: {\n                              typeIdentifier:\n                                \"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$\",\n                              typeString:\n                                \"function (address,address,uint256) external returns (bool)\",\n                            },\n                          },\n                          id: 46910,\n                          isConstant: false,\n                          isLValue: false,\n                          isPure: false,\n                          kind: \"functionCall\",\n                          lValueRequested: false,\n                          nameLocations: [],\n                          names: [],\n                          nodeType: \"FunctionCall\",\n                          src: \"4086:54:37\",\n                          tryCall: false,\n                          typeDescriptions: {\n                            typeIdentifier: \"t_bool\",\n                            typeString: \"bool\",\n                          },\n                        },\n                        id: 46911,\n                        nodeType: \"ExpressionStatement\",\n                        src: \"4086:54:37\",\n                      },\n                    ],\n                  },\n                  id: 46913,\n                  nodeType: \"IfStatement\",\n                  src: \"3400:751:37\",\n                  trueBody: {\n                    id: 46850,\n                    nodeType: \"Block\",\n                    src: \"3429:112:37\",\n                    statements: [\n                      {\n                        body: {\n                          id: 46848,\n                          nodeType: \"Block\",\n                          src: \"3482:49:37\",\n                          statements: [\n                            {\n                              expression: {\n                                arguments: [\n                                  {\n                                    id: 46845,\n                                    name: \"_recipient\",\n                                    nodeType: \"Identifier\",\n                                    overloadedDeclarations: [],\n                                    referencedDeclaration: 46792,\n                                    src: \"3505:10:37\",\n                                    typeDescriptions: {\n                                      typeIdentifier: \"t_address\",\n                                      typeString: \"address\",\n                                    },\n                                  },\n                                ],\n                                expression: {\n                                  argumentTypes: [\n                                    {\n                                      typeIdentifier: \"t_address\",\n                                      typeString: \"address\",\n                                    },\n                                  ],\n                                  id: 46844,\n                                  name: \"mint\",\n                                  nodeType: \"Identifier\",\n                                  overloadedDeclarations: [],\n                                  referencedDeclaration: 46789,\n                                  src: \"3500:4:37\",\n                                  typeDescriptions: {\n                                    typeIdentifier:\n                                      \"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$\",\n                                    typeString:\n                                      \"function (address) returns (uint256)\",\n                                  },\n                                },\n                                id: 46846,\n                                isConstant: false,\n                                isLValue: false,\n                                isPure: false,\n                                kind: \"functionCall\",\n                                lValueRequested: false,\n                                nameLocations: [],\n                                names: [],\n                                nodeType: \"FunctionCall\",\n                                src: \"3500:16:37\",\n                                tryCall: false,\n                                typeDescriptions: {\n                                  typeIdentifier: \"t_uint256\",\n                                  typeString: \"uint256\",\n                                },\n                              },\n                              id: 46847,\n                              nodeType: \"ExpressionStatement\",\n                              src: \"3500:16:37\",\n                            },\n                          ],\n                        },\n                        condition: {\n                          commonType: {\n                            typeIdentifier: \"t_uint256\",\n                            typeString: \"uint256\",\n                          },\n                          id: 46840,\n                          isConstant: false,\n                          isLValue: false,\n                          isPure: false,\n                          lValueRequested: false,\n                          leftExpression: {\n                            id: 46838,\n                            name: \"i\",\n                            nodeType: \"Identifier\",\n                            overloadedDeclarations: [],\n                            referencedDeclaration: 46835,\n                            src: \"3463:1:37\",\n                            typeDescriptions: {\n                              typeIdentifier: \"t_uint256\",\n                              typeString: \"uint256\",\n                            },\n                          },\n                          nodeType: \"BinaryOperation\",\n                          operator: \"<\",\n                          rightExpression: {\n                            id: 46839,\n                            name: \"quantity\",\n                            nodeType: \"Identifier\",\n                            overloadedDeclarations: [],\n                            referencedDeclaration: 46794,\n                            src: \"3467:8:37\",\n                            typeDescriptions: {\n                              typeIdentifier: \"t_uint256\",\n                              typeString: \"uint256\",\n                            },\n                          },\n                          src: \"3463:12:37\",\n                          typeDescriptions: {\n                            typeIdentifier: \"t_bool\",\n                            typeString: \"bool\",\n                          },\n                        },\n                        id: 46849,\n                        initializationExpression: {\n                          assignments: [46835],\n                          declarations: [\n                            {\n                              constant: false,\n                              id: 46835,\n                              mutability: \"mutable\",\n                              name: \"i\",\n                              nameLocation: \"3456:1:37\",\n                              nodeType: \"VariableDeclaration\",\n                              scope: 46849,\n                              src: \"3448:9:37\",\n                              stateVariable: false,\n                              storageLocation: \"default\",\n                              typeDescriptions: {\n                                typeIdentifier: \"t_uint256\",\n                                typeString: \"uint256\",\n                              },\n                              typeName: {\n                                id: 46834,\n                                name: \"uint256\",\n                                nodeType: \"ElementaryTypeName\",\n                                src: \"3448:7:37\",\n                                typeDescriptions: {\n                                  typeIdentifier: \"t_uint256\",\n                                  typeString: \"uint256\",\n                                },\n                              },\n                              visibility: \"internal\",\n                            },\n                          ],\n                          id: 46837,\n                          initialValue: {\n                            hexValue: \"30\",\n                            id: 46836,\n                            isConstant: false,\n                            isLValue: false,\n                            isPure: true,\n                            kind: \"number\",\n                            lValueRequested: false,\n                            nodeType: \"Literal\",\n                            src: \"3460:1:37\",\n                            typeDescriptions: {\n                              typeIdentifier: \"t_rational_0_by_1\",\n                              typeString: \"int_const 0\",\n                            },\n                            value: \"0\",\n                          },\n                          nodeType: \"VariableDeclarationStatement\",\n                          src: \"3448:13:37\",\n                        },\n                        loopExpression: {\n                          expression: {\n                            id: 46842,\n                            isConstant: false,\n                            isLValue: false,\n                            isPure: false,\n                            lValueRequested: false,\n                            nodeType: \"UnaryOperation\",\n                            operator: \"++\",\n                            prefix: false,\n                            src: \"3477:3:37\",\n                            subExpression: {\n                              id: 46841,\n                              name: \"i\",\n                              nodeType: \"Identifier\",\n                              overloadedDeclarations: [],\n                              referencedDeclaration: 46835,\n                              src: \"3477:1:37\",\n                              typeDescriptions: {\n                                typeIdentifier: \"t_uint256\",\n                                typeString: \"uint256\",\n                              },\n                            },\n                            typeDescriptions: {\n                              typeIdentifier: \"t_uint256\",\n                              typeString: \"uint256\",\n                            },\n                          },\n                          id: 46843,\n                          nodeType: \"ExpressionStatement\",\n                          src: \"3477:3:37\",\n                        },\n                        nodeType: \"ForStatement\",\n                        src: \"3443:88:37\",\n                      },\n                    ],\n                  },\n                },\n                {\n                  expression: {\n                    id: 46914,\n                    name: \"quantity\",\n                    nodeType: \"Identifier\",\n                    overloadedDeclarations: [],\n                    referencedDeclaration: 46794,\n                    src: \"4168:8:37\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_uint256\",\n                      typeString: \"uint256\",\n                    },\n                  },\n                  functionReturnParameters: 46798,\n                  id: 46915,\n                  nodeType: \"Return\",\n                  src: \"4161:15:37\",\n                },\n              ],\n            },\n            documentation: {\n              id: 46790,\n              nodeType: \"StructuredDocumentation\",\n              src: \"2742:323:37\",\n              text: \" @dev Mints multiple tokens and sends fee amount to owner.\\n The sender must have an adequate balance of stablecoin to pay the fee. minting\\n should not push the total tokens minted above the max token supply.\\n @param _recipient The address of the account that will receive the minted NFT.\",\n            },\n            functionSelector: \"b3fa4a4c\",\n            implemented: true,\n            kind: \"function\",\n            modifiers: [],\n            name: \"mintMultiple\",\n            nameLocation: \"3079:12:37\",\n            parameters: {\n              id: 46795,\n              nodeType: \"ParameterList\",\n              parameters: [\n                {\n                  constant: false,\n                  id: 46792,\n                  mutability: \"mutable\",\n                  name: \"_recipient\",\n                  nameLocation: \"3100:10:37\",\n                  nodeType: \"VariableDeclaration\",\n                  scope: 46917,\n                  src: \"3092:18:37\",\n                  stateVariable: false,\n                  storageLocation: \"default\",\n                  typeDescriptions: {\n                    typeIdentifier: \"t_address\",\n                    typeString: \"address\",\n                  },\n                  typeName: {\n                    id: 46791,\n                    name: \"address\",\n                    nodeType: \"ElementaryTypeName\",\n                    src: \"3092:7:37\",\n                    stateMutability: \"nonpayable\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_address\",\n                      typeString: \"address\",\n                    },\n                  },\n                  visibility: \"internal\",\n                },\n                {\n                  constant: false,\n                  id: 46794,\n                  mutability: \"mutable\",\n                  name: \"quantity\",\n                  nameLocation: \"3120:8:37\",\n                  nodeType: \"VariableDeclaration\",\n                  scope: 46917,\n                  src: \"3112:16:37\",\n                  stateVariable: false,\n                  storageLocation: \"default\",\n                  typeDescriptions: {\n                    typeIdentifier: \"t_uint256\",\n                    typeString: \"uint256\",\n                  },\n                  typeName: {\n                    id: 46793,\n                    name: \"uint256\",\n                    nodeType: \"ElementaryTypeName\",\n                    src: \"3112:7:37\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_uint256\",\n                      typeString: \"uint256\",\n                    },\n                  },\n                  visibility: \"internal\",\n                },\n              ],\n              src: \"3091:38:37\",\n            },\n            returnParameters: {\n              id: 46798,\n              nodeType: \"ParameterList\",\n              parameters: [\n                {\n                  constant: false,\n                  id: 46797,\n                  mutability: \"mutable\",\n                  name: \"\",\n                  nameLocation: \"-1:-1:-1\",\n                  nodeType: \"VariableDeclaration\",\n                  scope: 46917,\n                  src: \"3148:7:37\",\n                  stateVariable: false,\n                  storageLocation: \"default\",\n                  typeDescriptions: {\n                    typeIdentifier: \"t_uint256\",\n                    typeString: \"uint256\",\n                  },\n                  typeName: {\n                    id: 46796,\n                    name: \"uint256\",\n                    nodeType: \"ElementaryTypeName\",\n                    src: \"3148:7:37\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_uint256\",\n                      typeString: \"uint256\",\n                    },\n                  },\n                  visibility: \"internal\",\n                },\n              ],\n              src: \"3147:9:37\",\n            },\n            scope: 46931,\n            stateMutability: \"nonpayable\",\n            virtual: false,\n            visibility: \"external\",\n          },\n          {\n            id: 46930,\n            nodeType: \"FunctionDefinition\",\n            src: \"4260:106:37\",\n            nodes: [],\n            body: {\n              id: 46929,\n              nodeType: \"Block\",\n              src: \"4311:55:37\",\n              nodes: [],\n              statements: [\n                {\n                  expression: {\n                    commonType: {\n                      typeIdentifier: \"t_uint256\",\n                      typeString: \"uint256\",\n                    },\n                    id: 46927,\n                    isConstant: false,\n                    isLValue: false,\n                    isPure: false,\n                    lValueRequested: false,\n                    leftExpression: {\n                      id: 46923,\n                      name: \"maxSupply\",\n                      nodeType: \"Identifier\",\n                      overloadedDeclarations: [],\n                      referencedDeclaration: 46690,\n                      src: \"4328:9:37\",\n                      typeDescriptions: {\n                        typeIdentifier: \"t_uint256\",\n                        typeString: \"uint256\",\n                      },\n                    },\n                    nodeType: \"BinaryOperation\",\n                    operator: \"-\",\n                    rightExpression: {\n                      arguments: [],\n                      expression: {\n                        argumentTypes: [],\n                        expression: {\n                          id: 46924,\n                          name: \"_tokenIds\",\n                          nodeType: \"Identifier\",\n                          overloadedDeclarations: [],\n                          referencedDeclaration: 46697,\n                          src: \"4340:9:37\",\n                          typeDescriptions: {\n                            typeIdentifier: \"t_struct$_Counter_$45364_storage\",\n                            typeString: \"struct Counters.Counter storage ref\",\n                          },\n                        },\n                        id: 46925,\n                        isConstant: false,\n                        isLValue: true,\n                        isPure: false,\n                        lValueRequested: false,\n                        memberLocation: \"4350:7:37\",\n                        memberName: \"current\",\n                        nodeType: \"MemberAccess\",\n                        referencedDeclaration: 45376,\n                        src: \"4340:17:37\",\n                        typeDescriptions: {\n                          typeIdentifier:\n                            \"t_function_internal_view$_t_struct$_Counter_$45364_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$45364_storage_ptr_$\",\n                          typeString:\n                            \"function (struct Counters.Counter storage pointer) view returns (uint256)\",\n                        },\n                      },\n                      id: 46926,\n                      isConstant: false,\n                      isLValue: false,\n                      isPure: false,\n                      kind: \"functionCall\",\n                      lValueRequested: false,\n                      nameLocations: [],\n                      names: [],\n                      nodeType: \"FunctionCall\",\n                      src: \"4340:19:37\",\n                      tryCall: false,\n                      typeDescriptions: {\n                        typeIdentifier: \"t_uint256\",\n                        typeString: \"uint256\",\n                      },\n                    },\n                    src: \"4328:31:37\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_uint256\",\n                      typeString: \"uint256\",\n                    },\n                  },\n                  functionReturnParameters: 46922,\n                  id: 46928,\n                  nodeType: \"Return\",\n                  src: \"4321:38:37\",\n                },\n              ],\n            },\n            documentation: {\n              id: 46918,\n              nodeType: \"StructuredDocumentation\",\n              src: \"4189:66:37\",\n              text: \" @dev Get remaining unclaimed NFTs left to mint.\",\n            },\n            functionSelector: \"669416b8\",\n            implemented: true,\n            kind: \"function\",\n            modifiers: [],\n            name: \"unclaimed\",\n            nameLocation: \"4269:9:37\",\n            parameters: {\n              id: 46919,\n              nodeType: \"ParameterList\",\n              parameters: [],\n              src: \"4278:2:37\",\n            },\n            returnParameters: {\n              id: 46922,\n              nodeType: \"ParameterList\",\n              parameters: [\n                {\n                  constant: false,\n                  id: 46921,\n                  mutability: \"mutable\",\n                  name: \"\",\n                  nameLocation: \"-1:-1:-1\",\n                  nodeType: \"VariableDeclaration\",\n                  scope: 46930,\n                  src: \"4302:7:37\",\n                  stateVariable: false,\n                  storageLocation: \"default\",\n                  typeDescriptions: {\n                    typeIdentifier: \"t_uint256\",\n                    typeString: \"uint256\",\n                  },\n                  typeName: {\n                    id: 46920,\n                    name: \"uint256\",\n                    nodeType: \"ElementaryTypeName\",\n                    src: \"4302:7:37\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_uint256\",\n                      typeString: \"uint256\",\n                    },\n                  },\n                  visibility: \"internal\",\n                },\n              ],\n              src: \"4301:9:37\",\n            },\n            scope: 46931,\n            stateMutability: \"view\",\n            virtual: false,\n            visibility: \"public\",\n          },\n        ],\n        abstract: false,\n        baseContracts: [\n          {\n            baseName: {\n              id: 46676,\n              name: \"ERC721Royalty\",\n              nameLocations: [\"619:13:37\"],\n              nodeType: \"IdentifierPath\",\n              referencedDeclaration: 44781,\n              src: \"619:13:37\",\n            },\n            id: 46677,\n            nodeType: \"InheritanceSpecifier\",\n            src: \"619:13:37\",\n          },\n          {\n            baseName: {\n              id: 46678,\n              name: \"Ownable\",\n              nameLocations: [\"634:7:37\"],\n              nodeType: \"IdentifierPath\",\n              referencedDeclaration: 42965,\n              src: \"634:7:37\",\n            },\n            id: 46679,\n            nodeType: \"InheritanceSpecifier\",\n            src: \"634:7:37\",\n          },\n        ],\n        canonicalName: \"AlgoBull\",\n        contractDependencies: [],\n        contractKind: \"contract\",\n        documentation: {\n          id: 46675,\n          nodeType: \"StructuredDocumentation\",\n          src: \"316:281:37\",\n          text: \" @dev AlgoBull NFT Minting Contract that implements the following properties:\\n - Fixed Stablecoin fee per 1 mint.\\n - Fixed Supply.\\n - Mint multiple NFTs.\\n - Apply royalties via ERC2981.\\n - Support a dev wallet's ability to waive minting fees up to a set amount.\",\n        },\n        fullyImplemented: true,\n        linearizedBaseContracts: [\n          46931, 42965, 44781, 44601, 44808, 44717, 45006, 45685, 42984, 45697,\n          45358,\n        ],\n        name: \"AlgoBull\",\n        nameLocation: \"607:8:37\",\n        scope: 46932,\n        usedErrors: [],\n      },\n    ],\n  },\n  id: 37,\n};\n","export default {\n  abi: [\n    {\n      inputs: [\n        {\n          internalType: \"string\",\n          name: \"name_\",\n          type: \"string\",\n        },\n        {\n          internalType: \"string\",\n          name: \"symbol_\",\n          type: \"string\",\n        },\n      ],\n      stateMutability: \"nonpayable\",\n      type: \"constructor\",\n    },\n    {\n      anonymous: false,\n      inputs: [\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"spender\",\n          type: \"address\",\n        },\n        {\n          indexed: false,\n          internalType: \"uint256\",\n          name: \"value\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"Approval\",\n      type: \"event\",\n    },\n    {\n      anonymous: false,\n      inputs: [\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"from\",\n          type: \"address\",\n        },\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          indexed: false,\n          internalType: \"uint256\",\n          name: \"value\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"Transfer\",\n      type: \"event\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"spender\",\n          type: \"address\",\n        },\n      ],\n      name: \"allowance\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"spender\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"amount\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"approve\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"account\",\n          type: \"address\",\n        },\n      ],\n      name: \"balanceOf\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"decimals\",\n      outputs: [\n        {\n          internalType: \"uint8\",\n          name: \"\",\n          type: \"uint8\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"spender\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"subtractedValue\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"decreaseAllowance\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"spender\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"addedValue\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"increaseAllowance\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"name\",\n      outputs: [\n        {\n          internalType: \"string\",\n          name: \"\",\n          type: \"string\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"symbol\",\n      outputs: [\n        {\n          internalType: \"string\",\n          name: \"\",\n          type: \"string\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"totalSupply\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"amount\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"transfer\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"from\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"amount\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"transferFrom\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n  ],\n  bytecode: {\n    object:\n      \"0x60806040523480156200001157600080fd5b5060405162000b4638038062000b4683398101604081905262000034916200011f565b600362000042838262000218565b50600462000051828262000218565b505050620002e4565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008257600080fd5b81516001600160401b03808211156200009f576200009f6200005a565b604051601f8301601f19908116603f01168101908282118183101715620000ca57620000ca6200005a565b81604052838152602092508683858801011115620000e757600080fd5b600091505b838210156200010b5785820183015181830184015290820190620000ec565b600093810190920192909252949350505050565b600080604083850312156200013357600080fd5b82516001600160401b03808211156200014b57600080fd5b620001598683870162000070565b935060208501519150808211156200017057600080fd5b506200017f8582860162000070565b9150509250929050565b600181811c908216806200019e57607f821691505b602082108103620001bf57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021357600081815260208120601f850160051c81016020861015620001ee5750805b601f850160051c820191505b818110156200020f57828155600101620001fa565b5050505b505050565b81516001600160401b038111156200023457620002346200005a565b6200024c8162000245845462000189565b84620001c5565b602080601f8311600181146200028457600084156200026b5750858301515b600019600386901b1c1916600185901b1785556200020f565b600085815260208120601f198616915b82811015620002b55788860151825594840194600190910190840162000294565b5085821015620002d45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61085280620002f46000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c3919061069c565b60405180910390f35b6100df6100da366004610706565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610730565b61024c565b604051601281526020016100c3565b6100df610131366004610706565b610270565b6100f361014436600461076c565b6001600160a01b031660009081526020819052604090205490565b6100b6610292565b6100df610175366004610706565b6102a1565b6100df610188366004610706565b610321565b6100f361019b36600461078e565b61032f565b6060600380546101af906107c1565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107c1565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b60003361024081858561035a565b60019150505b92915050565b60003361025a85828561047e565b6102658585856104f8565b506001949350505050565b600033610240818585610283838361032f565b61028d91906107fb565b61035a565b6060600480546101af906107c1565b600033816102af828661032f565b9050838110156103145760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610265828686840361035a565b6000336102408185856104f8565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103bc5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161030b565b6001600160a01b03821661041d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161030b565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061048a848461032f565b905060001981146104f257818110156104e55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161030b565b6104f2848484840361035a565b50505050565b6001600160a01b03831661055c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161030b565b6001600160a01b0382166105be5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161030b565b6001600160a01b038316600090815260208190526040902054818110156106365760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161030b565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104f2565b600060208083528351808285015260005b818110156106c9578581018301518582016040015282016106ad565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461070157600080fd5b919050565b6000806040838503121561071957600080fd5b610722836106ea565b946020939093013593505050565b60008060006060848603121561074557600080fd5b61074e846106ea565b925061075c602085016106ea565b9150604084013590509250925092565b60006020828403121561077e57600080fd5b610787826106ea565b9392505050565b600080604083850312156107a157600080fd5b6107aa836106ea565b91506107b8602084016106ea565b90509250929050565b600181811c908216806107d557607f821691505b6020821081036107f557634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561024657634e487b7160e01b600052601160045260246000fdfea2646970667358221220cd1776ffc610c73c4af012a981431b4b7da1d694ae13459347e6b7750ad0a37664736f6c63430008110033\",\n    sourceMap:\n      \"1532:11312:21:-:0;;;1980:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2046:5;:13;2054:5;2046;:13;:::i;:::-;-1:-1:-1;2069:7:21;:17;2079:7;2069;:17;:::i;:::-;;1980:113;;1532:11312;;14:127:43;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:43;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:43;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:43:o;991:562::-;1090:6;1098;1151:2;1139:9;1130:7;1126:23;1122:32;1119:52;;;1167:1;1164;1157:12;1119:52;1194:16;;-1:-1:-1;;;;;1259:14:43;;;1256:34;;;1286:1;1283;1276:12;1256:34;1309:61;1362:7;1353:6;1342:9;1338:22;1309:61;:::i;:::-;1299:71;;1416:2;1405:9;1401:18;1395:25;1379:41;;1445:2;1435:8;1432:16;1429:36;;;1461:1;1458;1451:12;1429:36;;1484:63;1539:7;1528:8;1517:9;1513:24;1484:63;:::i;:::-;1474:73;;;991:562;;;;;:::o;1558:380::-;1637:1;1633:12;;;;1680;;;1701:61;;1755:4;1747:6;1743:17;1733:27;;1701:61;1808:2;1800:6;1797:14;1777:18;1774:38;1771:161;;1854:10;1849:3;1845:20;1842:1;1835:31;1889:4;1886:1;1879:15;1917:4;1914:1;1907:15;1771:161;;1558:380;;;:::o;2069:545::-;2171:2;2166:3;2163:11;2160:448;;;2207:1;2232:5;2228:2;2221:17;2277:4;2273:2;2263:19;2347:2;2335:10;2331:19;2328:1;2324:27;2318:4;2314:38;2383:4;2371:10;2368:20;2365:47;;;-1:-1:-1;2406:4:43;2365:47;2461:2;2456:3;2452:12;2449:1;2445:20;2439:4;2435:31;2425:41;;2516:82;2534:2;2527:5;2524:13;2516:82;;;2579:17;;;2560:1;2549:13;2516:82;;;2520:3;;;2160:448;2069:545;;;:::o;2790:1352::-;2910:10;;-1:-1:-1;;;;;2932:30:43;;2929:56;;;2965:18;;:::i;:::-;2994:97;3084:6;3044:38;3076:4;3070:11;3044:38;:::i;:::-;3038:4;2994:97;:::i;:::-;3146:4;;3210:2;3199:14;;3227:1;3222:663;;;;3929:1;3946:6;3943:89;;;-1:-1:-1;3998:19:43;;;3992:26;3943:89;-1:-1:-1;;2747:1:43;2743:11;;;2739:24;2735:29;2725:40;2771:1;2767:11;;;2722:57;4045:81;;3192:944;;3222:663;2016:1;2009:14;;;2053:4;2040:18;;-1:-1:-1;;3258:20:43;;;3376:236;3390:7;3387:1;3384:14;3376:236;;;3479:19;;;3473:26;3458:42;;3571:27;;;;3539:1;3527:14;;;;3406:19;;3376:236;;;3380:3;3640:6;3631:7;3628:19;3625:201;;;3701:19;;;3695:26;-1:-1:-1;;3784:1:43;3780:14;;;3796:3;3776:24;3772:37;3768:42;3753:58;3738:74;;3625:201;-1:-1:-1;;;;;3872:1:43;3856:14;;;3852:22;3839:36;;-1:-1:-1;2790:1352:43:o;:::-;1532:11312:21;;;;;;\",\n    linkReferences: {},\n  },\n  deployedBytecode: {\n    object:\n      \"0x608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c3919061069c565b60405180910390f35b6100df6100da366004610706565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610730565b61024c565b604051601281526020016100c3565b6100df610131366004610706565b610270565b6100f361014436600461076c565b6001600160a01b031660009081526020819052604090205490565b6100b6610292565b6100df610175366004610706565b6102a1565b6100df610188366004610706565b610321565b6100f361019b36600461078e565b61032f565b6060600380546101af906107c1565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107c1565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b60003361024081858561035a565b60019150505b92915050565b60003361025a85828561047e565b6102658585856104f8565b506001949350505050565b600033610240818585610283838361032f565b61028d91906107fb565b61035a565b6060600480546101af906107c1565b600033816102af828661032f565b9050838110156103145760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610265828686840361035a565b6000336102408185856104f8565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103bc5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161030b565b6001600160a01b03821661041d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161030b565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061048a848461032f565b905060001981146104f257818110156104e55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161030b565b6104f2848484840361035a565b50505050565b6001600160a01b03831661055c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161030b565b6001600160a01b0382166105be5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161030b565b6001600160a01b038316600090815260208190526040902054818110156106365760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161030b565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104f2565b600060208083528351808285015260005b818110156106c9578581018301518582016040015282016106ad565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461070157600080fd5b919050565b6000806040838503121561071957600080fd5b610722836106ea565b946020939093013593505050565b60008060006060848603121561074557600080fd5b61074e846106ea565b925061075c602085016106ea565b9150604084013590509250925092565b60006020828403121561077e57600080fd5b610787826106ea565b9392505050565b600080604083850312156107a157600080fd5b6107aa836106ea565b91506107b8602084016106ea565b90509250929050565b600181811c908216806107d557607f821691505b6020821081036107f557634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561024657634e487b7160e01b600052601160045260246000fdfea2646970667358221220cd1776ffc610c73c4af012a981431b4b7da1d694ae13459347e6b7750ad0a37664736f6c63430008110033\",\n    sourceMap:\n      \"1532:11312:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:43;;1162:22;1144:41;;1132:2;1117:18;4444:197:21;1004:187:43;3255:106:21;3342:12;;3255:106;;;1342:25:43;;;1330:2;1315:18;3255:106:21;1196:177:43;5203:256:21;;;;;;:::i;:::-;;:::i;3104:91::-;;;3186:2;1853:36:43;;1841:2;1826:18;3104:91:21;1711:184:43;5854:234:21;;;;;;:::i;:::-;;:::i;3419:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3519:18:21;3493:7;3519:18;;;;;;;;;;;;3419:125;2369:102;;;:::i;6575:427::-;;;;;;:::i;:::-;;:::i;3740:189::-;;;;;;:::i;:::-;;:::i;3987:149::-;;;;;;:::i;:::-;;:::i;2158:98::-;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;719:10:31;4581:32:21;719:10:31;4597:7:21;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;;:::o;5203:256::-;5300:4;719:10:31;5356:38:21;5372:4;719:10:31;5387:6:21;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;-1:-1:-1;5448:4:21;;5203:256;-1:-1:-1;;;;5203:256:21:o;5854:234::-;5942:4;719:10:31;5996:64:21;719:10:31;6012:7:21;6049:10;6021:25;719:10:31;6012:7:21;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;2369:102::-;2425:13;2457:7;2450:14;;;;;:::i;6575:427::-;6668:4;719:10:31;6668:4:21;6749:25;719:10:31;6766:7:21;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;-1:-1:-1;;;6784:85:21;;3170:2:43;6784:85:21;;;3152:21:43;3209:2;3189:18;;;3182:30;3248:34;3228:18;;;3221:62;-1:-1:-1;;;3299:18:43;;;3292:35;3344:19;;6784:85:21;;;;;;;;;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;3740:189::-;3819:4;719:10:31;3873:28:21;719:10:31;3890:2:21;3894:6;3873:9;:28::i;3987:149::-;-1:-1:-1;;;;;4102:18:21;;;4076:7;4102:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3987:149::o;10457:340::-;-1:-1:-1;;;;;10558:19:21;;10550:68;;;;-1:-1:-1;;;10550:68:21;;3576:2:43;10550:68:21;;;3558:21:43;3615:2;3595:18;;;3588:30;3654:34;3634:18;;;3627:62;-1:-1:-1;;;3705:18:43;;;3698:34;3749:19;;10550:68:21;3374:400:43;10550:68:21;-1:-1:-1;;;;;10636:21:21;;10628:68;;;;-1:-1:-1;;;10628:68:21;;3981:2:43;10628:68:21;;;3963:21:43;4020:2;4000:18;;;3993:30;4059:34;4039:18;;;4032:62;-1:-1:-1;;;4110:18:43;;;4103:32;4152:19;;10628:68:21;3779:398:43;10628:68:21;-1:-1:-1;;;;;10707:18:21;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10758:32;;1342:25:43;;;10758:32:21;;1315:18:43;10758:32:21;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;-1:-1:-1;;11244:16:21;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;-1:-1:-1;;;11297:68:21;;4384:2:43;11297:68:21;;;4366:21:43;4423:2;4403:18;;;4396:30;4462:31;4442:18;;;4435:59;4511:18;;11297:68:21;4182:353:43;11297:68:21;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11168:321;11078:411;;;:::o;7456:788::-;-1:-1:-1;;;;;7552:18:21;;7544:68;;;;-1:-1:-1;;;7544:68:21;;4742:2:43;7544:68:21;;;4724:21:43;4781:2;4761:18;;;4754:30;4820:34;4800:18;;;4793:62;-1:-1:-1;;;4871:18:43;;;4864:35;4916:19;;7544:68:21;4540:401:43;7544:68:21;-1:-1:-1;;;;;7630:16:21;;7622:64;;;;-1:-1:-1;;;7622:64:21;;5148:2:43;7622:64:21;;;5130:21:43;5187:2;5167:18;;;5160:30;5226:34;5206:18;;;5199:62;-1:-1:-1;;;5277:18:43;;;5270:33;5320:19;;7622:64:21;4946:399:43;7622:64:21;-1:-1:-1;;;;;7768:15:21;;7746:19;7768:15;;;;;;;;;;;7801:21;;;;7793:72;;;;-1:-1:-1;;;7793:72:21;;5552:2:43;7793:72:21;;;5534:21:43;5591:2;5571:18;;;5564:30;5630:34;5610:18;;;5603:62;-1:-1:-1;;;5681:18:43;;;5674:36;5727:19;;7793:72:21;5350:402:43;7793:72:21;-1:-1:-1;;;;;7899:15:21;;;:9;:15;;;;;;;;;;;7917:20;;;7899:38;;8114:13;;;;;;;;;;:23;;;;;;8163:26;;1342:25:43;;;8114:13:21;;8163:26;;1315:18:43;8163:26:21;;;;;;;8200:37;12073:91;14:548:43;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:43;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:43:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:43:o;2091:260::-;2159:6;2167;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2259:29;2278:9;2259:29;:::i;:::-;2249:39;;2307:38;2341:2;2330:9;2326:18;2307:38;:::i;:::-;2297:48;;2091:260;;;;;:::o;2356:380::-;2435:1;2431:12;;;;2478;;;2499:61;;2553:4;2545:6;2541:17;2531:27;;2499:61;2606:2;2598:6;2595:14;2575:18;2572:38;2569:161;;2652:10;2647:3;2643:20;2640:1;2633:31;2687:4;2684:1;2677:15;2715:4;2712:1;2705:15;2569:161;;2356:380;;;:::o;2741:222::-;2806:9;;;2827:10;;;2824:133;;;2879:10;2874:3;2870:20;2867:1;2860:31;2914:4;2911:1;2904:15;2942:4;2939:1;2932:15\",\n    linkReferences: {},\n  },\n  methodIdentifiers: {\n    \"allowance(address,address)\": \"dd62ed3e\",\n    \"approve(address,uint256)\": \"095ea7b3\",\n    \"balanceOf(address)\": \"70a08231\",\n    \"decimals()\": \"313ce567\",\n    \"decreaseAllowance(address,uint256)\": \"a457c2d7\",\n    \"increaseAllowance(address,uint256)\": \"39509351\",\n    \"name()\": \"06fdde03\",\n    \"symbol()\": \"95d89b41\",\n    \"totalSupply()\": \"18160ddd\",\n    \"transfer(address,uint256)\": \"a9059cbb\",\n    \"transferFrom(address,address,uint256)\": \"23b872dd\",\n  },\n  rawMetadata:\n    '{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn\\'t required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it\\'s overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``\\'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}',\n  metadata: {\n    compiler: {\n      version: \"0.8.17+commit.8df45f5f\",\n    },\n    language: \"Solidity\",\n    output: {\n      abi: [\n        {\n          inputs: [\n            {\n              internalType: \"string\",\n              name: \"name_\",\n              type: \"string\",\n            },\n            {\n              internalType: \"string\",\n              name: \"symbol_\",\n              type: \"string\",\n            },\n          ],\n          stateMutability: \"nonpayable\",\n          type: \"constructor\",\n        },\n        {\n          inputs: [\n            {\n              internalType: \"address\",\n              name: \"owner\",\n              type: \"address\",\n              indexed: true,\n            },\n            {\n              internalType: \"address\",\n              name: \"spender\",\n              type: \"address\",\n              indexed: true,\n            },\n            {\n              internalType: \"uint256\",\n              name: \"value\",\n              type: \"uint256\",\n              indexed: false,\n            },\n          ],\n          type: \"event\",\n          name: \"Approval\",\n          anonymous: false,\n        },\n        {\n          inputs: [\n            {\n              internalType: \"address\",\n              name: \"from\",\n              type: \"address\",\n              indexed: true,\n            },\n            {\n              internalType: \"address\",\n              name: \"to\",\n              type: \"address\",\n              indexed: true,\n            },\n            {\n              internalType: \"uint256\",\n              name: \"value\",\n              type: \"uint256\",\n              indexed: false,\n            },\n          ],\n          type: \"event\",\n          name: \"Transfer\",\n          anonymous: false,\n        },\n        {\n          inputs: [\n            {\n              internalType: \"address\",\n              name: \"owner\",\n              type: \"address\",\n            },\n            {\n              internalType: \"address\",\n              name: \"spender\",\n              type: \"address\",\n            },\n          ],\n          stateMutability: \"view\",\n          type: \"function\",\n          name: \"allowance\",\n          outputs: [\n            {\n              internalType: \"uint256\",\n              name: \"\",\n              type: \"uint256\",\n            },\n          ],\n        },\n        {\n          inputs: [\n            {\n              internalType: \"address\",\n              name: \"spender\",\n              type: \"address\",\n            },\n            {\n              internalType: \"uint256\",\n              name: \"amount\",\n              type: \"uint256\",\n            },\n          ],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n          name: \"approve\",\n          outputs: [\n            {\n              internalType: \"bool\",\n              name: \"\",\n              type: \"bool\",\n            },\n          ],\n        },\n        {\n          inputs: [\n            {\n              internalType: \"address\",\n              name: \"account\",\n              type: \"address\",\n            },\n          ],\n          stateMutability: \"view\",\n          type: \"function\",\n          name: \"balanceOf\",\n          outputs: [\n            {\n              internalType: \"uint256\",\n              name: \"\",\n              type: \"uint256\",\n            },\n          ],\n        },\n        {\n          inputs: [],\n          stateMutability: \"view\",\n          type: \"function\",\n          name: \"decimals\",\n          outputs: [\n            {\n              internalType: \"uint8\",\n              name: \"\",\n              type: \"uint8\",\n            },\n          ],\n        },\n        {\n          inputs: [\n            {\n              internalType: \"address\",\n              name: \"spender\",\n              type: \"address\",\n            },\n            {\n              internalType: \"uint256\",\n              name: \"subtractedValue\",\n              type: \"uint256\",\n            },\n          ],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n          name: \"decreaseAllowance\",\n          outputs: [\n            {\n              internalType: \"bool\",\n              name: \"\",\n              type: \"bool\",\n            },\n          ],\n        },\n        {\n          inputs: [\n            {\n              internalType: \"address\",\n              name: \"spender\",\n              type: \"address\",\n            },\n            {\n              internalType: \"uint256\",\n              name: \"addedValue\",\n              type: \"uint256\",\n            },\n          ],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n          name: \"increaseAllowance\",\n          outputs: [\n            {\n              internalType: \"bool\",\n              name: \"\",\n              type: \"bool\",\n            },\n          ],\n        },\n        {\n          inputs: [],\n          stateMutability: \"view\",\n          type: \"function\",\n          name: \"name\",\n          outputs: [\n            {\n              internalType: \"string\",\n              name: \"\",\n              type: \"string\",\n            },\n          ],\n        },\n        {\n          inputs: [],\n          stateMutability: \"view\",\n          type: \"function\",\n          name: \"symbol\",\n          outputs: [\n            {\n              internalType: \"string\",\n              name: \"\",\n              type: \"string\",\n            },\n          ],\n        },\n        {\n          inputs: [],\n          stateMutability: \"view\",\n          type: \"function\",\n          name: \"totalSupply\",\n          outputs: [\n            {\n              internalType: \"uint256\",\n              name: \"\",\n              type: \"uint256\",\n            },\n          ],\n        },\n        {\n          inputs: [\n            {\n              internalType: \"address\",\n              name: \"to\",\n              type: \"address\",\n            },\n            {\n              internalType: \"uint256\",\n              name: \"amount\",\n              type: \"uint256\",\n            },\n          ],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n          name: \"transfer\",\n          outputs: [\n            {\n              internalType: \"bool\",\n              name: \"\",\n              type: \"bool\",\n            },\n          ],\n        },\n        {\n          inputs: [\n            {\n              internalType: \"address\",\n              name: \"from\",\n              type: \"address\",\n            },\n            {\n              internalType: \"address\",\n              name: \"to\",\n              type: \"address\",\n            },\n            {\n              internalType: \"uint256\",\n              name: \"amount\",\n              type: \"uint256\",\n            },\n          ],\n          stateMutability: \"nonpayable\",\n          type: \"function\",\n          name: \"transferFrom\",\n          outputs: [\n            {\n              internalType: \"bool\",\n              name: \"\",\n              type: \"bool\",\n            },\n          ],\n        },\n      ],\n      devdoc: {\n        kind: \"dev\",\n        methods: {\n          \"allowance(address,address)\": {\n            details: \"See {IERC20-allowance}.\",\n          },\n          \"approve(address,uint256)\": {\n            details:\n              \"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\",\n          },\n          \"balanceOf(address)\": {\n            details: \"See {IERC20-balanceOf}.\",\n          },\n          constructor: {\n            details:\n              \"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\",\n          },\n          \"decimals()\": {\n            details:\n              \"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\",\n          },\n          \"decreaseAllowance(address,uint256)\": {\n            details:\n              \"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\",\n          },\n          \"increaseAllowance(address,uint256)\": {\n            details:\n              \"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\",\n          },\n          \"name()\": {\n            details: \"Returns the name of the token.\",\n          },\n          \"symbol()\": {\n            details:\n              \"Returns the symbol of the token, usually a shorter version of the name.\",\n          },\n          \"totalSupply()\": {\n            details: \"See {IERC20-totalSupply}.\",\n          },\n          \"transfer(address,uint256)\": {\n            details:\n              \"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\",\n          },\n          \"transferFrom(address,address,uint256)\": {\n            details:\n              \"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\",\n          },\n        },\n        version: 1,\n      },\n      userdoc: {\n        kind: \"user\",\n        methods: {},\n        version: 1,\n      },\n    },\n    settings: {\n      remappings: [\n        \":ds-test/=lib/forge-std/lib/ds-test/src/\",\n        \":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\n        \":forge-std/=lib/forge-std/src/\",\n        \":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\n        \":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\n      ],\n      optimizer: {\n        enabled: true,\n        runs: 200,\n      },\n      metadata: {\n        bytecodeHash: \"ipfs\",\n      },\n      compilationTarget: {\n        \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\": \"ERC20\",\n      },\n      libraries: {},\n    },\n    sources: {\n      \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\": {\n        keccak256:\n          \"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\n        urls: [\n          \"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\n          \"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\",\n        ],\n        license: \"MIT\",\n      },\n      \"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\": {\n        keccak256:\n          \"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\n        urls: [\n          \"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\n          \"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\",\n        ],\n        license: \"MIT\",\n      },\n      \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\n        {\n          keccak256:\n            \"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\n          urls: [\n            \"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\n            \"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\",\n          ],\n          license: \"MIT\",\n        },\n      \"lib/openzeppelin-contracts/contracts/utils/Context.sol\": {\n        keccak256:\n          \"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\n        urls: [\n          \"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\n          \"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\",\n        ],\n        license: \"MIT\",\n      },\n    },\n    version: 1,\n  },\n  ast: {\n    absolutePath: \"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\",\n    id: 43611,\n    exportedSymbols: {\n      Context: [45397],\n      ERC20: [43610],\n      IERC20: [43688],\n      IERC20Metadata: [43713],\n    },\n    nodeType: \"SourceUnit\",\n    src: \"105:12740:21\",\n    nodes: [\n      {\n        id: 43025,\n        nodeType: \"PragmaDirective\",\n        src: \"105:23:21\",\n        nodes: [],\n        literals: [\"solidity\", \"^\", \"0.8\", \".0\"],\n      },\n      {\n        id: 43026,\n        nodeType: \"ImportDirective\",\n        src: \"130:22:21\",\n        nodes: [],\n        absolutePath:\n          \"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\",\n        file: \"./IERC20.sol\",\n        nameLocation: \"-1:-1:-1\",\n        scope: 43611,\n        sourceUnit: 43689,\n        symbolAliases: [],\n        unitAlias: \"\",\n      },\n      {\n        id: 43027,\n        nodeType: \"ImportDirective\",\n        src: \"153:41:21\",\n        nodes: [],\n        absolutePath:\n          \"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\",\n        file: \"./extensions/IERC20Metadata.sol\",\n        nameLocation: \"-1:-1:-1\",\n        scope: 43611,\n        sourceUnit: 43714,\n        symbolAliases: [],\n        unitAlias: \"\",\n      },\n      {\n        id: 43028,\n        nodeType: \"ImportDirective\",\n        src: \"195:33:21\",\n        nodes: [],\n        absolutePath: \"lib/openzeppelin-contracts/contracts/utils/Context.sol\",\n        file: \"../../utils/Context.sol\",\n        nameLocation: \"-1:-1:-1\",\n        scope: 43611,\n        sourceUnit: 45398,\n        symbolAliases: [],\n        unitAlias: \"\",\n      },\n      {\n        id: 43610,\n        nodeType: \"ContractDefinition\",\n        src: \"1532:11312:21\",\n        nodes: [\n          {\n            id: 43039,\n            nodeType: \"VariableDeclaration\",\n            src: \"1588:45:21\",\n            nodes: [],\n            constant: false,\n            mutability: \"mutable\",\n            name: \"_balances\",\n            nameLocation: \"1624:9:21\",\n            scope: 43610,\n            stateVariable: true,\n            storageLocation: \"default\",\n            typeDescriptions: {\n              typeIdentifier: \"t_mapping$_t_address_$_t_uint256_$\",\n              typeString: \"mapping(address => uint256)\",\n            },\n            typeName: {\n              id: 43038,\n              keyType: {\n                id: 43036,\n                name: \"address\",\n                nodeType: \"ElementaryTypeName\",\n                src: \"1596:7:21\",\n                typeDescriptions: {\n                  typeIdentifier: \"t_address\",\n                  typeString: \"address\",\n                },\n              },\n              nodeType: \"Mapping\",\n              src: \"1588:27:21\",\n              typeDescriptions: {\n                typeIdentifier: \"t_mapping$_t_address_$_t_uint256_$\",\n                typeString: \"mapping(address => uint256)\",\n              },\n              valueType: {\n                id: 43037,\n                name: \"uint256\",\n                nodeType: \"ElementaryTypeName\",\n                src: \"1607:7:21\",\n                typeDescriptions: {\n                  typeIdentifier: \"t_uint256\",\n                  typeString: \"uint256\",\n                },\n              },\n            },\n            visibility: \"private\",\n          },\n          {\n            id: 43045,\n            nodeType: \"VariableDeclaration\",\n            src: \"1640:67:21\",\n            nodes: [],\n            constant: false,\n            mutability: \"mutable\",\n            name: \"_allowances\",\n            nameLocation: \"1696:11:21\",\n            scope: 43610,\n            stateVariable: true,\n            storageLocation: \"default\",\n            typeDescriptions: {\n              typeIdentifier:\n                \"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$\",\n              typeString: \"mapping(address => mapping(address => uint256))\",\n            },\n            typeName: {\n              id: 43044,\n              keyType: {\n                id: 43040,\n                name: \"address\",\n                nodeType: \"ElementaryTypeName\",\n                src: \"1648:7:21\",\n                typeDescriptions: {\n                  typeIdentifier: \"t_address\",\n                  typeString: \"address\",\n                },\n              },\n              nodeType: \"Mapping\",\n              src: \"1640:47:21\",\n              typeDescriptions: {\n                typeIdentifier:\n                  \"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$\",\n                typeString: \"mapping(address => mapping(address => uint256))\",\n              },\n              valueType: {\n                id: 43043,\n                keyType: {\n                  id: 43041,\n                  name: \"address\",\n                  nodeType: \"ElementaryTypeName\",\n                  src: \"1667:7:21\",\n                  typeDescriptions: {\n                    typeIdentifier: \"t_address\",\n                    typeString: \"address\",\n                  },\n                },\n                nodeType: \"Mapping\",\n                src: \"1659:27:21\",\n                typeDescriptions: {\n                  typeIdentifier: \"t_mapping$_t_address_$_t_uint256_$\",\n                  typeString: \"mapping(address => uint256)\",\n                },\n                valueType: {\n                  id: 43042,\n                  name: \"uint256\",\n                  nodeType: \"ElementaryTypeName\",\n                  src: \"1678:7:21\",\n                  typeDescriptions: {\n                    typeIdentifier: \"t_uint256\",\n                    typeString: \"uint256\",\n                  },\n                },\n              },\n            },\n            visibility: \"private\",\n          },\n          {\n            id: 43047,\n            nodeType: \"VariableDeclaration\",\n            src: \"1714:28:21\",\n            nodes: [],\n            constant: false,\n            mutability: \"mutable\",\n            name: \"_totalSupply\",\n            nameLocation: \"1730:12:21\",\n            scope: 43610,\n            stateVariable: true,\n            storageLocation: \"default\",\n            typeDescriptions: {\n              typeIdentifier: \"t_uint256\",\n              typeString: \"uint256\",\n            },\n            typeName: {\n              id: 43046,\n              name: \"uint256\",\n              nodeType: \"ElementaryTypeName\",\n              src: \"1714:7:21\",\n              typeDescriptions: {\n                typeIdentifier: \"t_uint256\",\n                typeString: \"uint256\",\n              },\n            },\n            visibility: \"private\",\n          },\n          {\n            id: 43049,\n            nodeType: \"VariableDeclaration\",\n            src: \"1749:20:21\",\n            nodes: [],\n            constant: false,\n            mutability: \"mutable\",\n            name: \"_name\",\n            nameLocation: \"1764:5:21\",\n            scope: 43610,\n            stateVariable: true,\n            storageLocation: \"default\",\n            typeDescriptions: {\n              typeIdentifier: \"t_string_storage\",\n              typeString: \"string\",\n            },\n            typeName: {\n              id: 43048,\n              name: \"string\",\n              nodeType: \"ElementaryTypeName\",\n              src: \"1749:6:21\",\n              typeDescriptions: {\n                typeIdentifier: \"t_string_storage_ptr\",\n                typeString: \"string\",\n              },\n            },\n            visibility: \"private\",\n          },\n          {\n            id: 43051,\n            nodeType: \"VariableDeclaration\",\n            src: \"1775:22:21\",\n            nodes: [],\n            constant: false,\n            mutability: \"mutable\",\n            name: \"_symbol\",\n            nameLocation: \"1790:7:21\",\n            scope: 43610,\n            stateVariable: true,\n            storageLocation: \"default\",\n            typeDescriptions: {\n              typeIdentifier: \"t_string_storage\",\n              typeString: \"string\",\n            },\n            typeName: {\n              id: 43050,\n              name: \"string\",\n              nodeType: \"ElementaryTypeName\",\n              src: \"1775:6:21\",\n              typeDescriptions: {\n                typeIdentifier: \"t_string_storage_ptr\",\n                typeString: \"string\",\n              },\n            },\n            visibility: \"private\",\n          },\n          {\n            id: 43068,\n            nodeType: \"FunctionDefinition\",\n            src: \"1980:113:21\",\n            nodes: [],\n            body: {\n              id: 43067,\n              nodeType: \"Block\",\n              src: \"2036:57:21\",\n              nodes: [],\n              statements: [\n                {\n                  expression: {\n                    id: 43061,\n                    isConstant: false,\n                    isLValue: false,\n                    isPure: false,\n                    lValueRequested: false,\n                    leftHandSide: {\n                      id: 43059,\n                      name: \"_name\",\n                      nodeType: \"Identifier\",\n                      overloadedDeclarations: [],\n                      referencedDeclaration: 43049,\n                      src: \"2046:5:21\",\n                      typeDescriptions: {\n                        typeIdentifier: \"t_string_storage\",\n                        typeString: \"string storage ref\",\n                      },\n                    },\n                    nodeType: \"Assignment\",\n                    operator: \"=\",\n                    rightHandSide: {\n                      id: 43060,\n                      name: \"name_\",\n                      nodeType: \"Identifier\",\n                      overloadedDeclarations: [],\n                      referencedDeclaration: 43054,\n                      src: \"2054:5:21\",\n                      typeDescriptions: {\n                        typeIdentifier: \"t_string_memory_ptr\",\n                        typeString: \"string memory\",\n                      },\n                    },\n                    src: \"2046:13:21\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_string_storage\",\n                      typeString: \"string storage ref\",\n                    },\n                  },\n                  id: 43062,\n                  nodeType: \"ExpressionStatement\",\n                  src: \"2046:13:21\",\n                },\n                {\n                  expression: {\n                    id: 43065,\n                    isConstant: false,\n                    isLValue: false,\n                    isPure: false,\n                    lValueRequested: false,\n                    leftHandSide: {\n                      id: 43063,\n                      name: \"_symbol\",\n                      nodeType: \"Identifier\",\n                      overloadedDeclarations: [],\n                      referencedDeclaration: 43051,\n                      src: \"2069:7:21\",\n                      typeDescriptions: {\n                        typeIdentifier: \"t_string_storage\",\n                        typeString: \"string storage ref\",\n                      },\n                    },\n                    nodeType: \"Assignment\",\n                    operator: \"=\",\n                    rightHandSide: {\n                      id: 43064,\n                      name: \"symbol_\",\n                      nodeType: \"Identifier\",\n                      overloadedDeclarations: [],\n                      referencedDeclaration: 43056,\n                      src: \"2079:7:21\",\n                      typeDescriptions: {\n                        typeIdentifier: \"t_string_memory_ptr\",\n                        typeString: \"string memory\",\n                      },\n                    },\n                    src: \"2069:17:21\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_string_storage\",\n                      typeString: \"string storage ref\",\n                    },\n                  },\n                  id: 43066,\n                  nodeType: \"ExpressionStatement\",\n                  src: \"2069:17:21\",\n                },\n              ],\n            },\n            documentation: {\n              id: 43052,\n              nodeType: \"StructuredDocumentation\",\n              src: \"1804:171:21\",\n              text: \" @dev Sets the values for {name} and {symbol}.\\n All two of these values are immutable: they can only be set once during\\n construction.\",\n            },\n            implemented: true,\n            kind: \"constructor\",\n            modifiers: [],\n            name: \"\",\n            nameLocation: \"-1:-1:-1\",\n            parameters: {\n              id: 43057,\n              nodeType: \"ParameterList\",\n              parameters: [\n                {\n                  constant: false,\n                  id: 43054,\n                  mutability: \"mutable\",\n                  name: \"name_\",\n                  nameLocation: \"2006:5:21\",\n                  nodeType: \"VariableDeclaration\",\n                  scope: 43068,\n                  src: \"1992:19:21\",\n                  stateVariable: false,\n                  storageLocation: \"memory\",\n                  typeDescriptions: {\n                    typeIdentifier: \"t_string_memory_ptr\",\n                    typeString: \"string\",\n                  },\n                  typeName: {\n                    id: 43053,\n                    name: \"string\",\n                    nodeType: \"ElementaryTypeName\",\n                    src: \"1992:6:21\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_string_storage_ptr\",\n                      typeString: \"string\",\n                    },\n                  },\n                  visibility: \"internal\",\n                },\n                {\n                  constant: false,\n                  id: 43056,\n                  mutability: \"mutable\",\n                  name: \"symbol_\",\n                  nameLocation: \"2027:7:21\",\n                  nodeType: \"VariableDeclaration\",\n                  scope: 43068,\n                  src: \"2013:21:21\",\n                  stateVariable: false,\n                  storageLocation: \"memory\",\n                  typeDescriptions: {\n                    typeIdentifier: \"t_string_memory_ptr\",\n                    typeString: \"string\",\n                  },\n                  typeName: {\n                    id: 43055,\n                    name: \"string\",\n                    nodeType: \"ElementaryTypeName\",\n                    src: \"2013:6:21\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_string_storage_ptr\",\n                      typeString: \"string\",\n                    },\n                  },\n                  visibility: \"internal\",\n                },\n              ],\n              src: \"1991:44:21\",\n            },\n            returnParameters: {\n              id: 43058,\n              nodeType: \"ParameterList\",\n              parameters: [],\n              src: \"2036:0:21\",\n            },\n            scope: 43610,\n            stateMutability: \"nonpayable\",\n            virtual: false,\n            visibility: \"public\",\n          },\n          {\n            id: 43078,\n            nodeType: \"FunctionDefinition\",\n            src: \"2158:98:21\",\n            nodes: [],\n            body: {\n              id: 43077,\n              nodeType: \"Block\",\n              src: \"2227:29:21\",\n              nodes: [],\n              statements: [\n                {\n                  expression: {\n                    id: 43075,\n                    name: \"_name\",\n                    nodeType: \"Identifier\",\n                    overloadedDeclarations: [],\n                    referencedDeclaration: 43049,\n                    src: \"2244:5:21\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_string_storage\",\n                      typeString: \"string storage ref\",\n                    },\n                  },\n                  functionReturnParameters: 43074,\n                  id: 43076,\n                  nodeType: \"Return\",\n                  src: \"2237:12:21\",\n                },\n              ],\n            },\n            baseFunctions: [43700],\n            documentation: {\n              id: 43069,\n              nodeType: \"StructuredDocumentation\",\n              src: \"2099:54:21\",\n              text: \" @dev Returns the name of the token.\",\n            },\n            functionSelector: \"06fdde03\",\n            implemented: true,\n            kind: \"function\",\n            modifiers: [],\n            name: \"name\",\n            nameLocation: \"2167:4:21\",\n            overrides: {\n              id: 43071,\n              nodeType: \"OverrideSpecifier\",\n              overrides: [],\n              src: \"2194:8:21\",\n            },\n            parameters: {\n              id: 43070,\n              nodeType: \"ParameterList\",\n              parameters: [],\n              src: \"2171:2:21\",\n            },\n            returnParameters: {\n              id: 43074,\n              nodeType: \"ParameterList\",\n              parameters: [\n                {\n                  constant: false,\n                  id: 43073,\n                  mutability: \"mutable\",\n                  name: \"\",\n                  nameLocation: \"-1:-1:-1\",\n                  nodeType: \"VariableDeclaration\",\n                  scope: 43078,\n                  src: \"2212:13:21\",\n                  stateVariable: false,\n                  storageLocation: \"memory\",\n                  typeDescriptions: {\n                    typeIdentifier: \"t_string_memory_ptr\",\n                    typeString: \"string\",\n                  },\n                  typeName: {\n                    id: 43072,\n                    name: \"string\",\n                    nodeType: \"ElementaryTypeName\",\n                    src: \"2212:6:21\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_string_storage_ptr\",\n                      typeString: \"string\",\n                    },\n                  },\n                  visibility: \"internal\",\n                },\n              ],\n              src: \"2211:15:21\",\n            },\n            scope: 43610,\n            stateMutability: \"view\",\n            virtual: true,\n            visibility: \"public\",\n          },\n          {\n            id: 43088,\n            nodeType: \"FunctionDefinition\",\n            src: \"2369:102:21\",\n            nodes: [],\n            body: {\n              id: 43087,\n              nodeType: \"Block\",\n              src: \"2440:31:21\",\n              nodes: [],\n              statements: [\n                {\n                  expression: {\n                    id: 43085,\n                    name: \"_symbol\",\n                    nodeType: \"Identifier\",\n                    overloadedDeclarations: [],\n                    referencedDeclaration: 43051,\n                    src: \"2457:7:21\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_string_storage\",\n                      typeString: \"string storage ref\",\n                    },\n                  },\n                  functionReturnParameters: 43084,\n                  id: 43086,\n                  nodeType: \"Return\",\n                  src: \"2450:14:21\",\n                },\n              ],\n            },\n            baseFunctions: [43706],\n            documentation: {\n              id: 43079,\n              nodeType: \"StructuredDocumentation\",\n              src: \"2262:102:21\",\n              text: \" @dev Returns the symbol of the token, usually a shorter version of the\\n name.\",\n            },\n            functionSelector: \"95d89b41\",\n            implemented: true,\n            kind: \"function\",\n            modifiers: [],\n            name: \"symbol\",\n            nameLocation: \"2378:6:21\",\n            overrides: {\n              id: 43081,\n              nodeType: \"OverrideSpecifier\",\n              overrides: [],\n              src: \"2407:8:21\",\n            },\n            parameters: {\n              id: 43080,\n              nodeType: \"ParameterList\",\n              parameters: [],\n              src: \"2384:2:21\",\n            },\n            returnParameters: {\n              id: 43084,\n              nodeType: \"ParameterList\",\n              parameters: [\n                {\n                  constant: false,\n                  id: 43083,\n                  mutability: \"mutable\",\n                  name: \"\",\n                  nameLocation: \"-1:-1:-1\",\n                  nodeType: \"VariableDeclaration\",\n                  scope: 43088,\n                  src: \"2425:13:21\",\n                  stateVariable: false,\n                  storageLocation: \"memory\",\n                  typeDescriptions: {\n                    typeIdentifier: \"t_string_memory_ptr\",\n                    typeString: \"string\",\n                  },\n                  typeName: {\n                    id: 43082,\n                    name: \"string\",\n                    nodeType: \"ElementaryTypeName\",\n                    src: \"2425:6:21\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_string_storage_ptr\",\n                      typeString: \"string\",\n                    },\n                  },\n                  visibility: \"internal\",\n                },\n              ],\n              src: \"2424:15:21\",\n            },\n            scope: 43610,\n            stateMutability: \"view\",\n            virtual: true,\n            visibility: \"public\",\n          },\n          {\n            id: 43098,\n            nodeType: \"FunctionDefinition\",\n            src: \"3104:91:21\",\n            nodes: [],\n            body: {\n              id: 43097,\n              nodeType: \"Block\",\n              src: \"3169:26:21\",\n              nodes: [],\n              statements: [\n                {\n                  expression: {\n                    hexValue: \"3138\",\n                    id: 43095,\n                    isConstant: false,\n                    isLValue: false,\n                    isPure: true,\n                    kind: \"number\",\n                    lValueRequested: false,\n                    nodeType: \"Literal\",\n                    src: \"3186:2:21\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_rational_18_by_1\",\n                      typeString: \"int_const 18\",\n                    },\n                    value: \"18\",\n                  },\n                  functionReturnParameters: 43094,\n                  id: 43096,\n                  nodeType: \"Return\",\n                  src: \"3179:9:21\",\n                },\n              ],\n            },\n            baseFunctions: [43712],\n            documentation: {\n              id: 43089,\n              nodeType: \"StructuredDocumentation\",\n              src: \"2477:622:21\",\n              text: \" @dev Returns the number of decimals used to get its user representation.\\n For example, if `decimals` equals `2`, a balance of `505` tokens should\\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n Tokens usually opt for a value of 18, imitating the relationship between\\n Ether and Wei. This is the default value returned by this function, unless\\n it's overridden.\\n NOTE: This information is only used for _display_ purposes: it in\\n no way affects any of the arithmetic of the contract, including\\n {IERC20-balanceOf} and {IERC20-transfer}.\",\n            },\n            functionSelector: \"313ce567\",\n            implemented: true,\n            kind: \"function\",\n            modifiers: [],\n            name: \"decimals\",\n            nameLocation: \"3113:8:21\",\n            overrides: {\n              id: 43091,\n              nodeType: \"OverrideSpecifier\",\n              overrides: [],\n              src: \"3144:8:21\",\n            },\n            parameters: {\n              id: 43090,\n              nodeType: \"ParameterList\",\n              parameters: [],\n              src: \"3121:2:21\",\n            },\n            returnParameters: {\n              id: 43094,\n              nodeType: \"ParameterList\",\n              parameters: [\n                {\n                  constant: false,\n                  id: 43093,\n                  mutability: \"mutable\",\n                  name: \"\",\n                  nameLocation: \"-1:-1:-1\",\n                  nodeType: \"VariableDeclaration\",\n                  scope: 43098,\n                  src: \"3162:5:21\",\n                  stateVariable: false,\n                  storageLocation: \"default\",\n                  typeDescriptions: {\n                    typeIdentifier: \"t_uint8\",\n                    typeString: \"uint8\",\n                  },\n                  typeName: {\n                    id: 43092,\n                    name: \"uint8\",\n                    nodeType: \"ElementaryTypeName\",\n                    src: \"3162:5:21\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_uint8\",\n                      typeString: \"uint8\",\n                    },\n                  },\n                  visibility: \"internal\",\n                },\n              ],\n              src: \"3161:7:21\",\n            },\n            scope: 43610,\n            stateMutability: \"view\",\n            virtual: true,\n            visibility: \"public\",\n          },\n          {\n            id: 43108,\n            nodeType: \"FunctionDefinition\",\n            src: \"3255:106:21\",\n            nodes: [],\n            body: {\n              id: 43107,\n              nodeType: \"Block\",\n              src: \"3325:36:21\",\n              nodes: [],\n              statements: [\n                {\n                  expression: {\n                    id: 43105,\n                    name: \"_totalSupply\",\n                    nodeType: \"Identifier\",\n                    overloadedDeclarations: [],\n                    referencedDeclaration: 43047,\n                    src: \"3342:12:21\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_uint256\",\n                      typeString: \"uint256\",\n                    },\n                  },\n                  functionReturnParameters: 43104,\n                  id: 43106,\n                  nodeType: \"Return\",\n                  src: \"3335:19:21\",\n                },\n              ],\n            },\n            baseFunctions: [43637],\n            documentation: {\n              id: 43099,\n              nodeType: \"StructuredDocumentation\",\n              src: \"3201:49:21\",\n              text: \" @dev See {IERC20-totalSupply}.\",\n            },\n            functionSelector: \"18160ddd\",\n            implemented: true,\n            kind: \"function\",\n            modifiers: [],\n            name: \"totalSupply\",\n            nameLocation: \"3264:11:21\",\n            overrides: {\n              id: 43101,\n              nodeType: \"OverrideSpecifier\",\n              overrides: [],\n              src: \"3298:8:21\",\n            },\n            parameters: {\n              id: 43100,\n              nodeType: \"ParameterList\",\n              parameters: [],\n              src: \"3275:2:21\",\n            },\n            returnParameters: {\n              id: 43104,\n              nodeType: \"ParameterList\",\n              parameters: [\n                {\n                  constant: false,\n                  id: 43103,\n                  mutability: \"mutable\",\n                  name: \"\",\n                  nameLocation: \"-1:-1:-1\",\n                  nodeType: \"VariableDeclaration\",\n                  scope: 43108,\n                  src: \"3316:7:21\",\n                  stateVariable: false,\n                  storageLocation: \"default\",\n                  typeDescriptions: {\n                    typeIdentifier: \"t_uint256\",\n                    typeString: \"uint256\",\n                  },\n                  typeName: {\n                    id: 43102,\n                    name: \"uint256\",\n                    nodeType: \"ElementaryTypeName\",\n                    src: \"3316:7:21\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_uint256\",\n                      typeString: \"uint256\",\n                    },\n                  },\n                  visibility: \"internal\",\n                },\n              ],\n              src: \"3315:9:21\",\n            },\n            scope: 43610,\n            stateMutability: \"view\",\n            virtual: true,\n            visibility: \"public\",\n          },\n          {\n            id: 43122,\n            nodeType: \"FunctionDefinition\",\n            src: \"3419:125:21\",\n            nodes: [],\n            body: {\n              id: 43121,\n              nodeType: \"Block\",\n              src: \"3502:42:21\",\n              nodes: [],\n              statements: [\n                {\n                  expression: {\n                    baseExpression: {\n                      id: 43117,\n                      name: \"_balances\",\n                      nodeType: \"Identifier\",\n                      overloadedDeclarations: [],\n                      referencedDeclaration: 43039,\n                      src: \"3519:9:21\",\n                      typeDescriptions: {\n                        typeIdentifier: \"t_mapping$_t_address_$_t_uint256_$\",\n                        typeString: \"mapping(address => uint256)\",\n                      },\n                    },\n                    id: 43119,\n                    indexExpression: {\n                      id: 43118,\n                      name: \"account\",\n                      nodeType: \"Identifier\",\n                      overloadedDeclarations: [],\n                      referencedDeclaration: 43111,\n                      src: \"3529:7:21\",\n                      typeDescriptions: {\n                        typeIdentifier: \"t_address\",\n                        typeString: \"address\",\n                      },\n                    },\n                    isConstant: false,\n                    isLValue: true,\n                    isPure: false,\n                    lValueRequested: false,\n                    nodeType: \"IndexAccess\",\n                    src: \"3519:18:21\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_uint256\",\n                      typeString: \"uint256\",\n                    },\n                  },\n                  functionReturnParameters: 43116,\n                  id: 43120,\n                  nodeType: \"Return\",\n                  src: \"3512:25:21\",\n                },\n              ],\n            },\n            baseFunctions: [43645],\n            documentation: {\n              id: 43109,\n              nodeType: \"StructuredDocumentation\",\n              src: \"3367:47:21\",\n              text: \" @dev See {IERC20-balanceOf}.\",\n            },\n            functionSelector: \"70a08231\",\n            implemented: true,\n            kind: \"function\",\n            modifiers: [],\n            name: \"balanceOf\",\n            nameLocation: \"3428:9:21\",\n            overrides: {\n              id: 43113,\n              nodeType: \"OverrideSpecifier\",\n              overrides: [],\n              src: \"3475:8:21\",\n            },\n            parameters: {\n              id: 43112,\n              nodeType: \"ParameterList\",\n              parameters: [\n                {\n                  constant: false,\n                  id: 43111,\n                  mutability: \"mutable\",\n                  name: \"account\",\n                  nameLocation: \"3446:7:21\",\n                  nodeType: \"VariableDeclaration\",\n                  scope: 43122,\n                  src: \"3438:15:21\",\n                  stateVariable: false,\n                  storageLocation: \"default\",\n                  typeDescriptions: {\n                    typeIdentifier: \"t_address\",\n                    typeString: \"address\",\n                  },\n                  typeName: {\n                    id: 43110,\n                    name: \"address\",\n                    nodeType: \"ElementaryTypeName\",\n                    src: \"3438:7:21\",\n                    stateMutability: \"nonpayable\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_address\",\n                      typeString: \"address\",\n                    },\n                  },\n                  visibility: \"internal\",\n                },\n              ],\n              src: \"3437:17:21\",\n            },\n            returnParameters: {\n              id: 43116,\n              nodeType: \"ParameterList\",\n              parameters: [\n                {\n                  constant: false,\n                  id: 43115,\n                  mutability: \"mutable\",\n                  name: \"\",\n                  nameLocation: \"-1:-1:-1\",\n                  nodeType: \"VariableDeclaration\",\n                  scope: 43122,\n                  src: \"3493:7:21\",\n                  stateVariable: false,\n                  storageLocation: \"default\",\n                  typeDescriptions: {\n                    typeIdentifier: \"t_uint256\",\n                    typeString: \"uint256\",\n                  },\n                  typeName: {\n                    id: 43114,\n                    name: \"uint256\",\n                    nodeType: \"ElementaryTypeName\",\n                    src: \"3493:7:21\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_uint256\",\n                      typeString: \"uint256\",\n                    },\n                  },\n                  visibility: \"internal\",\n                },\n              ],\n              src: \"3492:9:21\",\n            },\n            scope: 43610,\n            stateMutability: \"view\",\n            virtual: true,\n            visibility: \"public\",\n          },\n          {\n            id: 43147,\n            nodeType: \"FunctionDefinition\",\n            src: \"3740:189:21\",\n            nodes: [],\n            body: {\n              id: 43146,\n              nodeType: \"Block\",\n              src: \"3825:104:21\",\n              nodes: [],\n              statements: [\n                {\n                  assignments: [43134],\n                  declarations: [\n                    {\n                      constant: false,\n                      id: 43134,\n                      mutability: \"mutable\",\n                      name: \"owner\",\n                      nameLocation: \"3843:5:21\",\n                      nodeType: \"VariableDeclaration\",\n                      scope: 43146,\n                      src: \"3835:13:21\",\n                      stateVariable: false,\n                      storageLocation: \"default\",\n                      typeDescriptions: {\n                        typeIdentifier: \"t_address\",\n                        typeString: \"address\",\n                      },\n                      typeName: {\n                        id: 43133,\n                        name: \"address\",\n                        nodeType: \"ElementaryTypeName\",\n                        src: \"3835:7:21\",\n                        stateMutability: \"nonpayable\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                      },\n                      visibility: \"internal\",\n                    },\n                  ],\n                  id: 43137,\n                  initialValue: {\n                    arguments: [],\n                    expression: {\n                      argumentTypes: [],\n                      id: 43135,\n                      name: \"_msgSender\",\n                      nodeType: \"Identifier\",\n                      overloadedDeclarations: [],\n                      referencedDeclaration: 45387,\n                      src: \"3851:10:21\",\n                      typeDescriptions: {\n                        typeIdentifier:\n                          \"t_function_internal_view$__$returns$_t_address_$\",\n                        typeString: \"function () view returns (address)\",\n                      },\n                    },\n                    id: 43136,\n                    isConstant: false,\n                    isLValue: false,\n                    isPure: false,\n                    kind: \"functionCall\",\n                    lValueRequested: false,\n                    nameLocations: [],\n                    names: [],\n                    nodeType: \"FunctionCall\",\n                    src: \"3851:12:21\",\n                    tryCall: false,\n                    typeDescriptions: {\n                      typeIdentifier: \"t_address\",\n                      typeString: \"address\",\n                    },\n                  },\n                  nodeType: \"VariableDeclarationStatement\",\n                  src: \"3835:28:21\",\n                },\n                {\n                  expression: {\n                    arguments: [\n                      {\n                        id: 43139,\n                        name: \"owner\",\n                        nodeType: \"Identifier\",\n                        overloadedDeclarations: [],\n                        referencedDeclaration: 43134,\n                        src: \"3883:5:21\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                      },\n                      {\n                        id: 43140,\n                        name: \"to\",\n                        nodeType: \"Identifier\",\n                        overloadedDeclarations: [],\n                        referencedDeclaration: 43125,\n                        src: \"3890:2:21\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                      },\n                      {\n                        id: 43141,\n                        name: \"amount\",\n                        nodeType: \"Identifier\",\n                        overloadedDeclarations: [],\n                        referencedDeclaration: 43127,\n                        src: \"3894:6:21\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_uint256\",\n                          typeString: \"uint256\",\n                        },\n                      },\n                    ],\n                    expression: {\n                      argumentTypes: [\n                        {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                        {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                        {\n                          typeIdentifier: \"t_uint256\",\n                          typeString: \"uint256\",\n                        },\n                      ],\n                      id: 43138,\n                      name: \"_transfer\",\n                      nodeType: \"Identifier\",\n                      overloadedDeclarations: [],\n                      referencedDeclaration: 43370,\n                      src: \"3873:9:21\",\n                      typeDescriptions: {\n                        typeIdentifier:\n                          \"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$\",\n                        typeString: \"function (address,address,uint256)\",\n                      },\n                    },\n                    id: 43142,\n                    isConstant: false,\n                    isLValue: false,\n                    isPure: false,\n                    kind: \"functionCall\",\n                    lValueRequested: false,\n                    nameLocations: [],\n                    names: [],\n                    nodeType: \"FunctionCall\",\n                    src: \"3873:28:21\",\n                    tryCall: false,\n                    typeDescriptions: {\n                      typeIdentifier: \"t_tuple$__$\",\n                      typeString: \"tuple()\",\n                    },\n                  },\n                  id: 43143,\n                  nodeType: \"ExpressionStatement\",\n                  src: \"3873:28:21\",\n                },\n                {\n                  expression: {\n                    hexValue: \"74727565\",\n                    id: 43144,\n                    isConstant: false,\n                    isLValue: false,\n                    isPure: true,\n                    kind: \"bool\",\n                    lValueRequested: false,\n                    nodeType: \"Literal\",\n                    src: \"3918:4:21\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_bool\",\n                      typeString: \"bool\",\n                    },\n                    value: \"true\",\n                  },\n                  functionReturnParameters: 43132,\n                  id: 43145,\n                  nodeType: \"Return\",\n                  src: \"3911:11:21\",\n                },\n              ],\n            },\n            baseFunctions: [43655],\n            documentation: {\n              id: 43123,\n              nodeType: \"StructuredDocumentation\",\n              src: \"3550:185:21\",\n              text: \" @dev See {IERC20-transfer}.\\n Requirements:\\n - `to` cannot be the zero address.\\n - the caller must have a balance of at least `amount`.\",\n            },\n            functionSelector: \"a9059cbb\",\n            implemented: true,\n            kind: \"function\",\n            modifiers: [],\n            name: \"transfer\",\n            nameLocation: \"3749:8:21\",\n            overrides: {\n              id: 43129,\n              nodeType: \"OverrideSpecifier\",\n              overrides: [],\n              src: \"3801:8:21\",\n            },\n            parameters: {\n              id: 43128,\n              nodeType: \"ParameterList\",\n              parameters: [\n                {\n                  constant: false,\n                  id: 43125,\n                  mutability: \"mutable\",\n                  name: \"to\",\n                  nameLocation: \"3766:2:21\",\n                  nodeType: \"VariableDeclaration\",\n                  scope: 43147,\n                  src: \"3758:10:21\",\n                  stateVariable: false,\n                  storageLocation: \"default\",\n                  typeDescriptions: {\n                    typeIdentifier: \"t_address\",\n                    typeString: \"address\",\n                  },\n                  typeName: {\n                    id: 43124,\n                    name: \"address\",\n                    nodeType: \"ElementaryTypeName\",\n                    src: \"3758:7:21\",\n                    stateMutability: \"nonpayable\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_address\",\n                      typeString: \"address\",\n                    },\n                  },\n                  visibility: \"internal\",\n                },\n                {\n                  constant: false,\n                  id: 43127,\n                  mutability: \"mutable\",\n                  name: \"amount\",\n                  nameLocation: \"3778:6:21\",\n                  nodeType: \"VariableDeclaration\",\n                  scope: 43147,\n                  src: \"3770:14:21\",\n                  stateVariable: false,\n                  storageLocation: \"default\",\n                  typeDescriptions: {\n                    typeIdentifier: \"t_uint256\",\n                    typeString: \"uint256\",\n                  },\n                  typeName: {\n                    id: 43126,\n                    name: \"uint256\",\n                    nodeType: \"ElementaryTypeName\",\n                    src: \"3770:7:21\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_uint256\",\n                      typeString: \"uint256\",\n                    },\n                  },\n                  visibility: \"internal\",\n                },\n              ],\n              src: \"3757:28:21\",\n            },\n            returnParameters: {\n              id: 43132,\n              nodeType: \"ParameterList\",\n              parameters: [\n                {\n                  constant: false,\n                  id: 43131,\n                  mutability: \"mutable\",\n                  name: \"\",\n                  nameLocation: \"-1:-1:-1\",\n                  nodeType: \"VariableDeclaration\",\n                  scope: 43147,\n                  src: \"3819:4:21\",\n                  stateVariable: false,\n                  storageLocation: \"default\",\n                  typeDescriptions: {\n                    typeIdentifier: \"t_bool\",\n                    typeString: \"bool\",\n                  },\n                  typeName: {\n                    id: 43130,\n                    name: \"bool\",\n                    nodeType: \"ElementaryTypeName\",\n                    src: \"3819:4:21\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_bool\",\n                      typeString: \"bool\",\n                    },\n                  },\n                  visibility: \"internal\",\n                },\n              ],\n              src: \"3818:6:21\",\n            },\n            scope: 43610,\n            stateMutability: \"nonpayable\",\n            virtual: true,\n            visibility: \"public\",\n          },\n          {\n            id: 43165,\n            nodeType: \"FunctionDefinition\",\n            src: \"3987:149:21\",\n            nodes: [],\n            body: {\n              id: 43164,\n              nodeType: \"Block\",\n              src: \"4085:51:21\",\n              nodes: [],\n              statements: [\n                {\n                  expression: {\n                    baseExpression: {\n                      baseExpression: {\n                        id: 43158,\n                        name: \"_allowances\",\n                        nodeType: \"Identifier\",\n                        overloadedDeclarations: [],\n                        referencedDeclaration: 43045,\n                        src: \"4102:11:21\",\n                        typeDescriptions: {\n                          typeIdentifier:\n                            \"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$\",\n                          typeString:\n                            \"mapping(address => mapping(address => uint256))\",\n                        },\n                      },\n                      id: 43160,\n                      indexExpression: {\n                        id: 43159,\n                        name: \"owner\",\n                        nodeType: \"Identifier\",\n                        overloadedDeclarations: [],\n                        referencedDeclaration: 43150,\n                        src: \"4114:5:21\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                      },\n                      isConstant: false,\n                      isLValue: true,\n                      isPure: false,\n                      lValueRequested: false,\n                      nodeType: \"IndexAccess\",\n                      src: \"4102:18:21\",\n                      typeDescriptions: {\n                        typeIdentifier: \"t_mapping$_t_address_$_t_uint256_$\",\n                        typeString: \"mapping(address => uint256)\",\n                      },\n                    },\n                    id: 43162,\n                    indexExpression: {\n                      id: 43161,\n                      name: \"spender\",\n                      nodeType: \"Identifier\",\n                      overloadedDeclarations: [],\n                      referencedDeclaration: 43152,\n                      src: \"4121:7:21\",\n                      typeDescriptions: {\n                        typeIdentifier: \"t_address\",\n                        typeString: \"address\",\n                      },\n                    },\n                    isConstant: false,\n                    isLValue: true,\n                    isPure: false,\n                    lValueRequested: false,\n                    nodeType: \"IndexAccess\",\n                    src: \"4102:27:21\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_uint256\",\n                      typeString: \"uint256\",\n                    },\n                  },\n                  functionReturnParameters: 43157,\n                  id: 43163,\n                  nodeType: \"Return\",\n                  src: \"4095:34:21\",\n                },\n              ],\n            },\n            baseFunctions: [43665],\n            documentation: {\n              id: 43148,\n              nodeType: \"StructuredDocumentation\",\n              src: \"3935:47:21\",\n              text: \" @dev See {IERC20-allowance}.\",\n            },\n            functionSelector: \"dd62ed3e\",\n            implemented: true,\n            kind: \"function\",\n            modifiers: [],\n            name: \"allowance\",\n            nameLocation: \"3996:9:21\",\n            overrides: {\n              id: 43154,\n              nodeType: \"OverrideSpecifier\",\n              overrides: [],\n              src: \"4058:8:21\",\n            },\n            parameters: {\n              id: 43153,\n              nodeType: \"ParameterList\",\n              parameters: [\n                {\n                  constant: false,\n                  id: 43150,\n                  mutability: \"mutable\",\n                  name: \"owner\",\n                  nameLocation: \"4014:5:21\",\n                  nodeType: \"VariableDeclaration\",\n                  scope: 43165,\n                  src: \"4006:13:21\",\n                  stateVariable: false,\n                  storageLocation: \"default\",\n                  typeDescriptions: {\n                    typeIdentifier: \"t_address\",\n                    typeString: \"address\",\n                  },\n                  typeName: {\n                    id: 43149,\n                    name: \"address\",\n                    nodeType: \"ElementaryTypeName\",\n                    src: \"4006:7:21\",\n                    stateMutability: \"nonpayable\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_address\",\n                      typeString: \"address\",\n                    },\n                  },\n                  visibility: \"internal\",\n                },\n                {\n                  constant: false,\n                  id: 43152,\n                  mutability: \"mutable\",\n                  name: \"spender\",\n                  nameLocation: \"4029:7:21\",\n                  nodeType: \"VariableDeclaration\",\n                  scope: 43165,\n                  src: \"4021:15:21\",\n                  stateVariable: false,\n                  storageLocation: \"default\",\n                  typeDescriptions: {\n                    typeIdentifier: \"t_address\",\n                    typeString: \"address\",\n                  },\n                  typeName: {\n                    id: 43151,\n                    name: \"address\",\n                    nodeType: \"ElementaryTypeName\",\n                    src: \"4021:7:21\",\n                    stateMutability: \"nonpayable\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_address\",\n                      typeString: \"address\",\n                    },\n                  },\n                  visibility: \"internal\",\n                },\n              ],\n              src: \"4005:32:21\",\n            },\n            returnParameters: {\n              id: 43157,\n              nodeType: \"ParameterList\",\n              parameters: [\n                {\n                  constant: false,\n                  id: 43156,\n                  mutability: \"mutable\",\n                  name: \"\",\n                  nameLocation: \"-1:-1:-1\",\n                  nodeType: \"VariableDeclaration\",\n                  scope: 43165,\n                  src: \"4076:7:21\",\n                  stateVariable: false,\n                  storageLocation: \"default\",\n                  typeDescriptions: {\n                    typeIdentifier: \"t_uint256\",\n                    typeString: \"uint256\",\n                  },\n                  typeName: {\n                    id: 43155,\n                    name: \"uint256\",\n                    nodeType: \"ElementaryTypeName\",\n                    src: \"4076:7:21\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_uint256\",\n                      typeString: \"uint256\",\n                    },\n                  },\n                  visibility: \"internal\",\n                },\n              ],\n              src: \"4075:9:21\",\n            },\n            scope: 43610,\n            stateMutability: \"view\",\n            virtual: true,\n            visibility: \"public\",\n          },\n          {\n            id: 43190,\n            nodeType: \"FunctionDefinition\",\n            src: \"4444:197:21\",\n            nodes: [],\n            body: {\n              id: 43189,\n              nodeType: \"Block\",\n              src: \"4533:108:21\",\n              nodes: [],\n              statements: [\n                {\n                  assignments: [43177],\n                  declarations: [\n                    {\n                      constant: false,\n                      id: 43177,\n                      mutability: \"mutable\",\n                      name: \"owner\",\n                      nameLocation: \"4551:5:21\",\n                      nodeType: \"VariableDeclaration\",\n                      scope: 43189,\n                      src: \"4543:13:21\",\n                      stateVariable: false,\n                      storageLocation: \"default\",\n                      typeDescriptions: {\n                        typeIdentifier: \"t_address\",\n                        typeString: \"address\",\n                      },\n                      typeName: {\n                        id: 43176,\n                        name: \"address\",\n                        nodeType: \"ElementaryTypeName\",\n                        src: \"4543:7:21\",\n                        stateMutability: \"nonpayable\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                      },\n                      visibility: \"internal\",\n                    },\n                  ],\n                  id: 43180,\n                  initialValue: {\n                    arguments: [],\n                    expression: {\n                      argumentTypes: [],\n                      id: 43178,\n                      name: \"_msgSender\",\n                      nodeType: \"Identifier\",\n                      overloadedDeclarations: [],\n                      referencedDeclaration: 45387,\n                      src: \"4559:10:21\",\n                      typeDescriptions: {\n                        typeIdentifier:\n                          \"t_function_internal_view$__$returns$_t_address_$\",\n                        typeString: \"function () view returns (address)\",\n                      },\n                    },\n                    id: 43179,\n                    isConstant: false,\n                    isLValue: false,\n                    isPure: false,\n                    kind: \"functionCall\",\n                    lValueRequested: false,\n                    nameLocations: [],\n                    names: [],\n                    nodeType: \"FunctionCall\",\n                    src: \"4559:12:21\",\n                    tryCall: false,\n                    typeDescriptions: {\n                      typeIdentifier: \"t_address\",\n                      typeString: \"address\",\n                    },\n                  },\n                  nodeType: \"VariableDeclarationStatement\",\n                  src: \"4543:28:21\",\n                },\n                {\n                  expression: {\n                    arguments: [\n                      {\n                        id: 43182,\n                        name: \"owner\",\n                        nodeType: \"Identifier\",\n                        overloadedDeclarations: [],\n                        referencedDeclaration: 43177,\n                        src: \"4590:5:21\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                      },\n                      {\n                        id: 43183,\n                        name: \"spender\",\n                        nodeType: \"Identifier\",\n                        overloadedDeclarations: [],\n                        referencedDeclaration: 43168,\n                        src: \"4597:7:21\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                      },\n                      {\n                        id: 43184,\n                        name: \"amount\",\n                        nodeType: \"Identifier\",\n                        overloadedDeclarations: [],\n                        referencedDeclaration: 43170,\n                        src: \"4606:6:21\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_uint256\",\n                          typeString: \"uint256\",\n                        },\n                      },\n                    ],\n                    expression: {\n                      argumentTypes: [\n                        {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                        {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                        {\n                          typeIdentifier: \"t_uint256\",\n                          typeString: \"uint256\",\n                        },\n                      ],\n                      id: 43181,\n                      name: \"_approve\",\n                      nodeType: \"Identifier\",\n                      overloadedDeclarations: [],\n                      referencedDeclaration: 43544,\n                      src: \"4581:8:21\",\n                      typeDescriptions: {\n                        typeIdentifier:\n                          \"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$\",\n                        typeString: \"function (address,address,uint256)\",\n                      },\n                    },\n                    id: 43185,\n                    isConstant: false,\n                    isLValue: false,\n                    isPure: false,\n                    kind: \"functionCall\",\n                    lValueRequested: false,\n                    nameLocations: [],\n                    names: [],\n                    nodeType: \"FunctionCall\",\n                    src: \"4581:32:21\",\n                    tryCall: false,\n                    typeDescriptions: {\n                      typeIdentifier: \"t_tuple$__$\",\n                      typeString: \"tuple()\",\n                    },\n                  },\n                  id: 43186,\n                  nodeType: \"ExpressionStatement\",\n                  src: \"4581:32:21\",\n                },\n                {\n                  expression: {\n                    hexValue: \"74727565\",\n                    id: 43187,\n                    isConstant: false,\n                    isLValue: false,\n                    isPure: true,\n                    kind: \"bool\",\n                    lValueRequested: false,\n                    nodeType: \"Literal\",\n                    src: \"4630:4:21\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_bool\",\n                      typeString: \"bool\",\n                    },\n                    value: \"true\",\n                  },\n                  functionReturnParameters: 43175,\n                  id: 43188,\n                  nodeType: \"Return\",\n                  src: \"4623:11:21\",\n                },\n              ],\n            },\n            baseFunctions: [43675],\n            documentation: {\n              id: 43166,\n              nodeType: \"StructuredDocumentation\",\n              src: \"4142:297:21\",\n              text: \" @dev See {IERC20-approve}.\\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n `transferFrom`. This is semantically equivalent to an infinite approval.\\n Requirements:\\n - `spender` cannot be the zero address.\",\n            },\n            functionSelector: \"095ea7b3\",\n            implemented: true,\n            kind: \"function\",\n            modifiers: [],\n            name: \"approve\",\n            nameLocation: \"4453:7:21\",\n            overrides: {\n              id: 43172,\n              nodeType: \"OverrideSpecifier\",\n              overrides: [],\n              src: \"4509:8:21\",\n            },\n            parameters: {\n              id: 43171,\n              nodeType: \"ParameterList\",\n              parameters: [\n                {\n                  constant: false,\n                  id: 43168,\n                  mutability: \"mutable\",\n                  name: \"spender\",\n                  nameLocation: \"4469:7:21\",\n                  nodeType: \"VariableDeclaration\",\n                  scope: 43190,\n                  src: \"4461:15:21\",\n                  stateVariable: false,\n                  storageLocation: \"default\",\n                  typeDescriptions: {\n                    typeIdentifier: \"t_address\",\n                    typeString: \"address\",\n                  },\n                  typeName: {\n                    id: 43167,\n                    name: \"address\",\n                    nodeType: \"ElementaryTypeName\",\n                    src: \"4461:7:21\",\n                    stateMutability: \"nonpayable\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_address\",\n                      typeString: \"address\",\n                    },\n                  },\n                  visibility: \"internal\",\n                },\n                {\n                  constant: false,\n                  id: 43170,\n                  mutability: \"mutable\",\n                  name: \"amount\",\n                  nameLocation: \"4486:6:21\",\n                  nodeType: \"VariableDeclaration\",\n                  scope: 43190,\n                  src: \"4478:14:21\",\n                  stateVariable: false,\n                  storageLocation: \"default\",\n                  typeDescriptions: {\n                    typeIdentifier: \"t_uint256\",\n                    typeString: \"uint256\",\n                  },\n                  typeName: {\n                    id: 43169,\n                    name: \"uint256\",\n                    nodeType: \"ElementaryTypeName\",\n                    src: \"4478:7:21\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_uint256\",\n                      typeString: \"uint256\",\n                    },\n                  },\n                  visibility: \"internal\",\n                },\n              ],\n              src: \"4460:33:21\",\n            },\n            returnParameters: {\n              id: 43175,\n              nodeType: \"ParameterList\",\n              parameters: [\n                {\n                  constant: false,\n                  id: 43174,\n                  mutability: \"mutable\",\n                  name: \"\",\n                  nameLocation: \"-1:-1:-1\",\n                  nodeType: \"VariableDeclaration\",\n                  scope: 43190,\n                  src: \"4527:4:21\",\n                  stateVariable: false,\n                  storageLocation: \"default\",\n                  typeDescriptions: {\n                    typeIdentifier: \"t_bool\",\n                    typeString: \"bool\",\n                  },\n                  typeName: {\n                    id: 43173,\n                    name: \"bool\",\n                    nodeType: \"ElementaryTypeName\",\n                    src: \"4527:4:21\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_bool\",\n                      typeString: \"bool\",\n                    },\n                  },\n                  visibility: \"internal\",\n                },\n              ],\n              src: \"4526:6:21\",\n            },\n            scope: 43610,\n            stateMutability: \"nonpayable\",\n            virtual: true,\n            visibility: \"public\",\n          },\n          {\n            id: 43223,\n            nodeType: \"FunctionDefinition\",\n            src: \"5203:256:21\",\n            nodes: [],\n            body: {\n              id: 43222,\n              nodeType: \"Block\",\n              src: \"5306:153:21\",\n              nodes: [],\n              statements: [\n                {\n                  assignments: [43204],\n                  declarations: [\n                    {\n                      constant: false,\n                      id: 43204,\n                      mutability: \"mutable\",\n                      name: \"spender\",\n                      nameLocation: \"5324:7:21\",\n                      nodeType: \"VariableDeclaration\",\n                      scope: 43222,\n                      src: \"5316:15:21\",\n                      stateVariable: false,\n                      storageLocation: \"default\",\n                      typeDescriptions: {\n                        typeIdentifier: \"t_address\",\n                        typeString: \"address\",\n                      },\n                      typeName: {\n                        id: 43203,\n                        name: \"address\",\n                        nodeType: \"ElementaryTypeName\",\n                        src: \"5316:7:21\",\n                        stateMutability: \"nonpayable\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                      },\n                      visibility: \"internal\",\n                    },\n                  ],\n                  id: 43207,\n                  initialValue: {\n                    arguments: [],\n                    expression: {\n                      argumentTypes: [],\n                      id: 43205,\n                      name: \"_msgSender\",\n                      nodeType: \"Identifier\",\n                      overloadedDeclarations: [],\n                      referencedDeclaration: 45387,\n                      src: \"5334:10:21\",\n                      typeDescriptions: {\n                        typeIdentifier:\n                          \"t_function_internal_view$__$returns$_t_address_$\",\n                        typeString: \"function () view returns (address)\",\n                      },\n                    },\n                    id: 43206,\n                    isConstant: false,\n                    isLValue: false,\n                    isPure: false,\n                    kind: \"functionCall\",\n                    lValueRequested: false,\n                    nameLocations: [],\n                    names: [],\n                    nodeType: \"FunctionCall\",\n                    src: \"5334:12:21\",\n                    tryCall: false,\n                    typeDescriptions: {\n                      typeIdentifier: \"t_address\",\n                      typeString: \"address\",\n                    },\n                  },\n                  nodeType: \"VariableDeclarationStatement\",\n                  src: \"5316:30:21\",\n                },\n                {\n                  expression: {\n                    arguments: [\n                      {\n                        id: 43209,\n                        name: \"from\",\n                        nodeType: \"Identifier\",\n                        overloadedDeclarations: [],\n                        referencedDeclaration: 43193,\n                        src: \"5372:4:21\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                      },\n                      {\n                        id: 43210,\n                        name: \"spender\",\n                        nodeType: \"Identifier\",\n                        overloadedDeclarations: [],\n                        referencedDeclaration: 43204,\n                        src: \"5378:7:21\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                      },\n                      {\n                        id: 43211,\n                        name: \"amount\",\n                        nodeType: \"Identifier\",\n                        overloadedDeclarations: [],\n                        referencedDeclaration: 43197,\n                        src: \"5387:6:21\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_uint256\",\n                          typeString: \"uint256\",\n                        },\n                      },\n                    ],\n                    expression: {\n                      argumentTypes: [\n                        {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                        {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                        {\n                          typeIdentifier: \"t_uint256\",\n                          typeString: \"uint256\",\n                        },\n                      ],\n                      id: 43208,\n                      name: \"_spendAllowance\",\n                      nodeType: \"Identifier\",\n                      overloadedDeclarations: [],\n                      referencedDeclaration: 43587,\n                      src: \"5356:15:21\",\n                      typeDescriptions: {\n                        typeIdentifier:\n                          \"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$\",\n                        typeString: \"function (address,address,uint256)\",\n                      },\n                    },\n                    id: 43212,\n                    isConstant: false,\n                    isLValue: false,\n                    isPure: false,\n                    kind: \"functionCall\",\n                    lValueRequested: false,\n                    nameLocations: [],\n                    names: [],\n                    nodeType: \"FunctionCall\",\n                    src: \"5356:38:21\",\n                    tryCall: false,\n                    typeDescriptions: {\n                      typeIdentifier: \"t_tuple$__$\",\n                      typeString: \"tuple()\",\n                    },\n                  },\n                  id: 43213,\n                  nodeType: \"ExpressionStatement\",\n                  src: \"5356:38:21\",\n                },\n                {\n                  expression: {\n                    arguments: [\n                      {\n                        id: 43215,\n                        name: \"from\",\n                        nodeType: \"Identifier\",\n                        overloadedDeclarations: [],\n                        referencedDeclaration: 43193,\n                        src: \"5414:4:21\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                      },\n                      {\n                        id: 43216,\n                        name: \"to\",\n                        nodeType: \"Identifier\",\n                        overloadedDeclarations: [],\n                        referencedDeclaration: 43195,\n                        src: \"5420:2:21\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                      },\n                      {\n                        id: 43217,\n                        name: \"amount\",\n                        nodeType: \"Identifier\",\n                        overloadedDeclarations: [],\n                        referencedDeclaration: 43197,\n                        src: \"5424:6:21\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_uint256\",\n                          typeString: \"uint256\",\n                        },\n                      },\n                    ],\n                    expression: {\n                      argumentTypes: [\n                        {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                        {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                        {\n                          typeIdentifier: \"t_uint256\",\n                          typeString: \"uint256\",\n                        },\n                      ],\n                      id: 43214,\n                      name: \"_transfer\",\n                      nodeType: \"Identifier\",\n                      overloadedDeclarations: [],\n                      referencedDeclaration: 43370,\n                      src: \"5404:9:21\",\n                      typeDescriptions: {\n                        typeIdentifier:\n                          \"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$\",\n                        typeString: \"function (address,address,uint256)\",\n                      },\n                    },\n                    id: 43218,\n                    isConstant: false,\n                    isLValue: false,\n                    isPure: false,\n                    kind: \"functionCall\",\n                    lValueRequested: false,\n                    nameLocations: [],\n                    names: [],\n                    nodeType: \"FunctionCall\",\n                    src: \"5404:27:21\",\n                    tryCall: false,\n                    typeDescriptions: {\n                      typeIdentifier: \"t_tuple$__$\",\n                      typeString: \"tuple()\",\n                    },\n                  },\n                  id: 43219,\n                  nodeType: \"ExpressionStatement\",\n                  src: \"5404:27:21\",\n                },\n                {\n                  expression: {\n                    hexValue: \"74727565\",\n                    id: 43220,\n                    isConstant: false,\n                    isLValue: false,\n                    isPure: true,\n                    kind: \"bool\",\n                    lValueRequested: false,\n                    nodeType: \"Literal\",\n                    src: \"5448:4:21\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_bool\",\n                      typeString: \"bool\",\n                    },\n                    value: \"true\",\n                  },\n                  functionReturnParameters: 43202,\n                  id: 43221,\n                  nodeType: \"Return\",\n                  src: \"5441:11:21\",\n                },\n              ],\n            },\n            baseFunctions: [43687],\n            documentation: {\n              id: 43191,\n              nodeType: \"StructuredDocumentation\",\n              src: \"4647:551:21\",\n              text: \" @dev See {IERC20-transferFrom}.\\n Emits an {Approval} event indicating the updated allowance. This is not\\n required by the EIP. See the note at the beginning of {ERC20}.\\n NOTE: Does not update the allowance if the current allowance\\n is the maximum `uint256`.\\n Requirements:\\n - `from` and `to` cannot be the zero address.\\n - `from` must have a balance of at least `amount`.\\n - the caller must have allowance for ``from``'s tokens of at least\\n `amount`.\",\n            },\n            functionSelector: \"23b872dd\",\n            implemented: true,\n            kind: \"function\",\n            modifiers: [],\n            name: \"transferFrom\",\n            nameLocation: \"5212:12:21\",\n            overrides: {\n              id: 43199,\n              nodeType: \"OverrideSpecifier\",\n              overrides: [],\n              src: \"5282:8:21\",\n            },\n            parameters: {\n              id: 43198,\n              nodeType: \"ParameterList\",\n              parameters: [\n                {\n                  constant: false,\n                  id: 43193,\n                  mutability: \"mutable\",\n                  name: \"from\",\n                  nameLocation: \"5233:4:21\",\n                  nodeType: \"VariableDeclaration\",\n                  scope: 43223,\n                  src: \"5225:12:21\",\n                  stateVariable: false,\n                  storageLocation: \"default\",\n                  typeDescriptions: {\n                    typeIdentifier: \"t_address\",\n                    typeString: \"address\",\n                  },\n                  typeName: {\n                    id: 43192,\n                    name: \"address\",\n                    nodeType: \"ElementaryTypeName\",\n                    src: \"5225:7:21\",\n                    stateMutability: \"nonpayable\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_address\",\n                      typeString: \"address\",\n                    },\n                  },\n                  visibility: \"internal\",\n                },\n                {\n                  constant: false,\n                  id: 43195,\n                  mutability: \"mutable\",\n                  name: \"to\",\n                  nameLocation: \"5247:2:21\",\n                  nodeType: \"VariableDeclaration\",\n                  scope: 43223,\n                  src: \"5239:10:21\",\n                  stateVariable: false,\n                  storageLocation: \"default\",\n                  typeDescriptions: {\n                    typeIdentifier: \"t_address\",\n                    typeString: \"address\",\n                  },\n                  typeName: {\n                    id: 43194,\n                    name: \"address\",\n                    nodeType: \"ElementaryTypeName\",\n                    src: \"5239:7:21\",\n                    stateMutability: \"nonpayable\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_address\",\n                      typeString: \"address\",\n                    },\n                  },\n                  visibility: \"internal\",\n                },\n                {\n                  constant: false,\n                  id: 43197,\n                  mutability: \"mutable\",\n                  name: \"amount\",\n                  nameLocation: \"5259:6:21\",\n                  nodeType: \"VariableDeclaration\",\n                  scope: 43223,\n                  src: \"5251:14:21\",\n                  stateVariable: false,\n                  storageLocation: \"default\",\n                  typeDescriptions: {\n                    typeIdentifier: \"t_uint256\",\n                    typeString: \"uint256\",\n                  },\n                  typeName: {\n                    id: 43196,\n                    name: \"uint256\",\n                    nodeType: \"ElementaryTypeName\",\n                    src: \"5251:7:21\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_uint256\",\n                      typeString: \"uint256\",\n                    },\n                  },\n                  visibility: \"internal\",\n                },\n              ],\n              src: \"5224:42:21\",\n            },\n            returnParameters: {\n              id: 43202,\n              nodeType: \"ParameterList\",\n              parameters: [\n                {\n                  constant: false,\n                  id: 43201,\n                  mutability: \"mutable\",\n                  name: \"\",\n                  nameLocation: \"-1:-1:-1\",\n                  nodeType: \"VariableDeclaration\",\n                  scope: 43223,\n                  src: \"5300:4:21\",\n                  stateVariable: false,\n                  storageLocation: \"default\",\n                  typeDescriptions: {\n                    typeIdentifier: \"t_bool\",\n                    typeString: \"bool\",\n                  },\n                  typeName: {\n                    id: 43200,\n                    name: \"bool\",\n                    nodeType: \"ElementaryTypeName\",\n                    src: \"5300:4:21\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_bool\",\n                      typeString: \"bool\",\n                    },\n                  },\n                  visibility: \"internal\",\n                },\n              ],\n              src: \"5299:6:21\",\n            },\n            scope: 43610,\n            stateMutability: \"nonpayable\",\n            virtual: true,\n            visibility: \"public\",\n          },\n          {\n            id: 43252,\n            nodeType: \"FunctionDefinition\",\n            src: \"5854:234:21\",\n            nodes: [],\n            body: {\n              id: 43251,\n              nodeType: \"Block\",\n              src: \"5948:140:21\",\n              nodes: [],\n              statements: [\n                {\n                  assignments: [43234],\n                  declarations: [\n                    {\n                      constant: false,\n                      id: 43234,\n                      mutability: \"mutable\",\n                      name: \"owner\",\n                      nameLocation: \"5966:5:21\",\n                      nodeType: \"VariableDeclaration\",\n                      scope: 43251,\n                      src: \"5958:13:21\",\n                      stateVariable: false,\n                      storageLocation: \"default\",\n                      typeDescriptions: {\n                        typeIdentifier: \"t_address\",\n                        typeString: \"address\",\n                      },\n                      typeName: {\n                        id: 43233,\n                        name: \"address\",\n                        nodeType: \"ElementaryTypeName\",\n                        src: \"5958:7:21\",\n                        stateMutability: \"nonpayable\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                      },\n                      visibility: \"internal\",\n                    },\n                  ],\n                  id: 43237,\n                  initialValue: {\n                    arguments: [],\n                    expression: {\n                      argumentTypes: [],\n                      id: 43235,\n                      name: \"_msgSender\",\n                      nodeType: \"Identifier\",\n                      overloadedDeclarations: [],\n                      referencedDeclaration: 45387,\n                      src: \"5974:10:21\",\n                      typeDescriptions: {\n                        typeIdentifier:\n                          \"t_function_internal_view$__$returns$_t_address_$\",\n                        typeString: \"function () view returns (address)\",\n                      },\n                    },\n                    id: 43236,\n                    isConstant: false,\n                    isLValue: false,\n                    isPure: false,\n                    kind: \"functionCall\",\n                    lValueRequested: false,\n                    nameLocations: [],\n                    names: [],\n                    nodeType: \"FunctionCall\",\n                    src: \"5974:12:21\",\n                    tryCall: false,\n                    typeDescriptions: {\n                      typeIdentifier: \"t_address\",\n                      typeString: \"address\",\n                    },\n                  },\n                  nodeType: \"VariableDeclarationStatement\",\n                  src: \"5958:28:21\",\n                },\n                {\n                  expression: {\n                    arguments: [\n                      {\n                        id: 43239,\n                        name: \"owner\",\n                        nodeType: \"Identifier\",\n                        overloadedDeclarations: [],\n                        referencedDeclaration: 43234,\n                        src: \"6005:5:21\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                      },\n                      {\n                        id: 43240,\n                        name: \"spender\",\n                        nodeType: \"Identifier\",\n                        overloadedDeclarations: [],\n                        referencedDeclaration: 43226,\n                        src: \"6012:7:21\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                      },\n                      {\n                        commonType: {\n                          typeIdentifier: \"t_uint256\",\n                          typeString: \"uint256\",\n                        },\n                        id: 43246,\n                        isConstant: false,\n                        isLValue: false,\n                        isPure: false,\n                        lValueRequested: false,\n                        leftExpression: {\n                          arguments: [\n                            {\n                              id: 43242,\n                              name: \"owner\",\n                              nodeType: \"Identifier\",\n                              overloadedDeclarations: [],\n                              referencedDeclaration: 43234,\n                              src: \"6031:5:21\",\n                              typeDescriptions: {\n                                typeIdentifier: \"t_address\",\n                                typeString: \"address\",\n                              },\n                            },\n                            {\n                              id: 43243,\n                              name: \"spender\",\n                              nodeType: \"Identifier\",\n                              overloadedDeclarations: [],\n                              referencedDeclaration: 43226,\n                              src: \"6038:7:21\",\n                              typeDescriptions: {\n                                typeIdentifier: \"t_address\",\n                                typeString: \"address\",\n                              },\n                            },\n                          ],\n                          expression: {\n                            argumentTypes: [\n                              {\n                                typeIdentifier: \"t_address\",\n                                typeString: \"address\",\n                              },\n                              {\n                                typeIdentifier: \"t_address\",\n                                typeString: \"address\",\n                              },\n                            ],\n                            id: 43241,\n                            name: \"allowance\",\n                            nodeType: \"Identifier\",\n                            overloadedDeclarations: [],\n                            referencedDeclaration: 43165,\n                            src: \"6021:9:21\",\n                            typeDescriptions: {\n                              typeIdentifier:\n                                \"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$\",\n                              typeString:\n                                \"function (address,address) view returns (uint256)\",\n                            },\n                          },\n                          id: 43244,\n                          isConstant: false,\n                          isLValue: false,\n                          isPure: false,\n                          kind: \"functionCall\",\n                          lValueRequested: false,\n                          nameLocations: [],\n                          names: [],\n                          nodeType: \"FunctionCall\",\n                          src: \"6021:25:21\",\n                          tryCall: false,\n                          typeDescriptions: {\n                            typeIdentifier: \"t_uint256\",\n                            typeString: \"uint256\",\n                          },\n                        },\n                        nodeType: \"BinaryOperation\",\n                        operator: \"+\",\n                        rightExpression: {\n                          id: 43245,\n                          name: \"addedValue\",\n                          nodeType: \"Identifier\",\n                          overloadedDeclarations: [],\n                          referencedDeclaration: 43228,\n                          src: \"6049:10:21\",\n                          typeDescriptions: {\n                            typeIdentifier: \"t_uint256\",\n                            typeString: \"uint256\",\n                          },\n                        },\n                        src: \"6021:38:21\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_uint256\",\n                          typeString: \"uint256\",\n                        },\n                      },\n                    ],\n                    expression: {\n                      argumentTypes: [\n                        {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                        {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                        {\n                          typeIdentifier: \"t_uint256\",\n                          typeString: \"uint256\",\n                        },\n                      ],\n                      id: 43238,\n                      name: \"_approve\",\n                      nodeType: \"Identifier\",\n                      overloadedDeclarations: [],\n                      referencedDeclaration: 43544,\n                      src: \"5996:8:21\",\n                      typeDescriptions: {\n                        typeIdentifier:\n                          \"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$\",\n                        typeString: \"function (address,address,uint256)\",\n                      },\n                    },\n                    id: 43247,\n                    isConstant: false,\n                    isLValue: false,\n                    isPure: false,\n                    kind: \"functionCall\",\n                    lValueRequested: false,\n                    nameLocations: [],\n                    names: [],\n                    nodeType: \"FunctionCall\",\n                    src: \"5996:64:21\",\n                    tryCall: false,\n                    typeDescriptions: {\n                      typeIdentifier: \"t_tuple$__$\",\n                      typeString: \"tuple()\",\n                    },\n                  },\n                  id: 43248,\n                  nodeType: \"ExpressionStatement\",\n                  src: \"5996:64:21\",\n                },\n                {\n                  expression: {\n                    hexValue: \"74727565\",\n                    id: 43249,\n                    isConstant: false,\n                    isLValue: false,\n                    isPure: true,\n                    kind: \"bool\",\n                    lValueRequested: false,\n                    nodeType: \"Literal\",\n                    src: \"6077:4:21\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_bool\",\n                      typeString: \"bool\",\n                    },\n                    value: \"true\",\n                  },\n                  functionReturnParameters: 43232,\n                  id: 43250,\n                  nodeType: \"Return\",\n                  src: \"6070:11:21\",\n                },\n              ],\n            },\n            documentation: {\n              id: 43224,\n              nodeType: \"StructuredDocumentation\",\n              src: \"5465:384:21\",\n              text: \" @dev Atomically increases the allowance granted to `spender` by the caller.\\n This is an alternative to {approve} that can be used as a mitigation for\\n problems described in {IERC20-approve}.\\n Emits an {Approval} event indicating the updated allowance.\\n Requirements:\\n - `spender` cannot be the zero address.\",\n            },\n            functionSelector: \"39509351\",\n            implemented: true,\n            kind: \"function\",\n            modifiers: [],\n            name: \"increaseAllowance\",\n            nameLocation: \"5863:17:21\",\n            parameters: {\n              id: 43229,\n              nodeType: \"ParameterList\",\n              parameters: [\n                {\n                  constant: false,\n                  id: 43226,\n                  mutability: \"mutable\",\n                  name: \"spender\",\n                  nameLocation: \"5889:7:21\",\n                  nodeType: \"VariableDeclaration\",\n                  scope: 43252,\n                  src: \"5881:15:21\",\n                  stateVariable: false,\n                  storageLocation: \"default\",\n                  typeDescriptions: {\n                    typeIdentifier: \"t_address\",\n                    typeString: \"address\",\n                  },\n                  typeName: {\n                    id: 43225,\n                    name: \"address\",\n                    nodeType: \"ElementaryTypeName\",\n                    src: \"5881:7:21\",\n                    stateMutability: \"nonpayable\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_address\",\n                      typeString: \"address\",\n                    },\n                  },\n                  visibility: \"internal\",\n                },\n                {\n                  constant: false,\n                  id: 43228,\n                  mutability: \"mutable\",\n                  name: \"addedValue\",\n                  nameLocation: \"5906:10:21\",\n                  nodeType: \"VariableDeclaration\",\n                  scope: 43252,\n                  src: \"5898:18:21\",\n                  stateVariable: false,\n                  storageLocation: \"default\",\n                  typeDescriptions: {\n                    typeIdentifier: \"t_uint256\",\n                    typeString: \"uint256\",\n                  },\n                  typeName: {\n                    id: 43227,\n                    name: \"uint256\",\n                    nodeType: \"ElementaryTypeName\",\n                    src: \"5898:7:21\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_uint256\",\n                      typeString: \"uint256\",\n                    },\n                  },\n                  visibility: \"internal\",\n                },\n              ],\n              src: \"5880:37:21\",\n            },\n            returnParameters: {\n              id: 43232,\n              nodeType: \"ParameterList\",\n              parameters: [\n                {\n                  constant: false,\n                  id: 43231,\n                  mutability: \"mutable\",\n                  name: \"\",\n                  nameLocation: \"-1:-1:-1\",\n                  nodeType: \"VariableDeclaration\",\n                  scope: 43252,\n                  src: \"5942:4:21\",\n                  stateVariable: false,\n                  storageLocation: \"default\",\n                  typeDescriptions: {\n                    typeIdentifier: \"t_bool\",\n                    typeString: \"bool\",\n                  },\n                  typeName: {\n                    id: 43230,\n                    name: \"bool\",\n                    nodeType: \"ElementaryTypeName\",\n                    src: \"5942:4:21\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_bool\",\n                      typeString: \"bool\",\n                    },\n                  },\n                  visibility: \"internal\",\n                },\n              ],\n              src: \"5941:6:21\",\n            },\n            scope: 43610,\n            stateMutability: \"nonpayable\",\n            virtual: true,\n            visibility: \"public\",\n          },\n          {\n            id: 43293,\n            nodeType: \"FunctionDefinition\",\n            src: \"6575:427:21\",\n            nodes: [],\n            body: {\n              id: 43292,\n              nodeType: \"Block\",\n              src: \"6674:328:21\",\n              nodes: [],\n              statements: [\n                {\n                  assignments: [43263],\n                  declarations: [\n                    {\n                      constant: false,\n                      id: 43263,\n                      mutability: \"mutable\",\n                      name: \"owner\",\n                      nameLocation: \"6692:5:21\",\n                      nodeType: \"VariableDeclaration\",\n                      scope: 43292,\n                      src: \"6684:13:21\",\n                      stateVariable: false,\n                      storageLocation: \"default\",\n                      typeDescriptions: {\n                        typeIdentifier: \"t_address\",\n                        typeString: \"address\",\n                      },\n                      typeName: {\n                        id: 43262,\n                        name: \"address\",\n                        nodeType: \"ElementaryTypeName\",\n                        src: \"6684:7:21\",\n                        stateMutability: \"nonpayable\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                      },\n                      visibility: \"internal\",\n                    },\n                  ],\n                  id: 43266,\n                  initialValue: {\n                    arguments: [],\n                    expression: {\n                      argumentTypes: [],\n                      id: 43264,\n                      name: \"_msgSender\",\n                      nodeType: \"Identifier\",\n                      overloadedDeclarations: [],\n                      referencedDeclaration: 45387,\n                      src: \"6700:10:21\",\n                      typeDescriptions: {\n                        typeIdentifier:\n                          \"t_function_internal_view$__$returns$_t_address_$\",\n                        typeString: \"function () view returns (address)\",\n                      },\n                    },\n                    id: 43265,\n                    isConstant: false,\n                    isLValue: false,\n                    isPure: false,\n                    kind: \"functionCall\",\n                    lValueRequested: false,\n                    nameLocations: [],\n                    names: [],\n                    nodeType: \"FunctionCall\",\n                    src: \"6700:12:21\",\n                    tryCall: false,\n                    typeDescriptions: {\n                      typeIdentifier: \"t_address\",\n                      typeString: \"address\",\n                    },\n                  },\n                  nodeType: \"VariableDeclarationStatement\",\n                  src: \"6684:28:21\",\n                },\n                {\n                  assignments: [43268],\n                  declarations: [\n                    {\n                      constant: false,\n                      id: 43268,\n                      mutability: \"mutable\",\n                      name: \"currentAllowance\",\n                      nameLocation: \"6730:16:21\",\n                      nodeType: \"VariableDeclaration\",\n                      scope: 43292,\n                      src: \"6722:24:21\",\n                      stateVariable: false,\n                      storageLocation: \"default\",\n                      typeDescriptions: {\n                        typeIdentifier: \"t_uint256\",\n                        typeString: \"uint256\",\n                      },\n                      typeName: {\n                        id: 43267,\n                        name: \"uint256\",\n                        nodeType: \"ElementaryTypeName\",\n                        src: \"6722:7:21\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_uint256\",\n                          typeString: \"uint256\",\n                        },\n                      },\n                      visibility: \"internal\",\n                    },\n                  ],\n                  id: 43273,\n                  initialValue: {\n                    arguments: [\n                      {\n                        id: 43270,\n                        name: \"owner\",\n                        nodeType: \"Identifier\",\n                        overloadedDeclarations: [],\n                        referencedDeclaration: 43263,\n                        src: \"6759:5:21\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                      },\n                      {\n                        id: 43271,\n                        name: \"spender\",\n                        nodeType: \"Identifier\",\n                        overloadedDeclarations: [],\n                        referencedDeclaration: 43255,\n                        src: \"6766:7:21\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                      },\n                    ],\n                    expression: {\n                      argumentTypes: [\n                        {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                        {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                      ],\n                      id: 43269,\n                      name: \"allowance\",\n                      nodeType: \"Identifier\",\n                      overloadedDeclarations: [],\n                      referencedDeclaration: 43165,\n                      src: \"6749:9:21\",\n                      typeDescriptions: {\n                        typeIdentifier:\n                          \"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$\",\n                        typeString:\n                          \"function (address,address) view returns (uint256)\",\n                      },\n                    },\n                    id: 43272,\n                    isConstant: false,\n                    isLValue: false,\n                    isPure: false,\n                    kind: \"functionCall\",\n                    lValueRequested: false,\n                    nameLocations: [],\n                    names: [],\n                    nodeType: \"FunctionCall\",\n                    src: \"6749:25:21\",\n                    tryCall: false,\n                    typeDescriptions: {\n                      typeIdentifier: \"t_uint256\",\n                      typeString: \"uint256\",\n                    },\n                  },\n                  nodeType: \"VariableDeclarationStatement\",\n                  src: \"6722:52:21\",\n                },\n                {\n                  expression: {\n                    arguments: [\n                      {\n                        commonType: {\n                          typeIdentifier: \"t_uint256\",\n                          typeString: \"uint256\",\n                        },\n                        id: 43277,\n                        isConstant: false,\n                        isLValue: false,\n                        isPure: false,\n                        lValueRequested: false,\n                        leftExpression: {\n                          id: 43275,\n                          name: \"currentAllowance\",\n                          nodeType: \"Identifier\",\n                          overloadedDeclarations: [],\n                          referencedDeclaration: 43268,\n                          src: \"6792:16:21\",\n                          typeDescriptions: {\n                            typeIdentifier: \"t_uint256\",\n                            typeString: \"uint256\",\n                          },\n                        },\n                        nodeType: \"BinaryOperation\",\n                        operator: \">=\",\n                        rightExpression: {\n                          id: 43276,\n                          name: \"subtractedValue\",\n                          nodeType: \"Identifier\",\n                          overloadedDeclarations: [],\n                          referencedDeclaration: 43257,\n                          src: \"6812:15:21\",\n                          typeDescriptions: {\n                            typeIdentifier: \"t_uint256\",\n                            typeString: \"uint256\",\n                          },\n                        },\n                        src: \"6792:35:21\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_bool\",\n                          typeString: \"bool\",\n                        },\n                      },\n                      {\n                        hexValue:\n                          \"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\",\n                        id: 43278,\n                        isConstant: false,\n                        isLValue: false,\n                        isPure: true,\n                        kind: \"string\",\n                        lValueRequested: false,\n                        nodeType: \"Literal\",\n                        src: \"6829:39:21\",\n                        typeDescriptions: {\n                          typeIdentifier:\n                            \"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8\",\n                          typeString:\n                            'literal_string \"ERC20: decreased allowance below zero\"',\n                        },\n                        value: \"ERC20: decreased allowance below zero\",\n                      },\n                    ],\n                    expression: {\n                      argumentTypes: [\n                        {\n                          typeIdentifier: \"t_bool\",\n                          typeString: \"bool\",\n                        },\n                        {\n                          typeIdentifier:\n                            \"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8\",\n                          typeString:\n                            'literal_string \"ERC20: decreased allowance below zero\"',\n                        },\n                      ],\n                      id: 43274,\n                      name: \"require\",\n                      nodeType: \"Identifier\",\n                      overloadedDeclarations: [-18, -18],\n                      referencedDeclaration: -18,\n                      src: \"6784:7:21\",\n                      typeDescriptions: {\n                        typeIdentifier:\n                          \"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$\",\n                        typeString: \"function (bool,string memory) pure\",\n                      },\n                    },\n                    id: 43279,\n                    isConstant: false,\n                    isLValue: false,\n                    isPure: false,\n                    kind: \"functionCall\",\n                    lValueRequested: false,\n                    nameLocations: [],\n                    names: [],\n                    nodeType: \"FunctionCall\",\n                    src: \"6784:85:21\",\n                    tryCall: false,\n                    typeDescriptions: {\n                      typeIdentifier: \"t_tuple$__$\",\n                      typeString: \"tuple()\",\n                    },\n                  },\n                  id: 43280,\n                  nodeType: \"ExpressionStatement\",\n                  src: \"6784:85:21\",\n                },\n                {\n                  id: 43289,\n                  nodeType: \"UncheckedBlock\",\n                  src: \"6879:95:21\",\n                  statements: [\n                    {\n                      expression: {\n                        arguments: [\n                          {\n                            id: 43282,\n                            name: \"owner\",\n                            nodeType: \"Identifier\",\n                            overloadedDeclarations: [],\n                            referencedDeclaration: 43263,\n                            src: \"6912:5:21\",\n                            typeDescriptions: {\n                              typeIdentifier: \"t_address\",\n                              typeString: \"address\",\n                            },\n                          },\n                          {\n                            id: 43283,\n                            name: \"spender\",\n                            nodeType: \"Identifier\",\n                            overloadedDeclarations: [],\n                            referencedDeclaration: 43255,\n                            src: \"6919:7:21\",\n                            typeDescriptions: {\n                              typeIdentifier: \"t_address\",\n                              typeString: \"address\",\n                            },\n                          },\n                          {\n                            commonType: {\n                              typeIdentifier: \"t_uint256\",\n                              typeString: \"uint256\",\n                            },\n                            id: 43286,\n                            isConstant: false,\n                            isLValue: false,\n                            isPure: false,\n                            lValueRequested: false,\n                            leftExpression: {\n                              id: 43284,\n                              name: \"currentAllowance\",\n                              nodeType: \"Identifier\",\n                              overloadedDeclarations: [],\n                              referencedDeclaration: 43268,\n                              src: \"6928:16:21\",\n                              typeDescriptions: {\n                                typeIdentifier: \"t_uint256\",\n                                typeString: \"uint256\",\n                              },\n                            },\n                            nodeType: \"BinaryOperation\",\n                            operator: \"-\",\n                            rightExpression: {\n                              id: 43285,\n                              name: \"subtractedValue\",\n                              nodeType: \"Identifier\",\n                              overloadedDeclarations: [],\n                              referencedDeclaration: 43257,\n                              src: \"6947:15:21\",\n                              typeDescriptions: {\n                                typeIdentifier: \"t_uint256\",\n                                typeString: \"uint256\",\n                              },\n                            },\n                            src: \"6928:34:21\",\n                            typeDescriptions: {\n                              typeIdentifier: \"t_uint256\",\n                              typeString: \"uint256\",\n                            },\n                          },\n                        ],\n                        expression: {\n                          argumentTypes: [\n                            {\n                              typeIdentifier: \"t_address\",\n                              typeString: \"address\",\n                            },\n                            {\n                              typeIdentifier: \"t_address\",\n                              typeString: \"address\",\n                            },\n                            {\n                              typeIdentifier: \"t_uint256\",\n                              typeString: \"uint256\",\n                            },\n                          ],\n                          id: 43281,\n                          name: \"_approve\",\n                          nodeType: \"Identifier\",\n                          overloadedDeclarations: [],\n                          referencedDeclaration: 43544,\n                          src: \"6903:8:21\",\n                          typeDescriptions: {\n                            typeIdentifier:\n                              \"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$\",\n                            typeString: \"function (address,address,uint256)\",\n                          },\n                        },\n                        id: 43287,\n                        isConstant: false,\n                        isLValue: false,\n                        isPure: false,\n                        kind: \"functionCall\",\n                        lValueRequested: false,\n                        nameLocations: [],\n                        names: [],\n                        nodeType: \"FunctionCall\",\n                        src: \"6903:60:21\",\n                        tryCall: false,\n                        typeDescriptions: {\n                          typeIdentifier: \"t_tuple$__$\",\n                          typeString: \"tuple()\",\n                        },\n                      },\n                      id: 43288,\n                      nodeType: \"ExpressionStatement\",\n                      src: \"6903:60:21\",\n                    },\n                  ],\n                },\n                {\n                  expression: {\n                    hexValue: \"74727565\",\n                    id: 43290,\n                    isConstant: false,\n                    isLValue: false,\n                    isPure: true,\n                    kind: \"bool\",\n                    lValueRequested: false,\n                    nodeType: \"Literal\",\n                    src: \"6991:4:21\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_bool\",\n                      typeString: \"bool\",\n                    },\n                    value: \"true\",\n                  },\n                  functionReturnParameters: 43261,\n                  id: 43291,\n                  nodeType: \"Return\",\n                  src: \"6984:11:21\",\n                },\n              ],\n            },\n            documentation: {\n              id: 43253,\n              nodeType: \"StructuredDocumentation\",\n              src: \"6094:476:21\",\n              text: \" @dev Atomically decreases the allowance granted to `spender` by the caller.\\n This is an alternative to {approve} that can be used as a mitigation for\\n problems described in {IERC20-approve}.\\n Emits an {Approval} event indicating the updated allowance.\\n Requirements:\\n - `spender` cannot be the zero address.\\n - `spender` must have allowance for the caller of at least\\n `subtractedValue`.\",\n            },\n            functionSelector: \"a457c2d7\",\n            implemented: true,\n            kind: \"function\",\n            modifiers: [],\n            name: \"decreaseAllowance\",\n            nameLocation: \"6584:17:21\",\n            parameters: {\n              id: 43258,\n              nodeType: \"ParameterList\",\n              parameters: [\n                {\n                  constant: false,\n                  id: 43255,\n                  mutability: \"mutable\",\n                  name: \"spender\",\n                  nameLocation: \"6610:7:21\",\n                  nodeType: \"VariableDeclaration\",\n                  scope: 43293,\n                  src: \"6602:15:21\",\n                  stateVariable: false,\n                  storageLocation: \"default\",\n                  typeDescriptions: {\n                    typeIdentifier: \"t_address\",\n                    typeString: \"address\",\n                  },\n                  typeName: {\n                    id: 43254,\n                    name: \"address\",\n                    nodeType: \"ElementaryTypeName\",\n                    src: \"6602:7:21\",\n                    stateMutability: \"nonpayable\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_address\",\n                      typeString: \"address\",\n                    },\n                  },\n                  visibility: \"internal\",\n                },\n                {\n                  constant: false,\n                  id: 43257,\n                  mutability: \"mutable\",\n                  name: \"subtractedValue\",\n                  nameLocation: \"6627:15:21\",\n                  nodeType: \"VariableDeclaration\",\n                  scope: 43293,\n                  src: \"6619:23:21\",\n                  stateVariable: false,\n                  storageLocation: \"default\",\n                  typeDescriptions: {\n                    typeIdentifier: \"t_uint256\",\n                    typeString: \"uint256\",\n                  },\n                  typeName: {\n                    id: 43256,\n                    name: \"uint256\",\n                    nodeType: \"ElementaryTypeName\",\n                    src: \"6619:7:21\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_uint256\",\n                      typeString: \"uint256\",\n                    },\n                  },\n                  visibility: \"internal\",\n                },\n              ],\n              src: \"6601:42:21\",\n            },\n            returnParameters: {\n              id: 43261,\n              nodeType: \"ParameterList\",\n              parameters: [\n                {\n                  constant: false,\n                  id: 43260,\n                  mutability: \"mutable\",\n                  name: \"\",\n                  nameLocation: \"-1:-1:-1\",\n                  nodeType: \"VariableDeclaration\",\n                  scope: 43293,\n                  src: \"6668:4:21\",\n                  stateVariable: false,\n                  storageLocation: \"default\",\n                  typeDescriptions: {\n                    typeIdentifier: \"t_bool\",\n                    typeString: \"bool\",\n                  },\n                  typeName: {\n                    id: 43259,\n                    name: \"bool\",\n                    nodeType: \"ElementaryTypeName\",\n                    src: \"6668:4:21\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_bool\",\n                      typeString: \"bool\",\n                    },\n                  },\n                  visibility: \"internal\",\n                },\n              ],\n              src: \"6667:6:21\",\n            },\n            scope: 43610,\n            stateMutability: \"nonpayable\",\n            virtual: true,\n            visibility: \"public\",\n          },\n          {\n            id: 43370,\n            nodeType: \"FunctionDefinition\",\n            src: \"7456:788:21\",\n            nodes: [],\n            body: {\n              id: 43369,\n              nodeType: \"Block\",\n              src: \"7534:710:21\",\n              nodes: [],\n              statements: [\n                {\n                  expression: {\n                    arguments: [\n                      {\n                        commonType: {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                        id: 43309,\n                        isConstant: false,\n                        isLValue: false,\n                        isPure: false,\n                        lValueRequested: false,\n                        leftExpression: {\n                          id: 43304,\n                          name: \"from\",\n                          nodeType: \"Identifier\",\n                          overloadedDeclarations: [],\n                          referencedDeclaration: 43296,\n                          src: \"7552:4:21\",\n                          typeDescriptions: {\n                            typeIdentifier: \"t_address\",\n                            typeString: \"address\",\n                          },\n                        },\n                        nodeType: \"BinaryOperation\",\n                        operator: \"!=\",\n                        rightExpression: {\n                          arguments: [\n                            {\n                              hexValue: \"30\",\n                              id: 43307,\n                              isConstant: false,\n                              isLValue: false,\n                              isPure: true,\n                              kind: \"number\",\n                              lValueRequested: false,\n                              nodeType: \"Literal\",\n                              src: \"7568:1:21\",\n                              typeDescriptions: {\n                                typeIdentifier: \"t_rational_0_by_1\",\n                                typeString: \"int_const 0\",\n                              },\n                              value: \"0\",\n                            },\n                          ],\n                          expression: {\n                            argumentTypes: [\n                              {\n                                typeIdentifier: \"t_rational_0_by_1\",\n                                typeString: \"int_const 0\",\n                              },\n                            ],\n                            id: 43306,\n                            isConstant: false,\n                            isLValue: false,\n                            isPure: true,\n                            lValueRequested: false,\n                            nodeType: \"ElementaryTypeNameExpression\",\n                            src: \"7560:7:21\",\n                            typeDescriptions: {\n                              typeIdentifier: \"t_type$_t_address_$\",\n                              typeString: \"type(address)\",\n                            },\n                            typeName: {\n                              id: 43305,\n                              name: \"address\",\n                              nodeType: \"ElementaryTypeName\",\n                              src: \"7560:7:21\",\n                              typeDescriptions: {},\n                            },\n                          },\n                          id: 43308,\n                          isConstant: false,\n                          isLValue: false,\n                          isPure: true,\n                          kind: \"typeConversion\",\n                          lValueRequested: false,\n                          nameLocations: [],\n                          names: [],\n                          nodeType: \"FunctionCall\",\n                          src: \"7560:10:21\",\n                          tryCall: false,\n                          typeDescriptions: {\n                            typeIdentifier: \"t_address\",\n                            typeString: \"address\",\n                          },\n                        },\n                        src: \"7552:18:21\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_bool\",\n                          typeString: \"bool\",\n                        },\n                      },\n                      {\n                        hexValue:\n                          \"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373\",\n                        id: 43310,\n                        isConstant: false,\n                        isLValue: false,\n                        isPure: true,\n                        kind: \"string\",\n                        lValueRequested: false,\n                        nodeType: \"Literal\",\n                        src: \"7572:39:21\",\n                        typeDescriptions: {\n                          typeIdentifier:\n                            \"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea\",\n                          typeString:\n                            'literal_string \"ERC20: transfer from the zero address\"',\n                        },\n                        value: \"ERC20: transfer from the zero address\",\n                      },\n                    ],\n                    expression: {\n                      argumentTypes: [\n                        {\n                          typeIdentifier: \"t_bool\",\n                          typeString: \"bool\",\n                        },\n                        {\n                          typeIdentifier:\n                            \"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea\",\n                          typeString:\n                            'literal_string \"ERC20: transfer from the zero address\"',\n                        },\n                      ],\n                      id: 43303,\n                      name: \"require\",\n                      nodeType: \"Identifier\",\n                      overloadedDeclarations: [-18, -18],\n                      referencedDeclaration: -18,\n                      src: \"7544:7:21\",\n                      typeDescriptions: {\n                        typeIdentifier:\n                          \"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$\",\n                        typeString: \"function (bool,string memory) pure\",\n                      },\n                    },\n                    id: 43311,\n                    isConstant: false,\n                    isLValue: false,\n                    isPure: false,\n                    kind: \"functionCall\",\n                    lValueRequested: false,\n                    nameLocations: [],\n                    names: [],\n                    nodeType: \"FunctionCall\",\n                    src: \"7544:68:21\",\n                    tryCall: false,\n                    typeDescriptions: {\n                      typeIdentifier: \"t_tuple$__$\",\n                      typeString: \"tuple()\",\n                    },\n                  },\n                  id: 43312,\n                  nodeType: \"ExpressionStatement\",\n                  src: \"7544:68:21\",\n                },\n                {\n                  expression: {\n                    arguments: [\n                      {\n                        commonType: {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                        id: 43319,\n                        isConstant: false,\n                        isLValue: false,\n                        isPure: false,\n                        lValueRequested: false,\n                        leftExpression: {\n                          id: 43314,\n                          name: \"to\",\n                          nodeType: \"Identifier\",\n                          overloadedDeclarations: [],\n                          referencedDeclaration: 43298,\n                          src: \"7630:2:21\",\n                          typeDescriptions: {\n                            typeIdentifier: \"t_address\",\n                            typeString: \"address\",\n                          },\n                        },\n                        nodeType: \"BinaryOperation\",\n                        operator: \"!=\",\n                        rightExpression: {\n                          arguments: [\n                            {\n                              hexValue: \"30\",\n                              id: 43317,\n                              isConstant: false,\n                              isLValue: false,\n                              isPure: true,\n                              kind: \"number\",\n                              lValueRequested: false,\n                              nodeType: \"Literal\",\n                              src: \"7644:1:21\",\n                              typeDescriptions: {\n                                typeIdentifier: \"t_rational_0_by_1\",\n                                typeString: \"int_const 0\",\n                              },\n                              value: \"0\",\n                            },\n                          ],\n                          expression: {\n                            argumentTypes: [\n                              {\n                                typeIdentifier: \"t_rational_0_by_1\",\n                                typeString: \"int_const 0\",\n                              },\n                            ],\n                            id: 43316,\n                            isConstant: false,\n                            isLValue: false,\n                            isPure: true,\n                            lValueRequested: false,\n                            nodeType: \"ElementaryTypeNameExpression\",\n                            src: \"7636:7:21\",\n                            typeDescriptions: {\n                              typeIdentifier: \"t_type$_t_address_$\",\n                              typeString: \"type(address)\",\n                            },\n                            typeName: {\n                              id: 43315,\n                              name: \"address\",\n                              nodeType: \"ElementaryTypeName\",\n                              src: \"7636:7:21\",\n                              typeDescriptions: {},\n                            },\n                          },\n                          id: 43318,\n                          isConstant: false,\n                          isLValue: false,\n                          isPure: true,\n                          kind: \"typeConversion\",\n                          lValueRequested: false,\n                          nameLocations: [],\n                          names: [],\n                          nodeType: \"FunctionCall\",\n                          src: \"7636:10:21\",\n                          tryCall: false,\n                          typeDescriptions: {\n                            typeIdentifier: \"t_address\",\n                            typeString: \"address\",\n                          },\n                        },\n                        src: \"7630:16:21\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_bool\",\n                          typeString: \"bool\",\n                        },\n                      },\n                      {\n                        hexValue:\n                          \"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373\",\n                        id: 43320,\n                        isConstant: false,\n                        isLValue: false,\n                        isPure: true,\n                        kind: \"string\",\n                        lValueRequested: false,\n                        nodeType: \"Literal\",\n                        src: \"7648:37:21\",\n                        typeDescriptions: {\n                          typeIdentifier:\n                            \"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f\",\n                          typeString:\n                            'literal_string \"ERC20: transfer to the zero address\"',\n                        },\n                        value: \"ERC20: transfer to the zero address\",\n                      },\n                    ],\n                    expression: {\n                      argumentTypes: [\n                        {\n                          typeIdentifier: \"t_bool\",\n                          typeString: \"bool\",\n                        },\n                        {\n                          typeIdentifier:\n                            \"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f\",\n                          typeString:\n                            'literal_string \"ERC20: transfer to the zero address\"',\n                        },\n                      ],\n                      id: 43313,\n                      name: \"require\",\n                      nodeType: \"Identifier\",\n                      overloadedDeclarations: [-18, -18],\n                      referencedDeclaration: -18,\n                      src: \"7622:7:21\",\n                      typeDescriptions: {\n                        typeIdentifier:\n                          \"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$\",\n                        typeString: \"function (bool,string memory) pure\",\n                      },\n                    },\n                    id: 43321,\n                    isConstant: false,\n                    isLValue: false,\n                    isPure: false,\n                    kind: \"functionCall\",\n                    lValueRequested: false,\n                    nameLocations: [],\n                    names: [],\n                    nodeType: \"FunctionCall\",\n                    src: \"7622:64:21\",\n                    tryCall: false,\n                    typeDescriptions: {\n                      typeIdentifier: \"t_tuple$__$\",\n                      typeString: \"tuple()\",\n                    },\n                  },\n                  id: 43322,\n                  nodeType: \"ExpressionStatement\",\n                  src: \"7622:64:21\",\n                },\n                {\n                  expression: {\n                    arguments: [\n                      {\n                        id: 43324,\n                        name: \"from\",\n                        nodeType: \"Identifier\",\n                        overloadedDeclarations: [],\n                        referencedDeclaration: 43296,\n                        src: \"7718:4:21\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                      },\n                      {\n                        id: 43325,\n                        name: \"to\",\n                        nodeType: \"Identifier\",\n                        overloadedDeclarations: [],\n                        referencedDeclaration: 43298,\n                        src: \"7724:2:21\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                      },\n                      {\n                        id: 43326,\n                        name: \"amount\",\n                        nodeType: \"Identifier\",\n                        overloadedDeclarations: [],\n                        referencedDeclaration: 43300,\n                        src: \"7728:6:21\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_uint256\",\n                          typeString: \"uint256\",\n                        },\n                      },\n                    ],\n                    expression: {\n                      argumentTypes: [\n                        {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                        {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                        {\n                          typeIdentifier: \"t_uint256\",\n                          typeString: \"uint256\",\n                        },\n                      ],\n                      id: 43323,\n                      name: \"_beforeTokenTransfer\",\n                      nodeType: \"Identifier\",\n                      overloadedDeclarations: [],\n                      referencedDeclaration: 43598,\n                      src: \"7697:20:21\",\n                      typeDescriptions: {\n                        typeIdentifier:\n                          \"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$\",\n                        typeString: \"function (address,address,uint256)\",\n                      },\n                    },\n                    id: 43327,\n                    isConstant: false,\n                    isLValue: false,\n                    isPure: false,\n                    kind: \"functionCall\",\n                    lValueRequested: false,\n                    nameLocations: [],\n                    names: [],\n                    nodeType: \"FunctionCall\",\n                    src: \"7697:38:21\",\n                    tryCall: false,\n                    typeDescriptions: {\n                      typeIdentifier: \"t_tuple$__$\",\n                      typeString: \"tuple()\",\n                    },\n                  },\n                  id: 43328,\n                  nodeType: \"ExpressionStatement\",\n                  src: \"7697:38:21\",\n                },\n                {\n                  assignments: [43330],\n                  declarations: [\n                    {\n                      constant: false,\n                      id: 43330,\n                      mutability: \"mutable\",\n                      name: \"fromBalance\",\n                      nameLocation: \"7754:11:21\",\n                      nodeType: \"VariableDeclaration\",\n                      scope: 43369,\n                      src: \"7746:19:21\",\n                      stateVariable: false,\n                      storageLocation: \"default\",\n                      typeDescriptions: {\n                        typeIdentifier: \"t_uint256\",\n                        typeString: \"uint256\",\n                      },\n                      typeName: {\n                        id: 43329,\n                        name: \"uint256\",\n                        nodeType: \"ElementaryTypeName\",\n                        src: \"7746:7:21\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_uint256\",\n                          typeString: \"uint256\",\n                        },\n                      },\n                      visibility: \"internal\",\n                    },\n                  ],\n                  id: 43334,\n                  initialValue: {\n                    baseExpression: {\n                      id: 43331,\n                      name: \"_balances\",\n                      nodeType: \"Identifier\",\n                      overloadedDeclarations: [],\n                      referencedDeclaration: 43039,\n                      src: \"7768:9:21\",\n                      typeDescriptions: {\n                        typeIdentifier: \"t_mapping$_t_address_$_t_uint256_$\",\n                        typeString: \"mapping(address => uint256)\",\n                      },\n                    },\n                    id: 43333,\n                    indexExpression: {\n                      id: 43332,\n                      name: \"from\",\n                      nodeType: \"Identifier\",\n                      overloadedDeclarations: [],\n                      referencedDeclaration: 43296,\n                      src: \"7778:4:21\",\n                      typeDescriptions: {\n                        typeIdentifier: \"t_address\",\n                        typeString: \"address\",\n                      },\n                    },\n                    isConstant: false,\n                    isLValue: true,\n                    isPure: false,\n                    lValueRequested: false,\n                    nodeType: \"IndexAccess\",\n                    src: \"7768:15:21\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_uint256\",\n                      typeString: \"uint256\",\n                    },\n                  },\n                  nodeType: \"VariableDeclarationStatement\",\n                  src: \"7746:37:21\",\n                },\n                {\n                  expression: {\n                    arguments: [\n                      {\n                        commonType: {\n                          typeIdentifier: \"t_uint256\",\n                          typeString: \"uint256\",\n                        },\n                        id: 43338,\n                        isConstant: false,\n                        isLValue: false,\n                        isPure: false,\n                        lValueRequested: false,\n                        leftExpression: {\n                          id: 43336,\n                          name: \"fromBalance\",\n                          nodeType: \"Identifier\",\n                          overloadedDeclarations: [],\n                          referencedDeclaration: 43330,\n                          src: \"7801:11:21\",\n                          typeDescriptions: {\n                            typeIdentifier: \"t_uint256\",\n                            typeString: \"uint256\",\n                          },\n                        },\n                        nodeType: \"BinaryOperation\",\n                        operator: \">=\",\n                        rightExpression: {\n                          id: 43337,\n                          name: \"amount\",\n                          nodeType: \"Identifier\",\n                          overloadedDeclarations: [],\n                          referencedDeclaration: 43300,\n                          src: \"7816:6:21\",\n                          typeDescriptions: {\n                            typeIdentifier: \"t_uint256\",\n                            typeString: \"uint256\",\n                          },\n                        },\n                        src: \"7801:21:21\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_bool\",\n                          typeString: \"bool\",\n                        },\n                      },\n                      {\n                        hexValue:\n                          \"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\",\n                        id: 43339,\n                        isConstant: false,\n                        isLValue: false,\n                        isPure: true,\n                        kind: \"string\",\n                        lValueRequested: false,\n                        nodeType: \"Literal\",\n                        src: \"7824:40:21\",\n                        typeDescriptions: {\n                          typeIdentifier:\n                            \"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6\",\n                          typeString:\n                            'literal_string \"ERC20: transfer amount exceeds balance\"',\n                        },\n                        value: \"ERC20: transfer amount exceeds balance\",\n                      },\n                    ],\n                    expression: {\n                      argumentTypes: [\n                        {\n                          typeIdentifier: \"t_bool\",\n                          typeString: \"bool\",\n                        },\n                        {\n                          typeIdentifier:\n                            \"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6\",\n                          typeString:\n                            'literal_string \"ERC20: transfer amount exceeds balance\"',\n                        },\n                      ],\n                      id: 43335,\n                      name: \"require\",\n                      nodeType: \"Identifier\",\n                      overloadedDeclarations: [-18, -18],\n                      referencedDeclaration: -18,\n                      src: \"7793:7:21\",\n                      typeDescriptions: {\n                        typeIdentifier:\n                          \"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$\",\n                        typeString: \"function (bool,string memory) pure\",\n                      },\n                    },\n                    id: 43340,\n                    isConstant: false,\n                    isLValue: false,\n                    isPure: false,\n                    kind: \"functionCall\",\n                    lValueRequested: false,\n                    nameLocations: [],\n                    names: [],\n                    nodeType: \"FunctionCall\",\n                    src: \"7793:72:21\",\n                    tryCall: false,\n                    typeDescriptions: {\n                      typeIdentifier: \"t_tuple$__$\",\n                      typeString: \"tuple()\",\n                    },\n                  },\n                  id: 43341,\n                  nodeType: \"ExpressionStatement\",\n                  src: \"7793:72:21\",\n                },\n                {\n                  id: 43356,\n                  nodeType: \"UncheckedBlock\",\n                  src: \"7875:273:21\",\n                  statements: [\n                    {\n                      expression: {\n                        id: 43348,\n                        isConstant: false,\n                        isLValue: false,\n                        isPure: false,\n                        lValueRequested: false,\n                        leftHandSide: {\n                          baseExpression: {\n                            id: 43342,\n                            name: \"_balances\",\n                            nodeType: \"Identifier\",\n                            overloadedDeclarations: [],\n                            referencedDeclaration: 43039,\n                            src: \"7899:9:21\",\n                            typeDescriptions: {\n                              typeIdentifier:\n                                \"t_mapping$_t_address_$_t_uint256_$\",\n                              typeString: \"mapping(address => uint256)\",\n                            },\n                          },\n                          id: 43344,\n                          indexExpression: {\n                            id: 43343,\n                            name: \"from\",\n                            nodeType: \"Identifier\",\n                            overloadedDeclarations: [],\n                            referencedDeclaration: 43296,\n                            src: \"7909:4:21\",\n                            typeDescriptions: {\n                              typeIdentifier: \"t_address\",\n                              typeString: \"address\",\n                            },\n                          },\n                          isConstant: false,\n                          isLValue: true,\n                          isPure: false,\n                          lValueRequested: true,\n                          nodeType: \"IndexAccess\",\n                          src: \"7899:15:21\",\n                          typeDescriptions: {\n                            typeIdentifier: \"t_uint256\",\n                            typeString: \"uint256\",\n                          },\n                        },\n                        nodeType: \"Assignment\",\n                        operator: \"=\",\n                        rightHandSide: {\n                          commonType: {\n                            typeIdentifier: \"t_uint256\",\n                            typeString: \"uint256\",\n                          },\n                          id: 43347,\n                          isConstant: false,\n                          isLValue: false,\n                          isPure: false,\n                          lValueRequested: false,\n                          leftExpression: {\n                            id: 43345,\n                            name: \"fromBalance\",\n                            nodeType: \"Identifier\",\n                            overloadedDeclarations: [],\n                            referencedDeclaration: 43330,\n                            src: \"7917:11:21\",\n                            typeDescriptions: {\n                              typeIdentifier: \"t_uint256\",\n                              typeString: \"uint256\",\n                            },\n                          },\n                          nodeType: \"BinaryOperation\",\n                          operator: \"-\",\n                          rightExpression: {\n                            id: 43346,\n                            name: \"amount\",\n                            nodeType: \"Identifier\",\n                            overloadedDeclarations: [],\n                            referencedDeclaration: 43300,\n                            src: \"7931:6:21\",\n                            typeDescriptions: {\n                              typeIdentifier: \"t_uint256\",\n                              typeString: \"uint256\",\n                            },\n                          },\n                          src: \"7917:20:21\",\n                          typeDescriptions: {\n                            typeIdentifier: \"t_uint256\",\n                            typeString: \"uint256\",\n                          },\n                        },\n                        src: \"7899:38:21\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_uint256\",\n                          typeString: \"uint256\",\n                        },\n                      },\n                      id: 43349,\n                      nodeType: \"ExpressionStatement\",\n                      src: \"7899:38:21\",\n                    },\n                    {\n                      expression: {\n                        id: 43354,\n                        isConstant: false,\n                        isLValue: false,\n                        isPure: false,\n                        lValueRequested: false,\n                        leftHandSide: {\n                          baseExpression: {\n                            id: 43350,\n                            name: \"_balances\",\n                            nodeType: \"Identifier\",\n                            overloadedDeclarations: [],\n                            referencedDeclaration: 43039,\n                            src: \"8114:9:21\",\n                            typeDescriptions: {\n                              typeIdentifier:\n                                \"t_mapping$_t_address_$_t_uint256_$\",\n                              typeString: \"mapping(address => uint256)\",\n                            },\n                          },\n                          id: 43352,\n                          indexExpression: {\n                            id: 43351,\n                            name: \"to\",\n                            nodeType: \"Identifier\",\n                            overloadedDeclarations: [],\n                            referencedDeclaration: 43298,\n                            src: \"8124:2:21\",\n                            typeDescriptions: {\n                              typeIdentifier: \"t_address\",\n                              typeString: \"address\",\n                            },\n                          },\n                          isConstant: false,\n                          isLValue: true,\n                          isPure: false,\n                          lValueRequested: true,\n                          nodeType: \"IndexAccess\",\n                          src: \"8114:13:21\",\n                          typeDescriptions: {\n                            typeIdentifier: \"t_uint256\",\n                            typeString: \"uint256\",\n                          },\n                        },\n                        nodeType: \"Assignment\",\n                        operator: \"+=\",\n                        rightHandSide: {\n                          id: 43353,\n                          name: \"amount\",\n                          nodeType: \"Identifier\",\n                          overloadedDeclarations: [],\n                          referencedDeclaration: 43300,\n                          src: \"8131:6:21\",\n                          typeDescriptions: {\n                            typeIdentifier: \"t_uint256\",\n                            typeString: \"uint256\",\n                          },\n                        },\n                        src: \"8114:23:21\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_uint256\",\n                          typeString: \"uint256\",\n                        },\n                      },\n                      id: 43355,\n                      nodeType: \"ExpressionStatement\",\n                      src: \"8114:23:21\",\n                    },\n                  ],\n                },\n                {\n                  eventCall: {\n                    arguments: [\n                      {\n                        id: 43358,\n                        name: \"from\",\n                        nodeType: \"Identifier\",\n                        overloadedDeclarations: [],\n                        referencedDeclaration: 43296,\n                        src: \"8172:4:21\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                      },\n                      {\n                        id: 43359,\n                        name: \"to\",\n                        nodeType: \"Identifier\",\n                        overloadedDeclarations: [],\n                        referencedDeclaration: 43298,\n                        src: \"8178:2:21\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                      },\n                      {\n                        id: 43360,\n                        name: \"amount\",\n                        nodeType: \"Identifier\",\n                        overloadedDeclarations: [],\n                        referencedDeclaration: 43300,\n                        src: \"8182:6:21\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_uint256\",\n                          typeString: \"uint256\",\n                        },\n                      },\n                    ],\n                    expression: {\n                      argumentTypes: [\n                        {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                        {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                        {\n                          typeIdentifier: \"t_uint256\",\n                          typeString: \"uint256\",\n                        },\n                      ],\n                      id: 43357,\n                      name: \"Transfer\",\n                      nodeType: \"Identifier\",\n                      overloadedDeclarations: [],\n                      referencedDeclaration: 43622,\n                      src: \"8163:8:21\",\n                      typeDescriptions: {\n                        typeIdentifier:\n                          \"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$\",\n                        typeString: \"function (address,address,uint256)\",\n                      },\n                    },\n                    id: 43361,\n                    isConstant: false,\n                    isLValue: false,\n                    isPure: false,\n                    kind: \"functionCall\",\n                    lValueRequested: false,\n                    nameLocations: [],\n                    names: [],\n                    nodeType: \"FunctionCall\",\n                    src: \"8163:26:21\",\n                    tryCall: false,\n                    typeDescriptions: {\n                      typeIdentifier: \"t_tuple$__$\",\n                      typeString: \"tuple()\",\n                    },\n                  },\n                  id: 43362,\n                  nodeType: \"EmitStatement\",\n                  src: \"8158:31:21\",\n                },\n                {\n                  expression: {\n                    arguments: [\n                      {\n                        id: 43364,\n                        name: \"from\",\n                        nodeType: \"Identifier\",\n                        overloadedDeclarations: [],\n                        referencedDeclaration: 43296,\n                        src: \"8220:4:21\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                      },\n                      {\n                        id: 43365,\n                        name: \"to\",\n                        nodeType: \"Identifier\",\n                        overloadedDeclarations: [],\n                        referencedDeclaration: 43298,\n                        src: \"8226:2:21\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                      },\n                      {\n                        id: 43366,\n                        name: \"amount\",\n                        nodeType: \"Identifier\",\n                        overloadedDeclarations: [],\n                        referencedDeclaration: 43300,\n                        src: \"8230:6:21\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_uint256\",\n                          typeString: \"uint256\",\n                        },\n                      },\n                    ],\n                    expression: {\n                      argumentTypes: [\n                        {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                        {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                        {\n                          typeIdentifier: \"t_uint256\",\n                          typeString: \"uint256\",\n                        },\n                      ],\n                      id: 43363,\n                      name: \"_afterTokenTransfer\",\n                      nodeType: \"Identifier\",\n                      overloadedDeclarations: [],\n                      referencedDeclaration: 43609,\n                      src: \"8200:19:21\",\n                      typeDescriptions: {\n                        typeIdentifier:\n                          \"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$\",\n                        typeString: \"function (address,address,uint256)\",\n                      },\n                    },\n                    id: 43367,\n                    isConstant: false,\n                    isLValue: false,\n                    isPure: false,\n                    kind: \"functionCall\",\n                    lValueRequested: false,\n                    nameLocations: [],\n                    names: [],\n                    nodeType: \"FunctionCall\",\n                    src: \"8200:37:21\",\n                    tryCall: false,\n                    typeDescriptions: {\n                      typeIdentifier: \"t_tuple$__$\",\n                      typeString: \"tuple()\",\n                    },\n                  },\n                  id: 43368,\n                  nodeType: \"ExpressionStatement\",\n                  src: \"8200:37:21\",\n                },\n              ],\n            },\n            documentation: {\n              id: 43294,\n              nodeType: \"StructuredDocumentation\",\n              src: \"7008:443:21\",\n              text: \" @dev Moves `amount` of tokens from `from` to `to`.\\n This internal function is equivalent to {transfer}, and can be used to\\n e.g. implement automatic token fees, slashing mechanisms, etc.\\n Emits a {Transfer} event.\\n Requirements:\\n - `from` cannot be the zero address.\\n - `to` cannot be the zero address.\\n - `from` must have a balance of at least `amount`.\",\n            },\n            implemented: true,\n            kind: \"function\",\n            modifiers: [],\n            name: \"_transfer\",\n            nameLocation: \"7465:9:21\",\n            parameters: {\n              id: 43301,\n              nodeType: \"ParameterList\",\n              parameters: [\n                {\n                  constant: false,\n                  id: 43296,\n                  mutability: \"mutable\",\n                  name: \"from\",\n                  nameLocation: \"7483:4:21\",\n                  nodeType: \"VariableDeclaration\",\n                  scope: 43370,\n                  src: \"7475:12:21\",\n                  stateVariable: false,\n                  storageLocation: \"default\",\n                  typeDescriptions: {\n                    typeIdentifier: \"t_address\",\n                    typeString: \"address\",\n                  },\n                  typeName: {\n                    id: 43295,\n                    name: \"address\",\n                    nodeType: \"ElementaryTypeName\",\n                    src: \"7475:7:21\",\n                    stateMutability: \"nonpayable\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_address\",\n                      typeString: \"address\",\n                    },\n                  },\n                  visibility: \"internal\",\n                },\n                {\n                  constant: false,\n                  id: 43298,\n                  mutability: \"mutable\",\n                  name: \"to\",\n                  nameLocation: \"7497:2:21\",\n                  nodeType: \"VariableDeclaration\",\n                  scope: 43370,\n                  src: \"7489:10:21\",\n                  stateVariable: false,\n                  storageLocation: \"default\",\n                  typeDescriptions: {\n                    typeIdentifier: \"t_address\",\n                    typeString: \"address\",\n                  },\n                  typeName: {\n                    id: 43297,\n                    name: \"address\",\n                    nodeType: \"ElementaryTypeName\",\n                    src: \"7489:7:21\",\n                    stateMutability: \"nonpayable\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_address\",\n                      typeString: \"address\",\n                    },\n                  },\n                  visibility: \"internal\",\n                },\n                {\n                  constant: false,\n                  id: 43300,\n                  mutability: \"mutable\",\n                  name: \"amount\",\n                  nameLocation: \"7509:6:21\",\n                  nodeType: \"VariableDeclaration\",\n                  scope: 43370,\n                  src: \"7501:14:21\",\n                  stateVariable: false,\n                  storageLocation: \"default\",\n                  typeDescriptions: {\n                    typeIdentifier: \"t_uint256\",\n                    typeString: \"uint256\",\n                  },\n                  typeName: {\n                    id: 43299,\n                    name: \"uint256\",\n                    nodeType: \"ElementaryTypeName\",\n                    src: \"7501:7:21\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_uint256\",\n                      typeString: \"uint256\",\n                    },\n                  },\n                  visibility: \"internal\",\n                },\n              ],\n              src: \"7474:42:21\",\n            },\n            returnParameters: {\n              id: 43302,\n              nodeType: \"ParameterList\",\n              parameters: [],\n              src: \"7534:0:21\",\n            },\n            scope: 43610,\n            stateMutability: \"nonpayable\",\n            virtual: true,\n            visibility: \"internal\",\n          },\n          {\n            id: 43427,\n            nodeType: \"FunctionDefinition\",\n            src: \"8520:535:21\",\n            nodes: [],\n            body: {\n              id: 43426,\n              nodeType: \"Block\",\n              src: \"8585:470:21\",\n              nodes: [],\n              statements: [\n                {\n                  expression: {\n                    arguments: [\n                      {\n                        commonType: {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                        id: 43384,\n                        isConstant: false,\n                        isLValue: false,\n                        isPure: false,\n                        lValueRequested: false,\n                        leftExpression: {\n                          id: 43379,\n                          name: \"account\",\n                          nodeType: \"Identifier\",\n                          overloadedDeclarations: [],\n                          referencedDeclaration: 43373,\n                          src: \"8603:7:21\",\n                          typeDescriptions: {\n                            typeIdentifier: \"t_address\",\n                            typeString: \"address\",\n                          },\n                        },\n                        nodeType: \"BinaryOperation\",\n                        operator: \"!=\",\n                        rightExpression: {\n                          arguments: [\n                            {\n                              hexValue: \"30\",\n                              id: 43382,\n                              isConstant: false,\n                              isLValue: false,\n                              isPure: true,\n                              kind: \"number\",\n                              lValueRequested: false,\n                              nodeType: \"Literal\",\n                              src: \"8622:1:21\",\n                              typeDescriptions: {\n                                typeIdentifier: \"t_rational_0_by_1\",\n                                typeString: \"int_const 0\",\n                              },\n                              value: \"0\",\n                            },\n                          ],\n                          expression: {\n                            argumentTypes: [\n                              {\n                                typeIdentifier: \"t_rational_0_by_1\",\n                                typeString: \"int_const 0\",\n                              },\n                            ],\n                            id: 43381,\n                            isConstant: false,\n                            isLValue: false,\n                            isPure: true,\n                            lValueRequested: false,\n                            nodeType: \"ElementaryTypeNameExpression\",\n                            src: \"8614:7:21\",\n                            typeDescriptions: {\n                              typeIdentifier: \"t_type$_t_address_$\",\n                              typeString: \"type(address)\",\n                            },\n                            typeName: {\n                              id: 43380,\n                              name: \"address\",\n                              nodeType: \"ElementaryTypeName\",\n                              src: \"8614:7:21\",\n                              typeDescriptions: {},\n                            },\n                          },\n                          id: 43383,\n                          isConstant: false,\n                          isLValue: false,\n                          isPure: true,\n                          kind: \"typeConversion\",\n                          lValueRequested: false,\n                          nameLocations: [],\n                          names: [],\n                          nodeType: \"FunctionCall\",\n                          src: \"8614:10:21\",\n                          tryCall: false,\n                          typeDescriptions: {\n                            typeIdentifier: \"t_address\",\n                            typeString: \"address\",\n                          },\n                        },\n                        src: \"8603:21:21\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_bool\",\n                          typeString: \"bool\",\n                        },\n                      },\n                      {\n                        hexValue:\n                          \"45524332303a206d696e7420746f20746865207a65726f2061646472657373\",\n                        id: 43385,\n                        isConstant: false,\n                        isLValue: false,\n                        isPure: true,\n                        kind: \"string\",\n                        lValueRequested: false,\n                        nodeType: \"Literal\",\n                        src: \"8626:33:21\",\n                        typeDescriptions: {\n                          typeIdentifier:\n                            \"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e\",\n                          typeString:\n                            'literal_string \"ERC20: mint to the zero address\"',\n                        },\n                        value: \"ERC20: mint to the zero address\",\n                      },\n                    ],\n                    expression: {\n                      argumentTypes: [\n                        {\n                          typeIdentifier: \"t_bool\",\n                          typeString: \"bool\",\n                        },\n                        {\n                          typeIdentifier:\n                            \"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e\",\n                          typeString:\n                            'literal_string \"ERC20: mint to the zero address\"',\n                        },\n                      ],\n                      id: 43378,\n                      name: \"require\",\n                      nodeType: \"Identifier\",\n                      overloadedDeclarations: [-18, -18],\n                      referencedDeclaration: -18,\n                      src: \"8595:7:21\",\n                      typeDescriptions: {\n                        typeIdentifier:\n                          \"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$\",\n                        typeString: \"function (bool,string memory) pure\",\n                      },\n                    },\n                    id: 43386,\n                    isConstant: false,\n                    isLValue: false,\n                    isPure: false,\n                    kind: \"functionCall\",\n                    lValueRequested: false,\n                    nameLocations: [],\n                    names: [],\n                    nodeType: \"FunctionCall\",\n                    src: \"8595:65:21\",\n                    tryCall: false,\n                    typeDescriptions: {\n                      typeIdentifier: \"t_tuple$__$\",\n                      typeString: \"tuple()\",\n                    },\n                  },\n                  id: 43387,\n                  nodeType: \"ExpressionStatement\",\n                  src: \"8595:65:21\",\n                },\n                {\n                  expression: {\n                    arguments: [\n                      {\n                        arguments: [\n                          {\n                            hexValue: \"30\",\n                            id: 43391,\n                            isConstant: false,\n                            isLValue: false,\n                            isPure: true,\n                            kind: \"number\",\n                            lValueRequested: false,\n                            nodeType: \"Literal\",\n                            src: \"8700:1:21\",\n                            typeDescriptions: {\n                              typeIdentifier: \"t_rational_0_by_1\",\n                              typeString: \"int_const 0\",\n                            },\n                            value: \"0\",\n                          },\n                        ],\n                        expression: {\n                          argumentTypes: [\n                            {\n                              typeIdentifier: \"t_rational_0_by_1\",\n                              typeString: \"int_const 0\",\n                            },\n                          ],\n                          id: 43390,\n                          isConstant: false,\n                          isLValue: false,\n                          isPure: true,\n                          lValueRequested: false,\n                          nodeType: \"ElementaryTypeNameExpression\",\n                          src: \"8692:7:21\",\n                          typeDescriptions: {\n                            typeIdentifier: \"t_type$_t_address_$\",\n                            typeString: \"type(address)\",\n                          },\n                          typeName: {\n                            id: 43389,\n                            name: \"address\",\n                            nodeType: \"ElementaryTypeName\",\n                            src: \"8692:7:21\",\n                            typeDescriptions: {},\n                          },\n                        },\n                        id: 43392,\n                        isConstant: false,\n                        isLValue: false,\n                        isPure: true,\n                        kind: \"typeConversion\",\n                        lValueRequested: false,\n                        nameLocations: [],\n                        names: [],\n                        nodeType: \"FunctionCall\",\n                        src: \"8692:10:21\",\n                        tryCall: false,\n                        typeDescriptions: {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                      },\n                      {\n                        id: 43393,\n                        name: \"account\",\n                        nodeType: \"Identifier\",\n                        overloadedDeclarations: [],\n                        referencedDeclaration: 43373,\n                        src: \"8704:7:21\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                      },\n                      {\n                        id: 43394,\n                        name: \"amount\",\n                        nodeType: \"Identifier\",\n                        overloadedDeclarations: [],\n                        referencedDeclaration: 43375,\n                        src: \"8713:6:21\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_uint256\",\n                          typeString: \"uint256\",\n                        },\n                      },\n                    ],\n                    expression: {\n                      argumentTypes: [\n                        {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                        {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                        {\n                          typeIdentifier: \"t_uint256\",\n                          typeString: \"uint256\",\n                        },\n                      ],\n                      id: 43388,\n                      name: \"_beforeTokenTransfer\",\n                      nodeType: \"Identifier\",\n                      overloadedDeclarations: [],\n                      referencedDeclaration: 43598,\n                      src: \"8671:20:21\",\n                      typeDescriptions: {\n                        typeIdentifier:\n                          \"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$\",\n                        typeString: \"function (address,address,uint256)\",\n                      },\n                    },\n                    id: 43395,\n                    isConstant: false,\n                    isLValue: false,\n                    isPure: false,\n                    kind: \"functionCall\",\n                    lValueRequested: false,\n                    nameLocations: [],\n                    names: [],\n                    nodeType: \"FunctionCall\",\n                    src: \"8671:49:21\",\n                    tryCall: false,\n                    typeDescriptions: {\n                      typeIdentifier: \"t_tuple$__$\",\n                      typeString: \"tuple()\",\n                    },\n                  },\n                  id: 43396,\n                  nodeType: \"ExpressionStatement\",\n                  src: \"8671:49:21\",\n                },\n                {\n                  expression: {\n                    id: 43399,\n                    isConstant: false,\n                    isLValue: false,\n                    isPure: false,\n                    lValueRequested: false,\n                    leftHandSide: {\n                      id: 43397,\n                      name: \"_totalSupply\",\n                      nodeType: \"Identifier\",\n                      overloadedDeclarations: [],\n                      referencedDeclaration: 43047,\n                      src: \"8731:12:21\",\n                      typeDescriptions: {\n                        typeIdentifier: \"t_uint256\",\n                        typeString: \"uint256\",\n                      },\n                    },\n                    nodeType: \"Assignment\",\n                    operator: \"+=\",\n                    rightHandSide: {\n                      id: 43398,\n                      name: \"amount\",\n                      nodeType: \"Identifier\",\n                      overloadedDeclarations: [],\n                      referencedDeclaration: 43375,\n                      src: \"8747:6:21\",\n                      typeDescriptions: {\n                        typeIdentifier: \"t_uint256\",\n                        typeString: \"uint256\",\n                      },\n                    },\n                    src: \"8731:22:21\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_uint256\",\n                      typeString: \"uint256\",\n                    },\n                  },\n                  id: 43400,\n                  nodeType: \"ExpressionStatement\",\n                  src: \"8731:22:21\",\n                },\n                {\n                  id: 43407,\n                  nodeType: \"UncheckedBlock\",\n                  src: \"8763:175:21\",\n                  statements: [\n                    {\n                      expression: {\n                        id: 43405,\n                        isConstant: false,\n                        isLValue: false,\n                        isPure: false,\n                        lValueRequested: false,\n                        leftHandSide: {\n                          baseExpression: {\n                            id: 43401,\n                            name: \"_balances\",\n                            nodeType: \"Identifier\",\n                            overloadedDeclarations: [],\n                            referencedDeclaration: 43039,\n                            src: \"8899:9:21\",\n                            typeDescriptions: {\n                              typeIdentifier:\n                                \"t_mapping$_t_address_$_t_uint256_$\",\n                              typeString: \"mapping(address => uint256)\",\n                            },\n                          },\n                          id: 43403,\n                          indexExpression: {\n                            id: 43402,\n                            name: \"account\",\n                            nodeType: \"Identifier\",\n                            overloadedDeclarations: [],\n                            referencedDeclaration: 43373,\n                            src: \"8909:7:21\",\n                            typeDescriptions: {\n                              typeIdentifier: \"t_address\",\n                              typeString: \"address\",\n                            },\n                          },\n                          isConstant: false,\n                          isLValue: true,\n                          isPure: false,\n                          lValueRequested: true,\n                          nodeType: \"IndexAccess\",\n                          src: \"8899:18:21\",\n                          typeDescriptions: {\n                            typeIdentifier: \"t_uint256\",\n                            typeString: \"uint256\",\n                          },\n                        },\n                        nodeType: \"Assignment\",\n                        operator: \"+=\",\n                        rightHandSide: {\n                          id: 43404,\n                          name: \"amount\",\n                          nodeType: \"Identifier\",\n                          overloadedDeclarations: [],\n                          referencedDeclaration: 43375,\n                          src: \"8921:6:21\",\n                          typeDescriptions: {\n                            typeIdentifier: \"t_uint256\",\n                            typeString: \"uint256\",\n                          },\n                        },\n                        src: \"8899:28:21\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_uint256\",\n                          typeString: \"uint256\",\n                        },\n                      },\n                      id: 43406,\n                      nodeType: \"ExpressionStatement\",\n                      src: \"8899:28:21\",\n                    },\n                  ],\n                },\n                {\n                  eventCall: {\n                    arguments: [\n                      {\n                        arguments: [\n                          {\n                            hexValue: \"30\",\n                            id: 43411,\n                            isConstant: false,\n                            isLValue: false,\n                            isPure: true,\n                            kind: \"number\",\n                            lValueRequested: false,\n                            nodeType: \"Literal\",\n                            src: \"8969:1:21\",\n                            typeDescriptions: {\n                              typeIdentifier: \"t_rational_0_by_1\",\n                              typeString: \"int_const 0\",\n                            },\n                            value: \"0\",\n                          },\n                        ],\n                        expression: {\n                          argumentTypes: [\n                            {\n                              typeIdentifier: \"t_rational_0_by_1\",\n                              typeString: \"int_const 0\",\n                            },\n                          ],\n                          id: 43410,\n                          isConstant: false,\n                          isLValue: false,\n                          isPure: true,\n                          lValueRequested: false,\n                          nodeType: \"ElementaryTypeNameExpression\",\n                          src: \"8961:7:21\",\n                          typeDescriptions: {\n                            typeIdentifier: \"t_type$_t_address_$\",\n                            typeString: \"type(address)\",\n                          },\n                          typeName: {\n                            id: 43409,\n                            name: \"address\",\n                            nodeType: \"ElementaryTypeName\",\n                            src: \"8961:7:21\",\n                            typeDescriptions: {},\n                          },\n                        },\n                        id: 43412,\n                        isConstant: false,\n                        isLValue: false,\n                        isPure: true,\n                        kind: \"typeConversion\",\n                        lValueRequested: false,\n                        nameLocations: [],\n                        names: [],\n                        nodeType: \"FunctionCall\",\n                        src: \"8961:10:21\",\n                        tryCall: false,\n                        typeDescriptions: {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                      },\n                      {\n                        id: 43413,\n                        name: \"account\",\n                        nodeType: \"Identifier\",\n                        overloadedDeclarations: [],\n                        referencedDeclaration: 43373,\n                        src: \"8973:7:21\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                      },\n                      {\n                        id: 43414,\n                        name: \"amount\",\n                        nodeType: \"Identifier\",\n                        overloadedDeclarations: [],\n                        referencedDeclaration: 43375,\n                        src: \"8982:6:21\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_uint256\",\n                          typeString: \"uint256\",\n                        },\n                      },\n                    ],\n                    expression: {\n                      argumentTypes: [\n                        {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                        {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                        {\n                          typeIdentifier: \"t_uint256\",\n                          typeString: \"uint256\",\n                        },\n                      ],\n                      id: 43408,\n                      name: \"Transfer\",\n                      nodeType: \"Identifier\",\n                      overloadedDeclarations: [],\n                      referencedDeclaration: 43622,\n                      src: \"8952:8:21\",\n                      typeDescriptions: {\n                        typeIdentifier:\n                          \"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$\",\n                        typeString: \"function (address,address,uint256)\",\n                      },\n                    },\n                    id: 43415,\n                    isConstant: false,\n                    isLValue: false,\n                    isPure: false,\n                    kind: \"functionCall\",\n                    lValueRequested: false,\n                    nameLocations: [],\n                    names: [],\n                    nodeType: \"FunctionCall\",\n                    src: \"8952:37:21\",\n                    tryCall: false,\n                    typeDescriptions: {\n                      typeIdentifier: \"t_tuple$__$\",\n                      typeString: \"tuple()\",\n                    },\n                  },\n                  id: 43416,\n                  nodeType: \"EmitStatement\",\n                  src: \"8947:42:21\",\n                },\n                {\n                  expression: {\n                    arguments: [\n                      {\n                        arguments: [\n                          {\n                            hexValue: \"30\",\n                            id: 43420,\n                            isConstant: false,\n                            isLValue: false,\n                            isPure: true,\n                            kind: \"number\",\n                            lValueRequested: false,\n                            nodeType: \"Literal\",\n                            src: \"9028:1:21\",\n                            typeDescriptions: {\n                              typeIdentifier: \"t_rational_0_by_1\",\n                              typeString: \"int_const 0\",\n                            },\n                            value: \"0\",\n                          },\n                        ],\n                        expression: {\n                          argumentTypes: [\n                            {\n                              typeIdentifier: \"t_rational_0_by_1\",\n                              typeString: \"int_const 0\",\n                            },\n                          ],\n                          id: 43419,\n                          isConstant: false,\n                          isLValue: false,\n                          isPure: true,\n                          lValueRequested: false,\n                          nodeType: \"ElementaryTypeNameExpression\",\n                          src: \"9020:7:21\",\n                          typeDescriptions: {\n                            typeIdentifier: \"t_type$_t_address_$\",\n                            typeString: \"type(address)\",\n                          },\n                          typeName: {\n                            id: 43418,\n                            name: \"address\",\n                            nodeType: \"ElementaryTypeName\",\n                            src: \"9020:7:21\",\n                            typeDescriptions: {},\n                          },\n                        },\n                        id: 43421,\n                        isConstant: false,\n                        isLValue: false,\n                        isPure: true,\n                        kind: \"typeConversion\",\n                        lValueRequested: false,\n                        nameLocations: [],\n                        names: [],\n                        nodeType: \"FunctionCall\",\n                        src: \"9020:10:21\",\n                        tryCall: false,\n                        typeDescriptions: {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                      },\n                      {\n                        id: 43422,\n                        name: \"account\",\n                        nodeType: \"Identifier\",\n                        overloadedDeclarations: [],\n                        referencedDeclaration: 43373,\n                        src: \"9032:7:21\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                      },\n                      {\n                        id: 43423,\n                        name: \"amount\",\n                        nodeType: \"Identifier\",\n                        overloadedDeclarations: [],\n                        referencedDeclaration: 43375,\n                        src: \"9041:6:21\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_uint256\",\n                          typeString: \"uint256\",\n                        },\n                      },\n                    ],\n                    expression: {\n                      argumentTypes: [\n                        {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                        {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                        {\n                          typeIdentifier: \"t_uint256\",\n                          typeString: \"uint256\",\n                        },\n                      ],\n                      id: 43417,\n                      name: \"_afterTokenTransfer\",\n                      nodeType: \"Identifier\",\n                      overloadedDeclarations: [],\n                      referencedDeclaration: 43609,\n                      src: \"9000:19:21\",\n                      typeDescriptions: {\n                        typeIdentifier:\n                          \"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$\",\n                        typeString: \"function (address,address,uint256)\",\n                      },\n                    },\n                    id: 43424,\n                    isConstant: false,\n                    isLValue: false,\n                    isPure: false,\n                    kind: \"functionCall\",\n                    lValueRequested: false,\n                    nameLocations: [],\n                    names: [],\n                    nodeType: \"FunctionCall\",\n                    src: \"9000:48:21\",\n                    tryCall: false,\n                    typeDescriptions: {\n                      typeIdentifier: \"t_tuple$__$\",\n                      typeString: \"tuple()\",\n                    },\n                  },\n                  id: 43425,\n                  nodeType: \"ExpressionStatement\",\n                  src: \"9000:48:21\",\n                },\n              ],\n            },\n            documentation: {\n              id: 43371,\n              nodeType: \"StructuredDocumentation\",\n              src: \"8250:265:21\",\n              text: \"@dev Creates `amount` tokens and assigns them to `account`, increasing\\n the total supply.\\n Emits a {Transfer} event with `from` set to the zero address.\\n Requirements:\\n - `account` cannot be the zero address.\",\n            },\n            implemented: true,\n            kind: \"function\",\n            modifiers: [],\n            name: \"_mint\",\n            nameLocation: \"8529:5:21\",\n            parameters: {\n              id: 43376,\n              nodeType: \"ParameterList\",\n              parameters: [\n                {\n                  constant: false,\n                  id: 43373,\n                  mutability: \"mutable\",\n                  name: \"account\",\n                  nameLocation: \"8543:7:21\",\n                  nodeType: \"VariableDeclaration\",\n                  scope: 43427,\n                  src: \"8535:15:21\",\n                  stateVariable: false,\n                  storageLocation: \"default\",\n                  typeDescriptions: {\n                    typeIdentifier: \"t_address\",\n                    typeString: \"address\",\n                  },\n                  typeName: {\n                    id: 43372,\n                    name: \"address\",\n                    nodeType: \"ElementaryTypeName\",\n                    src: \"8535:7:21\",\n                    stateMutability: \"nonpayable\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_address\",\n                      typeString: \"address\",\n                    },\n                  },\n                  visibility: \"internal\",\n                },\n                {\n                  constant: false,\n                  id: 43375,\n                  mutability: \"mutable\",\n                  name: \"amount\",\n                  nameLocation: \"8560:6:21\",\n                  nodeType: \"VariableDeclaration\",\n                  scope: 43427,\n                  src: \"8552:14:21\",\n                  stateVariable: false,\n                  storageLocation: \"default\",\n                  typeDescriptions: {\n                    typeIdentifier: \"t_uint256\",\n                    typeString: \"uint256\",\n                  },\n                  typeName: {\n                    id: 43374,\n                    name: \"uint256\",\n                    nodeType: \"ElementaryTypeName\",\n                    src: \"8552:7:21\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_uint256\",\n                      typeString: \"uint256\",\n                    },\n                  },\n                  visibility: \"internal\",\n                },\n              ],\n              src: \"8534:33:21\",\n            },\n            returnParameters: {\n              id: 43377,\n              nodeType: \"ParameterList\",\n              parameters: [],\n              src: \"8585:0:21\",\n            },\n            scope: 43610,\n            stateMutability: \"nonpayable\",\n            virtual: true,\n            visibility: \"internal\",\n          },\n          {\n            id: 43499,\n            nodeType: \"FunctionDefinition\",\n            src: \"9375:659:21\",\n            nodes: [],\n            body: {\n              id: 43498,\n              nodeType: \"Block\",\n              src: \"9440:594:21\",\n              nodes: [],\n              statements: [\n                {\n                  expression: {\n                    arguments: [\n                      {\n                        commonType: {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                        id: 43441,\n                        isConstant: false,\n                        isLValue: false,\n                        isPure: false,\n                        lValueRequested: false,\n                        leftExpression: {\n                          id: 43436,\n                          name: \"account\",\n                          nodeType: \"Identifier\",\n                          overloadedDeclarations: [],\n                          referencedDeclaration: 43430,\n                          src: \"9458:7:21\",\n                          typeDescriptions: {\n                            typeIdentifier: \"t_address\",\n                            typeString: \"address\",\n                          },\n                        },\n                        nodeType: \"BinaryOperation\",\n                        operator: \"!=\",\n                        rightExpression: {\n                          arguments: [\n                            {\n                              hexValue: \"30\",\n                              id: 43439,\n                              isConstant: false,\n                              isLValue: false,\n                              isPure: true,\n                              kind: \"number\",\n                              lValueRequested: false,\n                              nodeType: \"Literal\",\n                              src: \"9477:1:21\",\n                              typeDescriptions: {\n                                typeIdentifier: \"t_rational_0_by_1\",\n                                typeString: \"int_const 0\",\n                              },\n                              value: \"0\",\n                            },\n                          ],\n                          expression: {\n                            argumentTypes: [\n                              {\n                                typeIdentifier: \"t_rational_0_by_1\",\n                                typeString: \"int_const 0\",\n                              },\n                            ],\n                            id: 43438,\n                            isConstant: false,\n                            isLValue: false,\n                            isPure: true,\n                            lValueRequested: false,\n                            nodeType: \"ElementaryTypeNameExpression\",\n                            src: \"9469:7:21\",\n                            typeDescriptions: {\n                              typeIdentifier: \"t_type$_t_address_$\",\n                              typeString: \"type(address)\",\n                            },\n                            typeName: {\n                              id: 43437,\n                              name: \"address\",\n                              nodeType: \"ElementaryTypeName\",\n                              src: \"9469:7:21\",\n                              typeDescriptions: {},\n                            },\n                          },\n                          id: 43440,\n                          isConstant: false,\n                          isLValue: false,\n                          isPure: true,\n                          kind: \"typeConversion\",\n                          lValueRequested: false,\n                          nameLocations: [],\n                          names: [],\n                          nodeType: \"FunctionCall\",\n                          src: \"9469:10:21\",\n                          tryCall: false,\n                          typeDescriptions: {\n                            typeIdentifier: \"t_address\",\n                            typeString: \"address\",\n                          },\n                        },\n                        src: \"9458:21:21\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_bool\",\n                          typeString: \"bool\",\n                        },\n                      },\n                      {\n                        hexValue:\n                          \"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373\",\n                        id: 43442,\n                        isConstant: false,\n                        isLValue: false,\n                        isPure: true,\n                        kind: \"string\",\n                        lValueRequested: false,\n                        nodeType: \"Literal\",\n                        src: \"9481:35:21\",\n                        typeDescriptions: {\n                          typeIdentifier:\n                            \"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f\",\n                          typeString:\n                            'literal_string \"ERC20: burn from the zero address\"',\n                        },\n                        value: \"ERC20: burn from the zero address\",\n                      },\n                    ],\n                    expression: {\n                      argumentTypes: [\n                        {\n                          typeIdentifier: \"t_bool\",\n                          typeString: \"bool\",\n                        },\n                        {\n                          typeIdentifier:\n                            \"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f\",\n                          typeString:\n                            'literal_string \"ERC20: burn from the zero address\"',\n                        },\n                      ],\n                      id: 43435,\n                      name: \"require\",\n                      nodeType: \"Identifier\",\n                      overloadedDeclarations: [-18, -18],\n                      referencedDeclaration: -18,\n                      src: \"9450:7:21\",\n                      typeDescriptions: {\n                        typeIdentifier:\n                          \"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$\",\n                        typeString: \"function (bool,string memory) pure\",\n                      },\n                    },\n                    id: 43443,\n                    isConstant: false,\n                    isLValue: false,\n                    isPure: false,\n                    kind: \"functionCall\",\n                    lValueRequested: false,\n                    nameLocations: [],\n                    names: [],\n                    nodeType: \"FunctionCall\",\n                    src: \"9450:67:21\",\n                    tryCall: false,\n                    typeDescriptions: {\n                      typeIdentifier: \"t_tuple$__$\",\n                      typeString: \"tuple()\",\n                    },\n                  },\n                  id: 43444,\n                  nodeType: \"ExpressionStatement\",\n                  src: \"9450:67:21\",\n                },\n                {\n                  expression: {\n                    arguments: [\n                      {\n                        id: 43446,\n                        name: \"account\",\n                        nodeType: \"Identifier\",\n                        overloadedDeclarations: [],\n                        referencedDeclaration: 43430,\n                        src: \"9549:7:21\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                      },\n                      {\n                        arguments: [\n                          {\n                            hexValue: \"30\",\n                            id: 43449,\n                            isConstant: false,\n                            isLValue: false,\n                            isPure: true,\n                            kind: \"number\",\n                            lValueRequested: false,\n                            nodeType: \"Literal\",\n                            src: \"9566:1:21\",\n                            typeDescriptions: {\n                              typeIdentifier: \"t_rational_0_by_1\",\n                              typeString: \"int_const 0\",\n                            },\n                            value: \"0\",\n                          },\n                        ],\n                        expression: {\n                          argumentTypes: [\n                            {\n                              typeIdentifier: \"t_rational_0_by_1\",\n                              typeString: \"int_const 0\",\n                            },\n                          ],\n                          id: 43448,\n                          isConstant: false,\n                          isLValue: false,\n                          isPure: true,\n                          lValueRequested: false,\n                          nodeType: \"ElementaryTypeNameExpression\",\n                          src: \"9558:7:21\",\n                          typeDescriptions: {\n                            typeIdentifier: \"t_type$_t_address_$\",\n                            typeString: \"type(address)\",\n                          },\n                          typeName: {\n                            id: 43447,\n                            name: \"address\",\n                            nodeType: \"ElementaryTypeName\",\n                            src: \"9558:7:21\",\n                            typeDescriptions: {},\n                          },\n                        },\n                        id: 43450,\n                        isConstant: false,\n                        isLValue: false,\n                        isPure: true,\n                        kind: \"typeConversion\",\n                        lValueRequested: false,\n                        nameLocations: [],\n                        names: [],\n                        nodeType: \"FunctionCall\",\n                        src: \"9558:10:21\",\n                        tryCall: false,\n                        typeDescriptions: {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                      },\n                      {\n                        id: 43451,\n                        name: \"amount\",\n                        nodeType: \"Identifier\",\n                        overloadedDeclarations: [],\n                        referencedDeclaration: 43432,\n                        src: \"9570:6:21\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_uint256\",\n                          typeString: \"uint256\",\n                        },\n                      },\n                    ],\n                    expression: {\n                      argumentTypes: [\n                        {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                        {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                        {\n                          typeIdentifier: \"t_uint256\",\n                          typeString: \"uint256\",\n                        },\n                      ],\n                      id: 43445,\n                      name: \"_beforeTokenTransfer\",\n                      nodeType: \"Identifier\",\n                      overloadedDeclarations: [],\n                      referencedDeclaration: 43598,\n                      src: \"9528:20:21\",\n                      typeDescriptions: {\n                        typeIdentifier:\n                          \"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$\",\n                        typeString: \"function (address,address,uint256)\",\n                      },\n                    },\n                    id: 43452,\n                    isConstant: false,\n                    isLValue: false,\n                    isPure: false,\n                    kind: \"functionCall\",\n                    lValueRequested: false,\n                    nameLocations: [],\n                    names: [],\n                    nodeType: \"FunctionCall\",\n                    src: \"9528:49:21\",\n                    tryCall: false,\n                    typeDescriptions: {\n                      typeIdentifier: \"t_tuple$__$\",\n                      typeString: \"tuple()\",\n                    },\n                  },\n                  id: 43453,\n                  nodeType: \"ExpressionStatement\",\n                  src: \"9528:49:21\",\n                },\n                {\n                  assignments: [43455],\n                  declarations: [\n                    {\n                      constant: false,\n                      id: 43455,\n                      mutability: \"mutable\",\n                      name: \"accountBalance\",\n                      nameLocation: \"9596:14:21\",\n                      nodeType: \"VariableDeclaration\",\n                      scope: 43498,\n                      src: \"9588:22:21\",\n                      stateVariable: false,\n                      storageLocation: \"default\",\n                      typeDescriptions: {\n                        typeIdentifier: \"t_uint256\",\n                        typeString: \"uint256\",\n                      },\n                      typeName: {\n                        id: 43454,\n                        name: \"uint256\",\n                        nodeType: \"ElementaryTypeName\",\n                        src: \"9588:7:21\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_uint256\",\n                          typeString: \"uint256\",\n                        },\n                      },\n                      visibility: \"internal\",\n                    },\n                  ],\n                  id: 43459,\n                  initialValue: {\n                    baseExpression: {\n                      id: 43456,\n                      name: \"_balances\",\n                      nodeType: \"Identifier\",\n                      overloadedDeclarations: [],\n                      referencedDeclaration: 43039,\n                      src: \"9613:9:21\",\n                      typeDescriptions: {\n                        typeIdentifier: \"t_mapping$_t_address_$_t_uint256_$\",\n                        typeString: \"mapping(address => uint256)\",\n                      },\n                    },\n                    id: 43458,\n                    indexExpression: {\n                      id: 43457,\n                      name: \"account\",\n                      nodeType: \"Identifier\",\n                      overloadedDeclarations: [],\n                      referencedDeclaration: 43430,\n                      src: \"9623:7:21\",\n                      typeDescriptions: {\n                        typeIdentifier: \"t_address\",\n                        typeString: \"address\",\n                      },\n                    },\n                    isConstant: false,\n                    isLValue: true,\n                    isPure: false,\n                    lValueRequested: false,\n                    nodeType: \"IndexAccess\",\n                    src: \"9613:18:21\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_uint256\",\n                      typeString: \"uint256\",\n                    },\n                  },\n                  nodeType: \"VariableDeclarationStatement\",\n                  src: \"9588:43:21\",\n                },\n                {\n                  expression: {\n                    arguments: [\n                      {\n                        commonType: {\n                          typeIdentifier: \"t_uint256\",\n                          typeString: \"uint256\",\n                        },\n                        id: 43463,\n                        isConstant: false,\n                        isLValue: false,\n                        isPure: false,\n                        lValueRequested: false,\n                        leftExpression: {\n                          id: 43461,\n                          name: \"accountBalance\",\n                          nodeType: \"Identifier\",\n                          overloadedDeclarations: [],\n                          referencedDeclaration: 43455,\n                          src: \"9649:14:21\",\n                          typeDescriptions: {\n                            typeIdentifier: \"t_uint256\",\n                            typeString: \"uint256\",\n                          },\n                        },\n                        nodeType: \"BinaryOperation\",\n                        operator: \">=\",\n                        rightExpression: {\n                          id: 43462,\n                          name: \"amount\",\n                          nodeType: \"Identifier\",\n                          overloadedDeclarations: [],\n                          referencedDeclaration: 43432,\n                          src: \"9667:6:21\",\n                          typeDescriptions: {\n                            typeIdentifier: \"t_uint256\",\n                            typeString: \"uint256\",\n                          },\n                        },\n                        src: \"9649:24:21\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_bool\",\n                          typeString: \"bool\",\n                        },\n                      },\n                      {\n                        hexValue:\n                          \"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365\",\n                        id: 43464,\n                        isConstant: false,\n                        isLValue: false,\n                        isPure: true,\n                        kind: \"string\",\n                        lValueRequested: false,\n                        nodeType: \"Literal\",\n                        src: \"9675:36:21\",\n                        typeDescriptions: {\n                          typeIdentifier:\n                            \"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd\",\n                          typeString:\n                            'literal_string \"ERC20: burn amount exceeds balance\"',\n                        },\n                        value: \"ERC20: burn amount exceeds balance\",\n                      },\n                    ],\n                    expression: {\n                      argumentTypes: [\n                        {\n                          typeIdentifier: \"t_bool\",\n                          typeString: \"bool\",\n                        },\n                        {\n                          typeIdentifier:\n                            \"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd\",\n                          typeString:\n                            'literal_string \"ERC20: burn amount exceeds balance\"',\n                        },\n                      ],\n                      id: 43460,\n                      name: \"require\",\n                      nodeType: \"Identifier\",\n                      overloadedDeclarations: [-18, -18],\n                      referencedDeclaration: -18,\n                      src: \"9641:7:21\",\n                      typeDescriptions: {\n                        typeIdentifier:\n                          \"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$\",\n                        typeString: \"function (bool,string memory) pure\",\n                      },\n                    },\n                    id: 43465,\n                    isConstant: false,\n                    isLValue: false,\n                    isPure: false,\n                    kind: \"functionCall\",\n                    lValueRequested: false,\n                    nameLocations: [],\n                    names: [],\n                    nodeType: \"FunctionCall\",\n                    src: \"9641:71:21\",\n                    tryCall: false,\n                    typeDescriptions: {\n                      typeIdentifier: \"t_tuple$__$\",\n                      typeString: \"tuple()\",\n                    },\n                  },\n                  id: 43466,\n                  nodeType: \"ExpressionStatement\",\n                  src: \"9641:71:21\",\n                },\n                {\n                  id: 43479,\n                  nodeType: \"UncheckedBlock\",\n                  src: \"9722:194:21\",\n                  statements: [\n                    {\n                      expression: {\n                        id: 43473,\n                        isConstant: false,\n                        isLValue: false,\n                        isPure: false,\n                        lValueRequested: false,\n                        leftHandSide: {\n                          baseExpression: {\n                            id: 43467,\n                            name: \"_balances\",\n                            nodeType: \"Identifier\",\n                            overloadedDeclarations: [],\n                            referencedDeclaration: 43039,\n                            src: \"9746:9:21\",\n                            typeDescriptions: {\n                              typeIdentifier:\n                                \"t_mapping$_t_address_$_t_uint256_$\",\n                              typeString: \"mapping(address => uint256)\",\n                            },\n                          },\n                          id: 43469,\n                          indexExpression: {\n                            id: 43468,\n                            name: \"account\",\n                            nodeType: \"Identifier\",\n                            overloadedDeclarations: [],\n                            referencedDeclaration: 43430,\n                            src: \"9756:7:21\",\n                            typeDescriptions: {\n                              typeIdentifier: \"t_address\",\n                              typeString: \"address\",\n                            },\n                          },\n                          isConstant: false,\n                          isLValue: true,\n                          isPure: false,\n                          lValueRequested: true,\n                          nodeType: \"IndexAccess\",\n                          src: \"9746:18:21\",\n                          typeDescriptions: {\n                            typeIdentifier: \"t_uint256\",\n                            typeString: \"uint256\",\n                          },\n                        },\n                        nodeType: \"Assignment\",\n                        operator: \"=\",\n                        rightHandSide: {\n                          commonType: {\n                            typeIdentifier: \"t_uint256\",\n                            typeString: \"uint256\",\n                          },\n                          id: 43472,\n                          isConstant: false,\n                          isLValue: false,\n                          isPure: false,\n                          lValueRequested: false,\n                          leftExpression: {\n                            id: 43470,\n                            name: \"accountBalance\",\n                            nodeType: \"Identifier\",\n                            overloadedDeclarations: [],\n                            referencedDeclaration: 43455,\n                            src: \"9767:14:21\",\n                            typeDescriptions: {\n                              typeIdentifier: \"t_uint256\",\n                              typeString: \"uint256\",\n                            },\n                          },\n                          nodeType: \"BinaryOperation\",\n                          operator: \"-\",\n                          rightExpression: {\n                            id: 43471,\n                            name: \"amount\",\n                            nodeType: \"Identifier\",\n                            overloadedDeclarations: [],\n                            referencedDeclaration: 43432,\n                            src: \"9784:6:21\",\n                            typeDescriptions: {\n                              typeIdentifier: \"t_uint256\",\n                              typeString: \"uint256\",\n                            },\n                          },\n                          src: \"9767:23:21\",\n                          typeDescriptions: {\n                            typeIdentifier: \"t_uint256\",\n                            typeString: \"uint256\",\n                          },\n                        },\n                        src: \"9746:44:21\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_uint256\",\n                          typeString: \"uint256\",\n                        },\n                      },\n                      id: 43474,\n                      nodeType: \"ExpressionStatement\",\n                      src: \"9746:44:21\",\n                    },\n                    {\n                      expression: {\n                        id: 43477,\n                        isConstant: false,\n                        isLValue: false,\n                        isPure: false,\n                        lValueRequested: false,\n                        leftHandSide: {\n                          id: 43475,\n                          name: \"_totalSupply\",\n                          nodeType: \"Identifier\",\n                          overloadedDeclarations: [],\n                          referencedDeclaration: 43047,\n                          src: \"9883:12:21\",\n                          typeDescriptions: {\n                            typeIdentifier: \"t_uint256\",\n                            typeString: \"uint256\",\n                          },\n                        },\n                        nodeType: \"Assignment\",\n                        operator: \"-=\",\n                        rightHandSide: {\n                          id: 43476,\n                          name: \"amount\",\n                          nodeType: \"Identifier\",\n                          overloadedDeclarations: [],\n                          referencedDeclaration: 43432,\n                          src: \"9899:6:21\",\n                          typeDescriptions: {\n                            typeIdentifier: \"t_uint256\",\n                            typeString: \"uint256\",\n                          },\n                        },\n                        src: \"9883:22:21\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_uint256\",\n                          typeString: \"uint256\",\n                        },\n                      },\n                      id: 43478,\n                      nodeType: \"ExpressionStatement\",\n                      src: \"9883:22:21\",\n                    },\n                  ],\n                },\n                {\n                  eventCall: {\n                    arguments: [\n                      {\n                        id: 43481,\n                        name: \"account\",\n                        nodeType: \"Identifier\",\n                        overloadedDeclarations: [],\n                        referencedDeclaration: 43430,\n                        src: \"9940:7:21\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                      },\n                      {\n                        arguments: [\n                          {\n                            hexValue: \"30\",\n                            id: 43484,\n                            isConstant: false,\n                            isLValue: false,\n                            isPure: true,\n                            kind: \"number\",\n                            lValueRequested: false,\n                            nodeType: \"Literal\",\n                            src: \"9957:1:21\",\n                            typeDescriptions: {\n                              typeIdentifier: \"t_rational_0_by_1\",\n                              typeString: \"int_const 0\",\n                            },\n                            value: \"0\",\n                          },\n                        ],\n                        expression: {\n                          argumentTypes: [\n                            {\n                              typeIdentifier: \"t_rational_0_by_1\",\n                              typeString: \"int_const 0\",\n                            },\n                          ],\n                          id: 43483,\n                          isConstant: false,\n                          isLValue: false,\n                          isPure: true,\n                          lValueRequested: false,\n                          nodeType: \"ElementaryTypeNameExpression\",\n                          src: \"9949:7:21\",\n                          typeDescriptions: {\n                            typeIdentifier: \"t_type$_t_address_$\",\n                            typeString: \"type(address)\",\n                          },\n                          typeName: {\n                            id: 43482,\n                            name: \"address\",\n                            nodeType: \"ElementaryTypeName\",\n                            src: \"9949:7:21\",\n                            typeDescriptions: {},\n                          },\n                        },\n                        id: 43485,\n                        isConstant: false,\n                        isLValue: false,\n                        isPure: true,\n                        kind: \"typeConversion\",\n                        lValueRequested: false,\n                        nameLocations: [],\n                        names: [],\n                        nodeType: \"FunctionCall\",\n                        src: \"9949:10:21\",\n                        tryCall: false,\n                        typeDescriptions: {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                      },\n                      {\n                        id: 43486,\n                        name: \"amount\",\n                        nodeType: \"Identifier\",\n                        overloadedDeclarations: [],\n                        referencedDeclaration: 43432,\n                        src: \"9961:6:21\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_uint256\",\n                          typeString: \"uint256\",\n                        },\n                      },\n                    ],\n                    expression: {\n                      argumentTypes: [\n                        {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                        {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                        {\n                          typeIdentifier: \"t_uint256\",\n                          typeString: \"uint256\",\n                        },\n                      ],\n                      id: 43480,\n                      name: \"Transfer\",\n                      nodeType: \"Identifier\",\n                      overloadedDeclarations: [],\n                      referencedDeclaration: 43622,\n                      src: \"9931:8:21\",\n                      typeDescriptions: {\n                        typeIdentifier:\n                          \"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$\",\n                        typeString: \"function (address,address,uint256)\",\n                      },\n                    },\n                    id: 43487,\n                    isConstant: false,\n                    isLValue: false,\n                    isPure: false,\n                    kind: \"functionCall\",\n                    lValueRequested: false,\n                    nameLocations: [],\n                    names: [],\n                    nodeType: \"FunctionCall\",\n                    src: \"9931:37:21\",\n                    tryCall: false,\n                    typeDescriptions: {\n                      typeIdentifier: \"t_tuple$__$\",\n                      typeString: \"tuple()\",\n                    },\n                  },\n                  id: 43488,\n                  nodeType: \"EmitStatement\",\n                  src: \"9926:42:21\",\n                },\n                {\n                  expression: {\n                    arguments: [\n                      {\n                        id: 43490,\n                        name: \"account\",\n                        nodeType: \"Identifier\",\n                        overloadedDeclarations: [],\n                        referencedDeclaration: 43430,\n                        src: \"9999:7:21\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                      },\n                      {\n                        arguments: [\n                          {\n                            hexValue: \"30\",\n                            id: 43493,\n                            isConstant: false,\n                            isLValue: false,\n                            isPure: true,\n                            kind: \"number\",\n                            lValueRequested: false,\n                            nodeType: \"Literal\",\n                            src: \"10016:1:21\",\n                            typeDescriptions: {\n                              typeIdentifier: \"t_rational_0_by_1\",\n                              typeString: \"int_const 0\",\n                            },\n                            value: \"0\",\n                          },\n                        ],\n                        expression: {\n                          argumentTypes: [\n                            {\n                              typeIdentifier: \"t_rational_0_by_1\",\n                              typeString: \"int_const 0\",\n                            },\n                          ],\n                          id: 43492,\n                          isConstant: false,\n                          isLValue: false,\n                          isPure: true,\n                          lValueRequested: false,\n                          nodeType: \"ElementaryTypeNameExpression\",\n                          src: \"10008:7:21\",\n                          typeDescriptions: {\n                            typeIdentifier: \"t_type$_t_address_$\",\n                            typeString: \"type(address)\",\n                          },\n                          typeName: {\n                            id: 43491,\n                            name: \"address\",\n                            nodeType: \"ElementaryTypeName\",\n                            src: \"10008:7:21\",\n                            typeDescriptions: {},\n                          },\n                        },\n                        id: 43494,\n                        isConstant: false,\n                        isLValue: false,\n                        isPure: true,\n                        kind: \"typeConversion\",\n                        lValueRequested: false,\n                        nameLocations: [],\n                        names: [],\n                        nodeType: \"FunctionCall\",\n                        src: \"10008:10:21\",\n                        tryCall: false,\n                        typeDescriptions: {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                      },\n                      {\n                        id: 43495,\n                        name: \"amount\",\n                        nodeType: \"Identifier\",\n                        overloadedDeclarations: [],\n                        referencedDeclaration: 43432,\n                        src: \"10020:6:21\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_uint256\",\n                          typeString: \"uint256\",\n                        },\n                      },\n                    ],\n                    expression: {\n                      argumentTypes: [\n                        {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                        {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                        {\n                          typeIdentifier: \"t_uint256\",\n                          typeString: \"uint256\",\n                        },\n                      ],\n                      id: 43489,\n                      name: \"_afterTokenTransfer\",\n                      nodeType: \"Identifier\",\n                      overloadedDeclarations: [],\n                      referencedDeclaration: 43609,\n                      src: \"9979:19:21\",\n                      typeDescriptions: {\n                        typeIdentifier:\n                          \"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$\",\n                        typeString: \"function (address,address,uint256)\",\n                      },\n                    },\n                    id: 43496,\n                    isConstant: false,\n                    isLValue: false,\n                    isPure: false,\n                    kind: \"functionCall\",\n                    lValueRequested: false,\n                    nameLocations: [],\n                    names: [],\n                    nodeType: \"FunctionCall\",\n                    src: \"9979:48:21\",\n                    tryCall: false,\n                    typeDescriptions: {\n                      typeIdentifier: \"t_tuple$__$\",\n                      typeString: \"tuple()\",\n                    },\n                  },\n                  id: 43497,\n                  nodeType: \"ExpressionStatement\",\n                  src: \"9979:48:21\",\n                },\n              ],\n            },\n            documentation: {\n              id: 43428,\n              nodeType: \"StructuredDocumentation\",\n              src: \"9061:309:21\",\n              text: \" @dev Destroys `amount` tokens from `account`, reducing the\\n total supply.\\n Emits a {Transfer} event with `to` set to the zero address.\\n Requirements:\\n - `account` cannot be the zero address.\\n - `account` must have at least `amount` tokens.\",\n            },\n            implemented: true,\n            kind: \"function\",\n            modifiers: [],\n            name: \"_burn\",\n            nameLocation: \"9384:5:21\",\n            parameters: {\n              id: 43433,\n              nodeType: \"ParameterList\",\n              parameters: [\n                {\n                  constant: false,\n                  id: 43430,\n                  mutability: \"mutable\",\n                  name: \"account\",\n                  nameLocation: \"9398:7:21\",\n                  nodeType: \"VariableDeclaration\",\n                  scope: 43499,\n                  src: \"9390:15:21\",\n                  stateVariable: false,\n                  storageLocation: \"default\",\n                  typeDescriptions: {\n                    typeIdentifier: \"t_address\",\n                    typeString: \"address\",\n                  },\n                  typeName: {\n                    id: 43429,\n                    name: \"address\",\n                    nodeType: \"ElementaryTypeName\",\n                    src: \"9390:7:21\",\n                    stateMutability: \"nonpayable\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_address\",\n                      typeString: \"address\",\n                    },\n                  },\n                  visibility: \"internal\",\n                },\n                {\n                  constant: false,\n                  id: 43432,\n                  mutability: \"mutable\",\n                  name: \"amount\",\n                  nameLocation: \"9415:6:21\",\n                  nodeType: \"VariableDeclaration\",\n                  scope: 43499,\n                  src: \"9407:14:21\",\n                  stateVariable: false,\n                  storageLocation: \"default\",\n                  typeDescriptions: {\n                    typeIdentifier: \"t_uint256\",\n                    typeString: \"uint256\",\n                  },\n                  typeName: {\n                    id: 43431,\n                    name: \"uint256\",\n                    nodeType: \"ElementaryTypeName\",\n                    src: \"9407:7:21\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_uint256\",\n                      typeString: \"uint256\",\n                    },\n                  },\n                  visibility: \"internal\",\n                },\n              ],\n              src: \"9389:33:21\",\n            },\n            returnParameters: {\n              id: 43434,\n              nodeType: \"ParameterList\",\n              parameters: [],\n              src: \"9440:0:21\",\n            },\n            scope: 43610,\n            stateMutability: \"nonpayable\",\n            virtual: true,\n            visibility: \"internal\",\n          },\n          {\n            id: 43544,\n            nodeType: \"FunctionDefinition\",\n            src: \"10457:340:21\",\n            nodes: [],\n            body: {\n              id: 43543,\n              nodeType: \"Block\",\n              src: \"10540:257:21\",\n              nodes: [],\n              statements: [\n                {\n                  expression: {\n                    arguments: [\n                      {\n                        commonType: {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                        id: 43515,\n                        isConstant: false,\n                        isLValue: false,\n                        isPure: false,\n                        lValueRequested: false,\n                        leftExpression: {\n                          id: 43510,\n                          name: \"owner\",\n                          nodeType: \"Identifier\",\n                          overloadedDeclarations: [],\n                          referencedDeclaration: 43502,\n                          src: \"10558:5:21\",\n                          typeDescriptions: {\n                            typeIdentifier: \"t_address\",\n                            typeString: \"address\",\n                          },\n                        },\n                        nodeType: \"BinaryOperation\",\n                        operator: \"!=\",\n                        rightExpression: {\n                          arguments: [\n                            {\n                              hexValue: \"30\",\n                              id: 43513,\n                              isConstant: false,\n                              isLValue: false,\n                              isPure: true,\n                              kind: \"number\",\n                              lValueRequested: false,\n                              nodeType: \"Literal\",\n                              src: \"10575:1:21\",\n                              typeDescriptions: {\n                                typeIdentifier: \"t_rational_0_by_1\",\n                                typeString: \"int_const 0\",\n                              },\n                              value: \"0\",\n                            },\n                          ],\n                          expression: {\n                            argumentTypes: [\n                              {\n                                typeIdentifier: \"t_rational_0_by_1\",\n                                typeString: \"int_const 0\",\n                              },\n                            ],\n                            id: 43512,\n                            isConstant: false,\n                            isLValue: false,\n                            isPure: true,\n                            lValueRequested: false,\n                            nodeType: \"ElementaryTypeNameExpression\",\n                            src: \"10567:7:21\",\n                            typeDescriptions: {\n                              typeIdentifier: \"t_type$_t_address_$\",\n                              typeString: \"type(address)\",\n                            },\n                            typeName: {\n                              id: 43511,\n                              name: \"address\",\n                              nodeType: \"ElementaryTypeName\",\n                              src: \"10567:7:21\",\n                              typeDescriptions: {},\n                            },\n                          },\n                          id: 43514,\n                          isConstant: false,\n                          isLValue: false,\n                          isPure: true,\n                          kind: \"typeConversion\",\n                          lValueRequested: false,\n                          nameLocations: [],\n                          names: [],\n                          nodeType: \"FunctionCall\",\n                          src: \"10567:10:21\",\n                          tryCall: false,\n                          typeDescriptions: {\n                            typeIdentifier: \"t_address\",\n                            typeString: \"address\",\n                          },\n                        },\n                        src: \"10558:19:21\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_bool\",\n                          typeString: \"bool\",\n                        },\n                      },\n                      {\n                        hexValue:\n                          \"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\",\n                        id: 43516,\n                        isConstant: false,\n                        isLValue: false,\n                        isPure: true,\n                        kind: \"string\",\n                        lValueRequested: false,\n                        nodeType: \"Literal\",\n                        src: \"10579:38:21\",\n                        typeDescriptions: {\n                          typeIdentifier:\n                            \"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\",\n                          typeString:\n                            'literal_string \"ERC20: approve from the zero address\"',\n                        },\n                        value: \"ERC20: approve from the zero address\",\n                      },\n                    ],\n                    expression: {\n                      argumentTypes: [\n                        {\n                          typeIdentifier: \"t_bool\",\n                          typeString: \"bool\",\n                        },\n                        {\n                          typeIdentifier:\n                            \"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\",\n                          typeString:\n                            'literal_string \"ERC20: approve from the zero address\"',\n                        },\n                      ],\n                      id: 43509,\n                      name: \"require\",\n                      nodeType: \"Identifier\",\n                      overloadedDeclarations: [-18, -18],\n                      referencedDeclaration: -18,\n                      src: \"10550:7:21\",\n                      typeDescriptions: {\n                        typeIdentifier:\n                          \"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$\",\n                        typeString: \"function (bool,string memory) pure\",\n                      },\n                    },\n                    id: 43517,\n                    isConstant: false,\n                    isLValue: false,\n                    isPure: false,\n                    kind: \"functionCall\",\n                    lValueRequested: false,\n                    nameLocations: [],\n                    names: [],\n                    nodeType: \"FunctionCall\",\n                    src: \"10550:68:21\",\n                    tryCall: false,\n                    typeDescriptions: {\n                      typeIdentifier: \"t_tuple$__$\",\n                      typeString: \"tuple()\",\n                    },\n                  },\n                  id: 43518,\n                  nodeType: \"ExpressionStatement\",\n                  src: \"10550:68:21\",\n                },\n                {\n                  expression: {\n                    arguments: [\n                      {\n                        commonType: {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                        id: 43525,\n                        isConstant: false,\n                        isLValue: false,\n                        isPure: false,\n                        lValueRequested: false,\n                        leftExpression: {\n                          id: 43520,\n                          name: \"spender\",\n                          nodeType: \"Identifier\",\n                          overloadedDeclarations: [],\n                          referencedDeclaration: 43504,\n                          src: \"10636:7:21\",\n                          typeDescriptions: {\n                            typeIdentifier: \"t_address\",\n                            typeString: \"address\",\n                          },\n                        },\n                        nodeType: \"BinaryOperation\",\n                        operator: \"!=\",\n                        rightExpression: {\n                          arguments: [\n                            {\n                              hexValue: \"30\",\n                              id: 43523,\n                              isConstant: false,\n                              isLValue: false,\n                              isPure: true,\n                              kind: \"number\",\n                              lValueRequested: false,\n                              nodeType: \"Literal\",\n                              src: \"10655:1:21\",\n                              typeDescriptions: {\n                                typeIdentifier: \"t_rational_0_by_1\",\n                                typeString: \"int_const 0\",\n                              },\n                              value: \"0\",\n                            },\n                          ],\n                          expression: {\n                            argumentTypes: [\n                              {\n                                typeIdentifier: \"t_rational_0_by_1\",\n                                typeString: \"int_const 0\",\n                              },\n                            ],\n                            id: 43522,\n                            isConstant: false,\n                            isLValue: false,\n                            isPure: true,\n                            lValueRequested: false,\n                            nodeType: \"ElementaryTypeNameExpression\",\n                            src: \"10647:7:21\",\n                            typeDescriptions: {\n                              typeIdentifier: \"t_type$_t_address_$\",\n                              typeString: \"type(address)\",\n                            },\n                            typeName: {\n                              id: 43521,\n                              name: \"address\",\n                              nodeType: \"ElementaryTypeName\",\n                              src: \"10647:7:21\",\n                              typeDescriptions: {},\n                            },\n                          },\n                          id: 43524,\n                          isConstant: false,\n                          isLValue: false,\n                          isPure: true,\n                          kind: \"typeConversion\",\n                          lValueRequested: false,\n                          nameLocations: [],\n                          names: [],\n                          nodeType: \"FunctionCall\",\n                          src: \"10647:10:21\",\n                          tryCall: false,\n                          typeDescriptions: {\n                            typeIdentifier: \"t_address\",\n                            typeString: \"address\",\n                          },\n                        },\n                        src: \"10636:21:21\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_bool\",\n                          typeString: \"bool\",\n                        },\n                      },\n                      {\n                        hexValue:\n                          \"45524332303a20617070726f766520746f20746865207a65726f2061646472657373\",\n                        id: 43526,\n                        isConstant: false,\n                        isLValue: false,\n                        isPure: true,\n                        kind: \"string\",\n                        lValueRequested: false,\n                        nodeType: \"Literal\",\n                        src: \"10659:36:21\",\n                        typeDescriptions: {\n                          typeIdentifier:\n                            \"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\",\n                          typeString:\n                            'literal_string \"ERC20: approve to the zero address\"',\n                        },\n                        value: \"ERC20: approve to the zero address\",\n                      },\n                    ],\n                    expression: {\n                      argumentTypes: [\n                        {\n                          typeIdentifier: \"t_bool\",\n                          typeString: \"bool\",\n                        },\n                        {\n                          typeIdentifier:\n                            \"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\",\n                          typeString:\n                            'literal_string \"ERC20: approve to the zero address\"',\n                        },\n                      ],\n                      id: 43519,\n                      name: \"require\",\n                      nodeType: \"Identifier\",\n                      overloadedDeclarations: [-18, -18],\n                      referencedDeclaration: -18,\n                      src: \"10628:7:21\",\n                      typeDescriptions: {\n                        typeIdentifier:\n                          \"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$\",\n                        typeString: \"function (bool,string memory) pure\",\n                      },\n                    },\n                    id: 43527,\n                    isConstant: false,\n                    isLValue: false,\n                    isPure: false,\n                    kind: \"functionCall\",\n                    lValueRequested: false,\n                    nameLocations: [],\n                    names: [],\n                    nodeType: \"FunctionCall\",\n                    src: \"10628:68:21\",\n                    tryCall: false,\n                    typeDescriptions: {\n                      typeIdentifier: \"t_tuple$__$\",\n                      typeString: \"tuple()\",\n                    },\n                  },\n                  id: 43528,\n                  nodeType: \"ExpressionStatement\",\n                  src: \"10628:68:21\",\n                },\n                {\n                  expression: {\n                    id: 43535,\n                    isConstant: false,\n                    isLValue: false,\n                    isPure: false,\n                    lValueRequested: false,\n                    leftHandSide: {\n                      baseExpression: {\n                        baseExpression: {\n                          id: 43529,\n                          name: \"_allowances\",\n                          nodeType: \"Identifier\",\n                          overloadedDeclarations: [],\n                          referencedDeclaration: 43045,\n                          src: \"10707:11:21\",\n                          typeDescriptions: {\n                            typeIdentifier:\n                              \"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$\",\n                            typeString:\n                              \"mapping(address => mapping(address => uint256))\",\n                          },\n                        },\n                        id: 43532,\n                        indexExpression: {\n                          id: 43530,\n                          name: \"owner\",\n                          nodeType: \"Identifier\",\n                          overloadedDeclarations: [],\n                          referencedDeclaration: 43502,\n                          src: \"10719:5:21\",\n                          typeDescriptions: {\n                            typeIdentifier: \"t_address\",\n                            typeString: \"address\",\n                          },\n                        },\n                        isConstant: false,\n                        isLValue: true,\n                        isPure: false,\n                        lValueRequested: false,\n                        nodeType: \"IndexAccess\",\n                        src: \"10707:18:21\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_mapping$_t_address_$_t_uint256_$\",\n                          typeString: \"mapping(address => uint256)\",\n                        },\n                      },\n                      id: 43533,\n                      indexExpression: {\n                        id: 43531,\n                        name: \"spender\",\n                        nodeType: \"Identifier\",\n                        overloadedDeclarations: [],\n                        referencedDeclaration: 43504,\n                        src: \"10726:7:21\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                      },\n                      isConstant: false,\n                      isLValue: true,\n                      isPure: false,\n                      lValueRequested: true,\n                      nodeType: \"IndexAccess\",\n                      src: \"10707:27:21\",\n                      typeDescriptions: {\n                        typeIdentifier: \"t_uint256\",\n                        typeString: \"uint256\",\n                      },\n                    },\n                    nodeType: \"Assignment\",\n                    operator: \"=\",\n                    rightHandSide: {\n                      id: 43534,\n                      name: \"amount\",\n                      nodeType: \"Identifier\",\n                      overloadedDeclarations: [],\n                      referencedDeclaration: 43506,\n                      src: \"10737:6:21\",\n                      typeDescriptions: {\n                        typeIdentifier: \"t_uint256\",\n                        typeString: \"uint256\",\n                      },\n                    },\n                    src: \"10707:36:21\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_uint256\",\n                      typeString: \"uint256\",\n                    },\n                  },\n                  id: 43536,\n                  nodeType: \"ExpressionStatement\",\n                  src: \"10707:36:21\",\n                },\n                {\n                  eventCall: {\n                    arguments: [\n                      {\n                        id: 43538,\n                        name: \"owner\",\n                        nodeType: \"Identifier\",\n                        overloadedDeclarations: [],\n                        referencedDeclaration: 43502,\n                        src: \"10767:5:21\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                      },\n                      {\n                        id: 43539,\n                        name: \"spender\",\n                        nodeType: \"Identifier\",\n                        overloadedDeclarations: [],\n                        referencedDeclaration: 43504,\n                        src: \"10774:7:21\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                      },\n                      {\n                        id: 43540,\n                        name: \"amount\",\n                        nodeType: \"Identifier\",\n                        overloadedDeclarations: [],\n                        referencedDeclaration: 43506,\n                        src: \"10783:6:21\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_uint256\",\n                          typeString: \"uint256\",\n                        },\n                      },\n                    ],\n                    expression: {\n                      argumentTypes: [\n                        {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                        {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                        {\n                          typeIdentifier: \"t_uint256\",\n                          typeString: \"uint256\",\n                        },\n                      ],\n                      id: 43537,\n                      name: \"Approval\",\n                      nodeType: \"Identifier\",\n                      overloadedDeclarations: [],\n                      referencedDeclaration: 43631,\n                      src: \"10758:8:21\",\n                      typeDescriptions: {\n                        typeIdentifier:\n                          \"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$\",\n                        typeString: \"function (address,address,uint256)\",\n                      },\n                    },\n                    id: 43541,\n                    isConstant: false,\n                    isLValue: false,\n                    isPure: false,\n                    kind: \"functionCall\",\n                    lValueRequested: false,\n                    nameLocations: [],\n                    names: [],\n                    nodeType: \"FunctionCall\",\n                    src: \"10758:32:21\",\n                    tryCall: false,\n                    typeDescriptions: {\n                      typeIdentifier: \"t_tuple$__$\",\n                      typeString: \"tuple()\",\n                    },\n                  },\n                  id: 43542,\n                  nodeType: \"EmitStatement\",\n                  src: \"10753:37:21\",\n                },\n              ],\n            },\n            documentation: {\n              id: 43500,\n              nodeType: \"StructuredDocumentation\",\n              src: \"10040:412:21\",\n              text: \" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n This internal function is equivalent to `approve`, and can be used to\\n e.g. set automatic allowances for certain subsystems, etc.\\n Emits an {Approval} event.\\n Requirements:\\n - `owner` cannot be the zero address.\\n - `spender` cannot be the zero address.\",\n            },\n            implemented: true,\n            kind: \"function\",\n            modifiers: [],\n            name: \"_approve\",\n            nameLocation: \"10466:8:21\",\n            parameters: {\n              id: 43507,\n              nodeType: \"ParameterList\",\n              parameters: [\n                {\n                  constant: false,\n                  id: 43502,\n                  mutability: \"mutable\",\n                  name: \"owner\",\n                  nameLocation: \"10483:5:21\",\n                  nodeType: \"VariableDeclaration\",\n                  scope: 43544,\n                  src: \"10475:13:21\",\n                  stateVariable: false,\n                  storageLocation: \"default\",\n                  typeDescriptions: {\n                    typeIdentifier: \"t_address\",\n                    typeString: \"address\",\n                  },\n                  typeName: {\n                    id: 43501,\n                    name: \"address\",\n                    nodeType: \"ElementaryTypeName\",\n                    src: \"10475:7:21\",\n                    stateMutability: \"nonpayable\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_address\",\n                      typeString: \"address\",\n                    },\n                  },\n                  visibility: \"internal\",\n                },\n                {\n                  constant: false,\n                  id: 43504,\n                  mutability: \"mutable\",\n                  name: \"spender\",\n                  nameLocation: \"10498:7:21\",\n                  nodeType: \"VariableDeclaration\",\n                  scope: 43544,\n                  src: \"10490:15:21\",\n                  stateVariable: false,\n                  storageLocation: \"default\",\n                  typeDescriptions: {\n                    typeIdentifier: \"t_address\",\n                    typeString: \"address\",\n                  },\n                  typeName: {\n                    id: 43503,\n                    name: \"address\",\n                    nodeType: \"ElementaryTypeName\",\n                    src: \"10490:7:21\",\n                    stateMutability: \"nonpayable\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_address\",\n                      typeString: \"address\",\n                    },\n                  },\n                  visibility: \"internal\",\n                },\n                {\n                  constant: false,\n                  id: 43506,\n                  mutability: \"mutable\",\n                  name: \"amount\",\n                  nameLocation: \"10515:6:21\",\n                  nodeType: \"VariableDeclaration\",\n                  scope: 43544,\n                  src: \"10507:14:21\",\n                  stateVariable: false,\n                  storageLocation: \"default\",\n                  typeDescriptions: {\n                    typeIdentifier: \"t_uint256\",\n                    typeString: \"uint256\",\n                  },\n                  typeName: {\n                    id: 43505,\n                    name: \"uint256\",\n                    nodeType: \"ElementaryTypeName\",\n                    src: \"10507:7:21\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_uint256\",\n                      typeString: \"uint256\",\n                    },\n                  },\n                  visibility: \"internal\",\n                },\n              ],\n              src: \"10474:48:21\",\n            },\n            returnParameters: {\n              id: 43508,\n              nodeType: \"ParameterList\",\n              parameters: [],\n              src: \"10540:0:21\",\n            },\n            scope: 43610,\n            stateMutability: \"nonpayable\",\n            virtual: true,\n            visibility: \"internal\",\n          },\n          {\n            id: 43587,\n            nodeType: \"FunctionDefinition\",\n            src: \"11078:411:21\",\n            nodes: [],\n            body: {\n              id: 43586,\n              nodeType: \"Block\",\n              src: \"11168:321:21\",\n              nodes: [],\n              statements: [\n                {\n                  assignments: [43555],\n                  declarations: [\n                    {\n                      constant: false,\n                      id: 43555,\n                      mutability: \"mutable\",\n                      name: \"currentAllowance\",\n                      nameLocation: \"11186:16:21\",\n                      nodeType: \"VariableDeclaration\",\n                      scope: 43586,\n                      src: \"11178:24:21\",\n                      stateVariable: false,\n                      storageLocation: \"default\",\n                      typeDescriptions: {\n                        typeIdentifier: \"t_uint256\",\n                        typeString: \"uint256\",\n                      },\n                      typeName: {\n                        id: 43554,\n                        name: \"uint256\",\n                        nodeType: \"ElementaryTypeName\",\n                        src: \"11178:7:21\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_uint256\",\n                          typeString: \"uint256\",\n                        },\n                      },\n                      visibility: \"internal\",\n                    },\n                  ],\n                  id: 43560,\n                  initialValue: {\n                    arguments: [\n                      {\n                        id: 43557,\n                        name: \"owner\",\n                        nodeType: \"Identifier\",\n                        overloadedDeclarations: [],\n                        referencedDeclaration: 43547,\n                        src: \"11215:5:21\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                      },\n                      {\n                        id: 43558,\n                        name: \"spender\",\n                        nodeType: \"Identifier\",\n                        overloadedDeclarations: [],\n                        referencedDeclaration: 43549,\n                        src: \"11222:7:21\",\n                        typeDescriptions: {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                      },\n                    ],\n                    expression: {\n                      argumentTypes: [\n                        {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                        {\n                          typeIdentifier: \"t_address\",\n                          typeString: \"address\",\n                        },\n                      ],\n                      id: 43556,\n                      name: \"allowance\",\n                      nodeType: \"Identifier\",\n                      overloadedDeclarations: [],\n                      referencedDeclaration: 43165,\n                      src: \"11205:9:21\",\n                      typeDescriptions: {\n                        typeIdentifier:\n                          \"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$\",\n                        typeString:\n                          \"function (address,address) view returns (uint256)\",\n                      },\n                    },\n                    id: 43559,\n                    isConstant: false,\n                    isLValue: false,\n                    isPure: false,\n                    kind: \"functionCall\",\n                    lValueRequested: false,\n                    nameLocations: [],\n                    names: [],\n                    nodeType: \"FunctionCall\",\n                    src: \"11205:25:21\",\n                    tryCall: false,\n                    typeDescriptions: {\n                      typeIdentifier: \"t_uint256\",\n                      typeString: \"uint256\",\n                    },\n                  },\n                  nodeType: \"VariableDeclarationStatement\",\n                  src: \"11178:52:21\",\n                },\n                {\n                  condition: {\n                    commonType: {\n                      typeIdentifier: \"t_uint256\",\n                      typeString: \"uint256\",\n                    },\n                    id: 43567,\n                    isConstant: false,\n                    isLValue: false,\n                    isPure: false,\n                    lValueRequested: false,\n                    leftExpression: {\n                      id: 43561,\n                      name: \"currentAllowance\",\n                      nodeType: \"Identifier\",\n                      overloadedDeclarations: [],\n                      referencedDeclaration: 43555,\n                      src: \"11244:16:21\",\n                      typeDescriptions: {\n                        typeIdentifier: \"t_uint256\",\n                        typeString: \"uint256\",\n                      },\n                    },\n                    nodeType: \"BinaryOperation\",\n                    operator: \"!=\",\n                    rightExpression: {\n                      expression: {\n                        arguments: [\n                          {\n                            id: 43564,\n                            isConstant: false,\n                            isLValue: false,\n                            isPure: true,\n                            lValueRequested: false,\n                            nodeType: \"ElementaryTypeNameExpression\",\n                            src: \"11269:7:21\",\n                            typeDescriptions: {\n                              typeIdentifier: \"t_type$_t_uint256_$\",\n                              typeString: \"type(uint256)\",\n                            },\n                            typeName: {\n                              id: 43563,\n                              name: \"uint256\",\n                              nodeType: \"ElementaryTypeName\",\n                              src: \"11269:7:21\",\n                              typeDescriptions: {},\n                            },\n                          },\n                        ],\n                        expression: {\n                          argumentTypes: [\n                            {\n                              typeIdentifier: \"t_type$_t_uint256_$\",\n                              typeString: \"type(uint256)\",\n                            },\n                          ],\n                          id: 43562,\n                          name: \"type\",\n                          nodeType: \"Identifier\",\n                          overloadedDeclarations: [],\n                          referencedDeclaration: -27,\n                          src: \"11264:4:21\",\n                          typeDescriptions: {\n                            typeIdentifier:\n                              \"t_function_metatype_pure$__$returns$__$\",\n                            typeString: \"function () pure\",\n                          },\n                        },\n                        id: 43565,\n                        isConstant: false,\n                        isLValue: false,\n                        isPure: true,\n                        kind: \"functionCall\",\n                        lValueRequested: false,\n                        nameLocations: [],\n                        names: [],\n                        nodeType: \"FunctionCall\",\n                        src: \"11264:13:21\",\n                        tryCall: false,\n                        typeDescriptions: {\n                          typeIdentifier: \"t_magic_meta_type_t_uint256\",\n                          typeString: \"type(uint256)\",\n                        },\n                      },\n                      id: 43566,\n                      isConstant: false,\n                      isLValue: false,\n                      isPure: true,\n                      lValueRequested: false,\n                      memberLocation: \"11278:3:21\",\n                      memberName: \"max\",\n                      nodeType: \"MemberAccess\",\n                      src: \"11264:17:21\",\n                      typeDescriptions: {\n                        typeIdentifier: \"t_uint256\",\n                        typeString: \"uint256\",\n                      },\n                    },\n                    src: \"11244:37:21\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_bool\",\n                      typeString: \"bool\",\n                    },\n                  },\n                  id: 43585,\n                  nodeType: \"IfStatement\",\n                  src: \"11240:243:21\",\n                  trueBody: {\n                    id: 43584,\n                    nodeType: \"Block\",\n                    src: \"11283:200:21\",\n                    statements: [\n                      {\n                        expression: {\n                          arguments: [\n                            {\n                              commonType: {\n                                typeIdentifier: \"t_uint256\",\n                                typeString: \"uint256\",\n                              },\n                              id: 43571,\n                              isConstant: false,\n                              isLValue: false,\n                              isPure: false,\n                              lValueRequested: false,\n                              leftExpression: {\n                                id: 43569,\n                                name: \"currentAllowance\",\n                                nodeType: \"Identifier\",\n                                overloadedDeclarations: [],\n                                referencedDeclaration: 43555,\n                                src: \"11305:16:21\",\n                                typeDescriptions: {\n                                  typeIdentifier: \"t_uint256\",\n                                  typeString: \"uint256\",\n                                },\n                              },\n                              nodeType: \"BinaryOperation\",\n                              operator: \">=\",\n                              rightExpression: {\n                                id: 43570,\n                                name: \"amount\",\n                                nodeType: \"Identifier\",\n                                overloadedDeclarations: [],\n                                referencedDeclaration: 43551,\n                                src: \"11325:6:21\",\n                                typeDescriptions: {\n                                  typeIdentifier: \"t_uint256\",\n                                  typeString: \"uint256\",\n                                },\n                              },\n                              src: \"11305:26:21\",\n                              typeDescriptions: {\n                                typeIdentifier: \"t_bool\",\n                                typeString: \"bool\",\n                              },\n                            },\n                            {\n                              hexValue:\n                                \"45524332303a20696e73756666696369656e7420616c6c6f77616e6365\",\n                              id: 43572,\n                              isConstant: false,\n                              isLValue: false,\n                              isPure: true,\n                              kind: \"string\",\n                              lValueRequested: false,\n                              nodeType: \"Literal\",\n                              src: \"11333:31:21\",\n                              typeDescriptions: {\n                                typeIdentifier:\n                                  \"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe\",\n                                typeString:\n                                  'literal_string \"ERC20: insufficient allowance\"',\n                              },\n                              value: \"ERC20: insufficient allowance\",\n                            },\n                          ],\n                          expression: {\n                            argumentTypes: [\n                              {\n                                typeIdentifier: \"t_bool\",\n                                typeString: \"bool\",\n                              },\n                              {\n                                typeIdentifier:\n                                  \"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe\",\n                                typeString:\n                                  'literal_string \"ERC20: insufficient allowance\"',\n                              },\n                            ],\n                            id: 43568,\n                            name: \"require\",\n                            nodeType: \"Identifier\",\n                            overloadedDeclarations: [-18, -18],\n                            referencedDeclaration: -18,\n                            src: \"11297:7:21\",\n                            typeDescriptions: {\n                              typeIdentifier:\n                                \"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$\",\n                              typeString: \"function (bool,string memory) pure\",\n                            },\n                          },\n                          id: 43573,\n                          isConstant: false,\n                          isLValue: false,\n                          isPure: false,\n                          kind: \"functionCall\",\n                          lValueRequested: false,\n                          nameLocations: [],\n                          names: [],\n                          nodeType: \"FunctionCall\",\n                          src: \"11297:68:21\",\n                          tryCall: false,\n                          typeDescriptions: {\n                            typeIdentifier: \"t_tuple$__$\",\n                            typeString: \"tuple()\",\n                          },\n                        },\n                        id: 43574,\n                        nodeType: \"ExpressionStatement\",\n                        src: \"11297:68:21\",\n                      },\n                      {\n                        id: 43583,\n                        nodeType: \"UncheckedBlock\",\n                        src: \"11379:94:21\",\n                        statements: [\n                          {\n                            expression: {\n                              arguments: [\n                                {\n                                  id: 43576,\n                                  name: \"owner\",\n                                  nodeType: \"Identifier\",\n                                  overloadedDeclarations: [],\n                                  referencedDeclaration: 43547,\n                                  src: \"11416:5:21\",\n                                  typeDescriptions: {\n                                    typeIdentifier: \"t_address\",\n                                    typeString: \"address\",\n                                  },\n                                },\n                                {\n                                  id: 43577,\n                                  name: \"spender\",\n                                  nodeType: \"Identifier\",\n                                  overloadedDeclarations: [],\n                                  referencedDeclaration: 43549,\n                                  src: \"11423:7:21\",\n                                  typeDescriptions: {\n                                    typeIdentifier: \"t_address\",\n                                    typeString: \"address\",\n                                  },\n                                },\n                                {\n                                  commonType: {\n                                    typeIdentifier: \"t_uint256\",\n                                    typeString: \"uint256\",\n                                  },\n                                  id: 43580,\n                                  isConstant: false,\n                                  isLValue: false,\n                                  isPure: false,\n                                  lValueRequested: false,\n                                  leftExpression: {\n                                    id: 43578,\n                                    name: \"currentAllowance\",\n                                    nodeType: \"Identifier\",\n                                    overloadedDeclarations: [],\n                                    referencedDeclaration: 43555,\n                                    src: \"11432:16:21\",\n                                    typeDescriptions: {\n                                      typeIdentifier: \"t_uint256\",\n                                      typeString: \"uint256\",\n                                    },\n                                  },\n                                  nodeType: \"BinaryOperation\",\n                                  operator: \"-\",\n                                  rightExpression: {\n                                    id: 43579,\n                                    name: \"amount\",\n                                    nodeType: \"Identifier\",\n                                    overloadedDeclarations: [],\n                                    referencedDeclaration: 43551,\n                                    src: \"11451:6:21\",\n                                    typeDescriptions: {\n                                      typeIdentifier: \"t_uint256\",\n                                      typeString: \"uint256\",\n                                    },\n                                  },\n                                  src: \"11432:25:21\",\n                                  typeDescriptions: {\n                                    typeIdentifier: \"t_uint256\",\n                                    typeString: \"uint256\",\n                                  },\n                                },\n                              ],\n                              expression: {\n                                argumentTypes: [\n                                  {\n                                    typeIdentifier: \"t_address\",\n                                    typeString: \"address\",\n                                  },\n                                  {\n                                    typeIdentifier: \"t_address\",\n                                    typeString: \"address\",\n                                  },\n                                  {\n                                    typeIdentifier: \"t_uint256\",\n                                    typeString: \"uint256\",\n                                  },\n                                ],\n                                id: 43575,\n                                name: \"_approve\",\n                                nodeType: \"Identifier\",\n                                overloadedDeclarations: [],\n                                referencedDeclaration: 43544,\n                                src: \"11407:8:21\",\n                                typeDescriptions: {\n                                  typeIdentifier:\n                                    \"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$\",\n                                  typeString:\n                                    \"function (address,address,uint256)\",\n                                },\n                              },\n                              id: 43581,\n                              isConstant: false,\n                              isLValue: false,\n                              isPure: false,\n                              kind: \"functionCall\",\n                              lValueRequested: false,\n                              nameLocations: [],\n                              names: [],\n                              nodeType: \"FunctionCall\",\n                              src: \"11407:51:21\",\n                              tryCall: false,\n                              typeDescriptions: {\n                                typeIdentifier: \"t_tuple$__$\",\n                                typeString: \"tuple()\",\n                              },\n                            },\n                            id: 43582,\n                            nodeType: \"ExpressionStatement\",\n                            src: \"11407:51:21\",\n                          },\n                        ],\n                      },\n                    ],\n                  },\n                },\n              ],\n            },\n            documentation: {\n              id: 43545,\n              nodeType: \"StructuredDocumentation\",\n              src: \"10803:270:21\",\n              text: \" @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n Does not update the allowance amount in case of infinite allowance.\\n Revert if not enough allowance is available.\\n Might emit an {Approval} event.\",\n            },\n            implemented: true,\n            kind: \"function\",\n            modifiers: [],\n            name: \"_spendAllowance\",\n            nameLocation: \"11087:15:21\",\n            parameters: {\n              id: 43552,\n              nodeType: \"ParameterList\",\n              parameters: [\n                {\n                  constant: false,\n                  id: 43547,\n                  mutability: \"mutable\",\n                  name: \"owner\",\n                  nameLocation: \"11111:5:21\",\n                  nodeType: \"VariableDeclaration\",\n                  scope: 43587,\n                  src: \"11103:13:21\",\n                  stateVariable: false,\n                  storageLocation: \"default\",\n                  typeDescriptions: {\n                    typeIdentifier: \"t_address\",\n                    typeString: \"address\",\n                  },\n                  typeName: {\n                    id: 43546,\n                    name: \"address\",\n                    nodeType: \"ElementaryTypeName\",\n                    src: \"11103:7:21\",\n                    stateMutability: \"nonpayable\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_address\",\n                      typeString: \"address\",\n                    },\n                  },\n                  visibility: \"internal\",\n                },\n                {\n                  constant: false,\n                  id: 43549,\n                  mutability: \"mutable\",\n                  name: \"spender\",\n                  nameLocation: \"11126:7:21\",\n                  nodeType: \"VariableDeclaration\",\n                  scope: 43587,\n                  src: \"11118:15:21\",\n                  stateVariable: false,\n                  storageLocation: \"default\",\n                  typeDescriptions: {\n                    typeIdentifier: \"t_address\",\n                    typeString: \"address\",\n                  },\n                  typeName: {\n                    id: 43548,\n                    name: \"address\",\n                    nodeType: \"ElementaryTypeName\",\n                    src: \"11118:7:21\",\n                    stateMutability: \"nonpayable\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_address\",\n                      typeString: \"address\",\n                    },\n                  },\n                  visibility: \"internal\",\n                },\n                {\n                  constant: false,\n                  id: 43551,\n                  mutability: \"mutable\",\n                  name: \"amount\",\n                  nameLocation: \"11143:6:21\",\n                  nodeType: \"VariableDeclaration\",\n                  scope: 43587,\n                  src: \"11135:14:21\",\n                  stateVariable: false,\n                  storageLocation: \"default\",\n                  typeDescriptions: {\n                    typeIdentifier: \"t_uint256\",\n                    typeString: \"uint256\",\n                  },\n                  typeName: {\n                    id: 43550,\n                    name: \"uint256\",\n                    nodeType: \"ElementaryTypeName\",\n                    src: \"11135:7:21\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_uint256\",\n                      typeString: \"uint256\",\n                    },\n                  },\n                  visibility: \"internal\",\n                },\n              ],\n              src: \"11102:48:21\",\n            },\n            returnParameters: {\n              id: 43553,\n              nodeType: \"ParameterList\",\n              parameters: [],\n              src: \"11168:0:21\",\n            },\n            scope: 43610,\n            stateMutability: \"nonpayable\",\n            virtual: true,\n            visibility: \"internal\",\n          },\n          {\n            id: 43598,\n            nodeType: \"FunctionDefinition\",\n            src: \"12073:91:21\",\n            nodes: [],\n            body: {\n              id: 43597,\n              nodeType: \"Block\",\n              src: \"12162:2:21\",\n              nodes: [],\n              statements: [],\n            },\n            documentation: {\n              id: 43588,\n              nodeType: \"StructuredDocumentation\",\n              src: \"11495:573:21\",\n              text: \" @dev Hook that is called before any transfer of tokens. This includes\\n minting and burning.\\n Calling conditions:\\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n will be transferred to `to`.\\n - when `from` is zero, `amount` tokens will be minted for `to`.\\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n - `from` and `to` are never both zero.\\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\",\n            },\n            implemented: true,\n            kind: \"function\",\n            modifiers: [],\n            name: \"_beforeTokenTransfer\",\n            nameLocation: \"12082:20:21\",\n            parameters: {\n              id: 43595,\n              nodeType: \"ParameterList\",\n              parameters: [\n                {\n                  constant: false,\n                  id: 43590,\n                  mutability: \"mutable\",\n                  name: \"from\",\n                  nameLocation: \"12111:4:21\",\n                  nodeType: \"VariableDeclaration\",\n                  scope: 43598,\n                  src: \"12103:12:21\",\n                  stateVariable: false,\n                  storageLocation: \"default\",\n                  typeDescriptions: {\n                    typeIdentifier: \"t_address\",\n                    typeString: \"address\",\n                  },\n                  typeName: {\n                    id: 43589,\n                    name: \"address\",\n                    nodeType: \"ElementaryTypeName\",\n                    src: \"12103:7:21\",\n                    stateMutability: \"nonpayable\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_address\",\n                      typeString: \"address\",\n                    },\n                  },\n                  visibility: \"internal\",\n                },\n                {\n                  constant: false,\n                  id: 43592,\n                  mutability: \"mutable\",\n                  name: \"to\",\n                  nameLocation: \"12125:2:21\",\n                  nodeType: \"VariableDeclaration\",\n                  scope: 43598,\n                  src: \"12117:10:21\",\n                  stateVariable: false,\n                  storageLocation: \"default\",\n                  typeDescriptions: {\n                    typeIdentifier: \"t_address\",\n                    typeString: \"address\",\n                  },\n                  typeName: {\n                    id: 43591,\n                    name: \"address\",\n                    nodeType: \"ElementaryTypeName\",\n                    src: \"12117:7:21\",\n                    stateMutability: \"nonpayable\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_address\",\n                      typeString: \"address\",\n                    },\n                  },\n                  visibility: \"internal\",\n                },\n                {\n                  constant: false,\n                  id: 43594,\n                  mutability: \"mutable\",\n                  name: \"amount\",\n                  nameLocation: \"12137:6:21\",\n                  nodeType: \"VariableDeclaration\",\n                  scope: 43598,\n                  src: \"12129:14:21\",\n                  stateVariable: false,\n                  storageLocation: \"default\",\n                  typeDescriptions: {\n                    typeIdentifier: \"t_uint256\",\n                    typeString: \"uint256\",\n                  },\n                  typeName: {\n                    id: 43593,\n                    name: \"uint256\",\n                    nodeType: \"ElementaryTypeName\",\n                    src: \"12129:7:21\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_uint256\",\n                      typeString: \"uint256\",\n                    },\n                  },\n                  visibility: \"internal\",\n                },\n              ],\n              src: \"12102:42:21\",\n            },\n            returnParameters: {\n              id: 43596,\n              nodeType: \"ParameterList\",\n              parameters: [],\n              src: \"12162:0:21\",\n            },\n            scope: 43610,\n            stateMutability: \"nonpayable\",\n            virtual: true,\n            visibility: \"internal\",\n          },\n          {\n            id: 43609,\n            nodeType: \"FunctionDefinition\",\n            src: \"12752:90:21\",\n            nodes: [],\n            body: {\n              id: 43608,\n              nodeType: \"Block\",\n              src: \"12840:2:21\",\n              nodes: [],\n              statements: [],\n            },\n            documentation: {\n              id: 43599,\n              nodeType: \"StructuredDocumentation\",\n              src: \"12170:577:21\",\n              text: \" @dev Hook that is called after any transfer of tokens. This includes\\n minting and burning.\\n Calling conditions:\\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n has been transferred to `to`.\\n - when `from` is zero, `amount` tokens have been minted for `to`.\\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n - `from` and `to` are never both zero.\\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\",\n            },\n            implemented: true,\n            kind: \"function\",\n            modifiers: [],\n            name: \"_afterTokenTransfer\",\n            nameLocation: \"12761:19:21\",\n            parameters: {\n              id: 43606,\n              nodeType: \"ParameterList\",\n              parameters: [\n                {\n                  constant: false,\n                  id: 43601,\n                  mutability: \"mutable\",\n                  name: \"from\",\n                  nameLocation: \"12789:4:21\",\n                  nodeType: \"VariableDeclaration\",\n                  scope: 43609,\n                  src: \"12781:12:21\",\n                  stateVariable: false,\n                  storageLocation: \"default\",\n                  typeDescriptions: {\n                    typeIdentifier: \"t_address\",\n                    typeString: \"address\",\n                  },\n                  typeName: {\n                    id: 43600,\n                    name: \"address\",\n                    nodeType: \"ElementaryTypeName\",\n                    src: \"12781:7:21\",\n                    stateMutability: \"nonpayable\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_address\",\n                      typeString: \"address\",\n                    },\n                  },\n                  visibility: \"internal\",\n                },\n                {\n                  constant: false,\n                  id: 43603,\n                  mutability: \"mutable\",\n                  name: \"to\",\n                  nameLocation: \"12803:2:21\",\n                  nodeType: \"VariableDeclaration\",\n                  scope: 43609,\n                  src: \"12795:10:21\",\n                  stateVariable: false,\n                  storageLocation: \"default\",\n                  typeDescriptions: {\n                    typeIdentifier: \"t_address\",\n                    typeString: \"address\",\n                  },\n                  typeName: {\n                    id: 43602,\n                    name: \"address\",\n                    nodeType: \"ElementaryTypeName\",\n                    src: \"12795:7:21\",\n                    stateMutability: \"nonpayable\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_address\",\n                      typeString: \"address\",\n                    },\n                  },\n                  visibility: \"internal\",\n                },\n                {\n                  constant: false,\n                  id: 43605,\n                  mutability: \"mutable\",\n                  name: \"amount\",\n                  nameLocation: \"12815:6:21\",\n                  nodeType: \"VariableDeclaration\",\n                  scope: 43609,\n                  src: \"12807:14:21\",\n                  stateVariable: false,\n                  storageLocation: \"default\",\n                  typeDescriptions: {\n                    typeIdentifier: \"t_uint256\",\n                    typeString: \"uint256\",\n                  },\n                  typeName: {\n                    id: 43604,\n                    name: \"uint256\",\n                    nodeType: \"ElementaryTypeName\",\n                    src: \"12807:7:21\",\n                    typeDescriptions: {\n                      typeIdentifier: \"t_uint256\",\n                      typeString: \"uint256\",\n                    },\n                  },\n                  visibility: \"internal\",\n                },\n              ],\n              src: \"12780:42:21\",\n            },\n            returnParameters: {\n              id: 43607,\n              nodeType: \"ParameterList\",\n              parameters: [],\n              src: \"12840:0:21\",\n            },\n            scope: 43610,\n            stateMutability: \"nonpayable\",\n            virtual: true,\n            visibility: \"internal\",\n          },\n        ],\n        abstract: false,\n        baseContracts: [\n          {\n            baseName: {\n              id: 43030,\n              name: \"Context\",\n              nameLocations: [\"1550:7:21\"],\n              nodeType: \"IdentifierPath\",\n              referencedDeclaration: 45397,\n              src: \"1550:7:21\",\n            },\n            id: 43031,\n            nodeType: \"InheritanceSpecifier\",\n            src: \"1550:7:21\",\n          },\n          {\n            baseName: {\n              id: 43032,\n              name: \"IERC20\",\n              nameLocations: [\"1559:6:21\"],\n              nodeType: \"IdentifierPath\",\n              referencedDeclaration: 43688,\n              src: \"1559:6:21\",\n            },\n            id: 43033,\n            nodeType: \"InheritanceSpecifier\",\n            src: \"1559:6:21\",\n          },\n          {\n            baseName: {\n              id: 43034,\n              name: \"IERC20Metadata\",\n              nameLocations: [\"1567:14:21\"],\n              nodeType: \"IdentifierPath\",\n              referencedDeclaration: 43713,\n              src: \"1567:14:21\",\n            },\n            id: 43035,\n            nodeType: \"InheritanceSpecifier\",\n            src: \"1567:14:21\",\n          },\n        ],\n        canonicalName: \"ERC20\",\n        contractDependencies: [],\n        contractKind: \"contract\",\n        documentation: {\n          id: 43029,\n          nodeType: \"StructuredDocumentation\",\n          src: \"230:1301:21\",\n          text: \" @dev Implementation of the {IERC20} interface.\\n This implementation is agnostic to the way tokens are created. This means\\n that a supply mechanism has to be added in a derived contract using {_mint}.\\n For a generic mechanism see {ERC20PresetMinterPauser}.\\n TIP: For a detailed writeup see our guide\\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n to implement supply mechanisms].\\n The default value of {decimals} is 18. To change this, you should override\\n this function so it returns a different value.\\n We have followed general OpenZeppelin Contracts guidelines: functions revert\\n instead returning `false` on failure. This behavior is nonetheless\\n conventional and does not conflict with the expectations of ERC20\\n applications.\\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n This allows applications to reconstruct the allowance for all accounts just\\n by listening to said events. Other implementations of the EIP may not emit\\n these events, as it isn't required by the specification.\\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n functions have been added to mitigate the well-known issues around setting\\n allowances. See {IERC20-approve}.\",\n        },\n        fullyImplemented: true,\n        linearizedBaseContracts: [43610, 43713, 43688, 45397],\n        name: \"ERC20\",\n        nameLocation: \"1541:5:21\",\n        scope: 43611,\n        usedErrors: [],\n      },\n    ],\n    license: \"MIT\",\n  },\n  id: 21,\n};\n","// Chain ID to network and contract config.\n// (see https://chainlist.org/)\nexport const config = {\n  11155111: {\n    name: \"sepolia\",\n    algoBullAddress: \"0xF3c144FC829f6351241568b7200E622fb0fb0421\",\n    stablecoinAddress: \"0x779877A7B0D9E8603169DdbD7836e478b4624789\",\n    scanURL: \"https://sepolia.etherscan.io\",\n  },\n};\n\nexport const networks = () => {\n  const names = [];\n  for (const prop in config) {\n    names.push(config[prop].name);\n  }\n  console.log(names);\n  return names;\n};\n\nexport const isSupported = (chainId) =>\n  Object.keys(config).includes(chainId.toString());\n","import \"./main.css\";\nimport { Elm } from \"./Main.elm\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { ethers } from \"ethers\";\nimport algobullABI from \"./AlgoBullABI\";\nimport erc20ABI from \"./Erc20ABI\";\nimport { config, isSupported, networks } from \"./chainConfig\";\nimport * as dotenv from \"dotenv\";\n\ndotenv.config();\n\nconst app = Elm.Main.init({\n  node: document.getElementById(\"root\"),\n  flags: !!window.ethereum,\n});\n\nconst refreshOnNetworkChange = () => {\n  const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n  provider.on(\"network\", (newNetwork, oldNetwork) => {\n    if (oldNetwork) {\n      window.location.reload();\n    }\n  });\n};\n\napp.ports.accountRequested.subscribe(async function () {\n  try {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    await provider.send(\"eth_requestAccounts\", []);\n    const { chainId } = await provider.getNetwork();\n\n    refreshOnNetworkChange();\n\n    if (!isSupported(chainId)) {\n      app.ports.accountFailed.send(\n        `This network is not supported by this app. Please switch to a supported network: ${networks()}`\n      );\n    } else {\n      const network = config[chainId].name;\n\n      const networkConfig = config[chainId];\n      const signer = await provider.getSigner();\n      const address = await signer.getAddress();\n\n      const algobullContract = new ethers.Contract(\n        networkConfig.algoBullAddress,\n        algobullABI.abi,\n        provider\n      ).connect(signer);\n\n      const stablecoinContract = new ethers.Contract(\n        networkConfig.stablecoinAddress,\n        erc20ABI.abi,\n        provider\n      ).connect(signer);\n\n      const stablecoinSymbol = await stablecoinContract.symbol();\n      const stablecoinFeeBig = await algobullContract.mintFee();\n      const ethBalanceBig = await provider.getBalance(address);\n      const stablecoinBalanceBig = await stablecoinContract.balanceOf(address);\n      const algobullBalanceBig = await algobullContract.balanceOf(address);\n\n      const stablecoinFee = ethers.utils.formatEther(stablecoinFeeBig);\n      const stablecoinBalance = ethers.utils.formatEther(stablecoinBalanceBig);\n      const ethBalance = ethers.utils.formatUnits(ethBalanceBig);\n\n      console.log(ethBalance);\n\n      const wallet = {\n        address,\n        stablecoinBalance,\n        stablecoinSymbol,\n        ethBalance,\n        network,\n        stablecoinFee,\n        algobullBalance: algobullBalanceBig.toString(),\n      };\n\n      console.log(wallet);\n\n      app.ports.accountSucceeded.send(wallet);\n    }\n  } catch (e) {\n    console.log(e);\n    app.ports.accountFailed.send(\"No account detected for this network.\");\n  }\n});\n\napp.ports.approveRequested.subscribe(async function (quantity) {\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\n  const { chainId } = await provider.getNetwork();\n  if (isSupported(chainId)) {\n    const signer = provider.getSigner();\n    const networkConfig = config[chainId];\n\n    console.log(networkConfig.stablecoinAddress);\n\n    const stablecoinContract = new ethers.Contract(\n      networkConfig.stablecoinAddress,\n      erc20ABI.abi,\n      provider\n    ).connect(signer);\n\n    const algoBullAddress = networkConfig.algoBullAddress;\n\n    approve(\n      networkConfig,\n      signer,\n      stablecoinContract,\n      provider,\n      algoBullAddress,\n      quantity\n    );\n  } else {\n    app.ports.networkError.send(\n      `Network with chain id ${chainId} is not supported. Please switch to one of the following supported networks: mumbai, goerli, sepolia.`\n    );\n  }\n});\n\nfunction approve(\n  networkConfig,\n  signer,\n  contract,\n  provider,\n  algoBullAddress,\n  quantity\n) {\n  provider.send(\"eth_requestAccounts\", []).then(async () => {\n    const allowanceBig = await contract.allowance(\n      signer.getAddress(),\n      algoBullAddress\n    );\n    const decimals = await contract.decimals();\n    const quantityBig = ethers.utils.parseUnits(quantity + \"\", decimals);\n    if (allowanceBig.gte(quantityBig)) {\n      app.ports.approveSucceeded.send(\"\");\n    } else {\n      contract\n        .approve(algoBullAddress, quantity)\n        .then(async (res) => {\n          const txnUrl = `${networkConfig.scanURL}/tx/${res.hash}`;\n          console.log(txnUrl);\n          await res.wait();\n\n          app.ports.approveSucceeded.send(\"\");\n        })\n        .catch((err) => {\n          console.log(\"err\");\n          app.ports.approveFailed.send(\"Token approval failed.\");\n        });\n    }\n  });\n}\n\napp.ports.mintRequested.subscribe(async function (quantity) {\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\n  const { chainId } = await provider.getNetwork();\n  if (isSupported(chainId)) {\n    const signer = provider.getSigner();\n    const networkConfig = config[chainId];\n    const contract = new ethers.Contract(\n      networkConfig.algoBullAddress,\n      algobullABI.abi,\n      provider\n    ).connect(signer);\n\n    mint(networkConfig, signer, contract, provider, quantity);\n  } else {\n    app.ports.networkError.send(\n      `Network with chain id ${chainId} is not supported. Please switch to one of the following supported networks: mumbai, goerli, sepolia.`\n    );\n  }\n});\n\nfunction mint(networkConfig, signer, contract, provider, quantity) {\n  provider.send(\"eth_requestAccounts\", []).then(async () => {\n    contract\n      .mintMultiple(await signer.getAddress(), quantity)\n      .then(async (res) => {\n        const txnUrl = `${networkConfig.scanURL}/tx/${res.hash}`;\n        await res.wait();\n\n        app.ports.mintSucceeded.send(txnUrl);\n      })\n      .catch((err) => {\n        app.ports.mintFailed.send(\"\");\n      });\n  });\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}